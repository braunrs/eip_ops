---
title: "Bella Procaccio"
date: "`r Sys.Date()`"
lightbox:
  match: auto
about:
  id: hero-heading
  template: solana
  image: blank_staff.jpg
  image-width: 15em
format:
  html: 
    grid:
      sidebar-width: 200px
      body-width: 1050px
      margin-width: 250px
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```

```{r Data, include=FALSE}

rm(list=ls(all=T))

library(dplyr)
library(tidyverse)
library(lubridate)
library(plotly)
library(ggplot2)
library(reactable)
library(htmltools)
library(lubridate)
library(hrbrthemes)
library(gt)
library(janitor)
library(scales)
library(apyramid)
library(kableExtra)
library(knitr)
library(zoo)

### EIP Database Data
# 2023
eip23 <- read.csv('M:/EIP Data/EIP Database/REDCap Ver 5.0/EIP Database Data 20240415_1100.csv')
dim(eip23)
summary(eip23$record_id)
eip23$record_id <- paste(eip23$record_id, "_23", sep = "")
summary(eip23$record_id)

# 2024
eip24 <- read.csv('M:/EIP Data/EIP Database/REDCap 2024/EIP Database Data 20240429_0804.csv')
dim(eip24)
summary(eip24$record_id)
eip24$record_id <- paste(eip24$record_id, "_23", sep = "")
summary(eip24$record_id)

```

```{r Patient Data to Encounter, include=FALSE}

### Person-level data is only visit_001_arm_1, use to match to encounters

# 2023
table(eip23$redcap_event_name)
person <- eip23[which(eip23$redcap_event_name == 'visit_001_arm_1'), ]
dim(person)

person <- select(person, record_id, mrn, dob, 
                 race___1, race___2, race___3, race___4, race___5, race___6, ethnicity,
                 sex_raised, sex_selfdefined, insurance, address_county,
                 address_zip_code,
                 followup_date1, followup_date2, followup_date3, followup_date4,
                 followup_date5, followup_date6, followup_date7, followup_date8,
                 followup_date9, followup_date10, followup_date11, followup_date12,
                 followup_date13, followup_date14, followup_date15, followup_date16,
                 followup_date17, followup_date18, followup_date19, followup_date20,
                 followup_date21, followup_date22, followup_date23, followup_date24,
                 followup_date25, followup_date26, followup_date27, followup_date28,
                 followup_date29, followup_date30, followup_date31, followup_date32,
                 followup_date33, followup_date34, followup_date35, followup_date36,
                 followup_date37, followup_date38, followup_date39, followup_date40,
                 followup_date41, followup_date42, followup_date43, followup_date44,
                 followup_date45, followup_date46, followup_date47, followup_date48,
                 followup_date49, followup_date50, followup_counselor1, followup_counselor2,
                 followup_counselor3, followup_counselor4, followup_counselor5,
                 followup_counselor6, followup_counselor7, followup_counselor8,
                 followup_counselor9, followup_counselor10, followup_counselor11,
                 followup_counselor12, followup_counselor13, followup_counselor14,
                 followup_counselor15, followup_counselor16, followup_counselor17,
                 followup_counselor18, followup_counselor19, followup_counselor20,
                 followup_counselor21, followup_counselor22, followup_counselor23,
                 followup_counselor24, followup_counselor25, followup_counselor26,
                 followup_counselor27, followup_counselor28, followup_counselor29,
                 followup_counselor30, followup_counselor31, followup_counselor32,
                 followup_counselor33, followup_counselor34, followup_counselor35,
                 followup_counselor36, followup_counselor37, followup_counselor38,
                 followup_counselor39, followup_counselor40, followup_counselor41,
                 followup_counselor42, followup_counselor43, followup_counselor44,
                 followup_counselor45, followup_counselor46, followup_counselor47,
                 followup_counselor48, followup_counselor49, followup_counselor50,
                 ltc_service1___8, ltc_service2___8,
                 ltc_service3___8, ltc_service4___8, ltc_service5___8,
                 ltc_service6___8, ltc_service7___8, ltc_service8___8,
                 ltc_service9___8, ltc_service10___8, ltc_service11___8,
                 ltc_service12___8, ltc_service13___8, ltc_service14___8,
                 ltc_service15___8, ltc_service16___8, ltc_service17___8,
                 ltc_service18___8, ltc_service19___8, ltc_service20___8,
                 ltc_service21___8, ltc_service22___8, ltc_service23___8,
                 ltc_service24___8, ltc_service25___8, ltc_service26___8,
                 ltc_service27___8, ltc_service28___8, ltc_service29___8,
                 ltc_service30___8, ltc_service31___8, ltc_service32___8,
                 ltc_service33___8, ltc_service34___8, ltc_service35___8,
                 ltc_service36___8, ltc_service37___8, ltc_service38___8,
                 ltc_service39___8, ltc_service40___8, ltc_service41___8,
                 ltc_service42___8, ltc_service43___8, ltc_service44___8,
                 ltc_service45___8, ltc_service46___8, ltc_service47___8,
                 ltc_service48___8, ltc_service49___8, ltc_service50___8,
                 naccho_contact_day1, naccho_contact_day2,
                 naccho_contact_day3, naccho_contact_day4, naccho_contact_day5,
                 naccho_contact_day6, naccho_contact_day7, naccho_contact_day8,
                 naccho_contact_day9, naccho_contact_day10, naccho_contact_day11,
                 naccho_contact_day12, naccho_contact_day13, naccho_contact_day14,
                 naccho_contact_day15, naccho_contact_day16, naccho_contact_day17,
                 naccho_contact_day18, naccho_contact_day19, naccho_contact_day20,
                 naccho_contact_day21, naccho_contact_day22, naccho_contact_day23,
                 naccho_contact_day24, naccho_contact_day25, naccho_contact_day26,
                 naccho_contact_day27, naccho_contact_day28, naccho_contact_day29,
                 naccho_contact_day30, naccho_contact_day31, naccho_contact_day32,
                 naccho_contact_day33, naccho_contact_day34, naccho_contact_day35,
                 naccho_contact_day36, naccho_contact_day37, naccho_contact_day38,
                 naccho_contact_day39, naccho_contact_day40, naccho_contact_day41,
                 naccho_contact_day42, naccho_contact_day43, naccho_contact_day44,
                 naccho_contact_day45, naccho_contact_day46, naccho_contact_day47,
                 naccho_contact_day48, naccho_contact_day49, naccho_contact_day50,
                 naccho_contact_confirm_tx1, naccho_contact_confirm_tx2,
                 naccho_contact_confirm_tx3, naccho_contact_confirm_tx4, naccho_contact_confirm_tx5,
                 naccho_contact_confirm_tx6, naccho_contact_confirm_tx7, naccho_contact_confirm_tx8,
                 naccho_contact_confirm_tx9, naccho_contact_confirm_tx10, naccho_contact_confirm_tx11,
                 naccho_contact_confirm_tx12, naccho_contact_confirm_tx13, naccho_contact_confirm_tx14,
                 naccho_contact_confirm_tx15, naccho_contact_confirm_tx16, naccho_contact_confirm_tx17,
                 naccho_contact_confirm_tx18, naccho_contact_confirm_tx19, naccho_contact_confirm_tx20,
                 naccho_contact_confirm_tx21, naccho_contact_confirm_tx22, naccho_contact_confirm_tx23,
                 naccho_contact_confirm_tx24, naccho_contact_confirm_tx25, naccho_contact_confirm_tx26,
                 naccho_contact_confirm_tx27, naccho_contact_confirm_tx28, naccho_contact_confirm_tx29,
                 naccho_contact_confirm_tx30, naccho_contact_confirm_tx31, naccho_contact_confirm_tx32,
                 naccho_contact_confirm_tx33, naccho_contact_confirm_tx34, naccho_contact_confirm_tx35,
                 naccho_contact_confirm_tx36, naccho_contact_confirm_tx37, naccho_contact_confirm_tx38,
                 naccho_contact_confirm_tx39, naccho_contact_confirm_tx40, naccho_contact_confirm_tx41,
                 naccho_contact_confirm_tx42, naccho_contact_confirm_tx43, naccho_contact_confirm_tx44,
                 naccho_contact_confirm_tx45, naccho_contact_confirm_tx46, naccho_contact_confirm_tx47,
                 naccho_contact_confirm_tx48, naccho_contact_confirm_tx49, naccho_contact_confirm_tx50,
                 who_initiated_contact1, who_initiated_contact2, who_initiated_contact3, who_initiated_contact4, who_initiated_contact5,
                 who_initiated_contact6, who_initiated_contact7, who_initiated_contact8, who_initiated_contact9, who_initiated_contact10,
                 who_initiated_contact11, who_initiated_contact12, who_initiated_contact13, who_initiated_contact14,
                 who_initiated_contact15, who_initiated_contact16, who_initiated_contact17, who_initiated_contact18,
                 who_initiated_contact19, who_initiated_contact20, who_initiated_contact21, who_initiated_contact22,
                 who_initiated_contact23, who_initiated_contact24, who_initiated_contact25, who_initiated_contact26,
                 who_initiated_contact27, who_initiated_contact28, who_initiated_contact29, who_initiated_contact30,
                 who_initiated_contact31, who_initiated_contact32, who_initiated_contact33, who_initiated_contact34,
                 who_initiated_contact35, who_initiated_contact36, who_initiated_contact37, who_initiated_contact38,
                 who_initiated_contact39, who_initiated_contact40, who_initiated_contact41, who_initiated_contact42,
                 who_initiated_contact43, who_initiated_contact44, who_initiated_contact45, who_initiated_contact46,
                 who_initiated_contact47, who_initiated_contact48, who_initiated_contact49, who_initiated_contact50,
                 contact_with1, contact_with2, contact_with3, contact_with4, contact_with5,
                 contact_with6, contact_with7, contact_with8, contact_with9, contact_with10,
                 contact_with11, contact_with12, contact_with13, contact_with14,
                 contact_with15, contact_with16, contact_with17, contact_with18,
                 contact_with19, contact_with20, contact_with21, contact_with22,
                 contact_with23, contact_with24, contact_with25, contact_with26,
                 contact_with27, contact_with28, contact_with29, contact_with30,
                 contact_with31, contact_with32, contact_with33, contact_with34,
                 contact_with35, contact_with36, contact_with37, contact_with38,
                 contact_with39, contact_with40, contact_with41, contact_with42,
                 contact_with43, contact_with44, contact_with45, contact_with46,
                 contact_with47, contact_with48, contact_with49, contact_with50,
                 ltc_contact1, ltc_contact2, ltc_contact3, ltc_contact4, ltc_contact5,
                 ltc_contact6, ltc_contact7, ltc_contact8, ltc_contact9, ltc_contact10,
                 ltc_contact11, ltc_contact12, ltc_contact13, ltc_contact14, ltc_contact15,
                 ltc_contact16, ltc_contact17, ltc_contact18, ltc_contact19, ltc_contact20,
                 ltc_contact21, ltc_contact22, ltc_contact23, ltc_contact24, ltc_contact25,
                 ltc_contact26, ltc_contact27, ltc_contact28, ltc_contact29, ltc_contact30,
                 ltc_contact31, ltc_contact32, ltc_contact33, ltc_contact34, ltc_contact35,
                 ltc_contact36, ltc_contact37, ltc_contact38, ltc_contact39, ltc_contact40,
                 ltc_contact41, ltc_contact42, ltc_contact43, ltc_contact44, ltc_contact45,
                 ltc_contact46, ltc_contact47, ltc_contact48, ltc_contact49, ltc_contact50,
                 no_contact_reason1, no_contact_reason2, no_contact_reason3, no_contact_reason4, no_contact_reason5,
                 no_contact_reason6, no_contact_reason7, no_contact_reason8, no_contact_reason9, no_contact_reason10,
                 no_contact_reason11, no_contact_reason12, no_contact_reason13, no_contact_reason14,
                 no_contact_reason15, no_contact_reason16, no_contact_reason17, no_contact_reason18,
                 no_contact_reason19, no_contact_reason20, no_contact_reason21, no_contact_reason22,
                 no_contact_reason23, no_contact_reason24, no_contact_reason25, no_contact_reason26,
                 no_contact_reason27, no_contact_reason28, no_contact_reason29, no_contact_reason30,
                 no_contact_reason31, no_contact_reason32, no_contact_reason33, no_contact_reason34,
                 no_contact_reason35, no_contact_reason36, no_contact_reason37, no_contact_reason38,
                 no_contact_reason39, no_contact_reason40, no_contact_reason41, no_contact_reason42,
                 no_contact_reason43, no_contact_reason44, no_contact_reason45, no_contact_reason46,
                 no_contact_reason47, no_contact_reason48, no_contact_reason49, no_contact_reason50)
dim(person)

eip23 <- select(eip23, -mrn, -dob, 
               -race___1, -race___2, -race___3, -race___4, -race___5, 
               -race___6, -ethnicity,
               -sex_raised, -sex_selfdefined, -insurance, -address_county,
               -address_zip_code,
               -followup_date1, -followup_date2, -followup_date3, -followup_date4,
               -followup_date5, -followup_date6, -followup_date7, -followup_date8,
               -followup_date9, -followup_date10, -followup_date11, -followup_date12,
               -followup_date13, -followup_date14, -followup_date15, -followup_date16,
               -followup_date17, -followup_date18, -followup_date19, -followup_date20,
               -followup_date21, -followup_date22, -followup_date23, -followup_date24,
               -followup_date25, -followup_date26, -followup_date27, -followup_date28,
               -followup_date29, -followup_date30, -followup_date31, -followup_date32,
               -followup_date33, -followup_date34, -followup_date35, -followup_date36,
               -followup_date37, -followup_date38, -followup_date39, -followup_date40,
               -followup_date41, -followup_date42, -followup_date43, -followup_date44,
               -followup_date45, -followup_date46, -followup_date47, -followup_date48,
               -followup_date49, -followup_date50, -followup_counselor1, -followup_counselor2,
               -followup_counselor3, -followup_counselor4, -followup_counselor5,
               -followup_counselor6, -followup_counselor7, -followup_counselor8,
               -followup_counselor9, -followup_counselor10, -followup_counselor11,
               -followup_counselor12, -followup_counselor13, -followup_counselor14,
               -followup_counselor15, -followup_counselor16, -followup_counselor17,
               -followup_counselor18, -followup_counselor19, -followup_counselor20,
               -followup_counselor21, -followup_counselor22, -followup_counselor23,
               -followup_counselor24, -followup_counselor25, -followup_counselor26,
               -followup_counselor27, -followup_counselor28, -followup_counselor29,
               -followup_counselor30, -followup_counselor31, -followup_counselor32,
               -followup_counselor33, -followup_counselor34, -followup_counselor35,
               -followup_counselor36, -followup_counselor37, -followup_counselor38,
               -followup_counselor39, -followup_counselor40, -followup_counselor41,
               -followup_counselor42, -followup_counselor43, -followup_counselor44,
               -followup_counselor45, -followup_counselor46, -followup_counselor47,
               -followup_counselor48, -followup_counselor49, -followup_counselor50,
               -ltc_service1___8, -ltc_service2___8,
               -ltc_service3___8, -ltc_service4___8, -ltc_service5___8,
               -ltc_service6___8, -ltc_service7___8, -ltc_service8___8,
               -ltc_service9___8, -ltc_service10___8, -ltc_service11___8,
               -ltc_service12___8, -ltc_service13___8, -ltc_service14___8,
               -ltc_service15___8, -ltc_service16___8, -ltc_service17___8,
               -ltc_service18___8, -ltc_service19___8, -ltc_service20___8,
               -ltc_service21___8, -ltc_service22___8, -ltc_service23___8,
               -ltc_service24___8, -ltc_service25___8, -ltc_service26___8,
               -ltc_service27___8, -ltc_service28___8, -ltc_service29___8,
               -ltc_service30___8, -ltc_service31___8, -ltc_service32___8,
               -ltc_service33___8, -ltc_service34___8, -ltc_service35___8,
               -ltc_service36___8, -ltc_service37___8, -ltc_service38___8,
               -ltc_service39___8, -ltc_service40___8, -ltc_service41___8,
               -ltc_service42___8, -ltc_service43___8, -ltc_service44___8,
               -ltc_service45___8, -ltc_service46___8, -ltc_service47___8,
               -ltc_service48___8, -ltc_service49___8, -ltc_service50___8,
               -naccho_contact_day1, -naccho_contact_day2,
               -naccho_contact_day3, -naccho_contact_day4, -naccho_contact_day5,
               -naccho_contact_day6, -naccho_contact_day7, -naccho_contact_day8,
               -naccho_contact_day9, -naccho_contact_day10, -naccho_contact_day11,
               -naccho_contact_day12, -naccho_contact_day13, -naccho_contact_day14,
               -naccho_contact_day15, -naccho_contact_day16, -naccho_contact_day17,
               -naccho_contact_day18, -naccho_contact_day19, -naccho_contact_day20,
               -naccho_contact_day21, -naccho_contact_day22, -naccho_contact_day23,
               -naccho_contact_day24, -naccho_contact_day25, -naccho_contact_day26,
               -naccho_contact_day27, -naccho_contact_day28, -naccho_contact_day29,
               -naccho_contact_day30, -naccho_contact_day31, -naccho_contact_day32,
               -naccho_contact_day33, -naccho_contact_day34, -naccho_contact_day35,
               -naccho_contact_day36, -naccho_contact_day37, -naccho_contact_day38,
               -naccho_contact_day39, -naccho_contact_day40, -naccho_contact_day41,
               -naccho_contact_day42, -naccho_contact_day43, -naccho_contact_day44,
               -naccho_contact_day45, -naccho_contact_day46, -naccho_contact_day47,
               -naccho_contact_day48, -naccho_contact_day49, -naccho_contact_day50,
               -naccho_contact_confirm_tx1, -naccho_contact_confirm_tx2,
               -naccho_contact_confirm_tx3, -naccho_contact_confirm_tx4, -naccho_contact_confirm_tx5,
               -naccho_contact_confirm_tx6, -naccho_contact_confirm_tx7, -naccho_contact_confirm_tx8,
               -naccho_contact_confirm_tx9, -naccho_contact_confirm_tx10, -naccho_contact_confirm_tx11,
               -naccho_contact_confirm_tx12, -naccho_contact_confirm_tx13, -naccho_contact_confirm_tx14,
               -naccho_contact_confirm_tx15, -naccho_contact_confirm_tx16, -naccho_contact_confirm_tx17,
               -naccho_contact_confirm_tx18, -naccho_contact_confirm_tx19, -naccho_contact_confirm_tx20,
               -naccho_contact_confirm_tx21, -naccho_contact_confirm_tx22, -naccho_contact_confirm_tx23,
               -naccho_contact_confirm_tx24, -naccho_contact_confirm_tx25, -naccho_contact_confirm_tx26,
               -naccho_contact_confirm_tx27, -naccho_contact_confirm_tx28, -naccho_contact_confirm_tx29,
               -naccho_contact_confirm_tx30, -naccho_contact_confirm_tx31, -naccho_contact_confirm_tx32,
               -naccho_contact_confirm_tx33, -naccho_contact_confirm_tx34, -naccho_contact_confirm_tx35,
               -naccho_contact_confirm_tx36, -naccho_contact_confirm_tx37, -naccho_contact_confirm_tx38,
               -naccho_contact_confirm_tx39, -naccho_contact_confirm_tx40, -naccho_contact_confirm_tx41,
               -naccho_contact_confirm_tx42, -naccho_contact_confirm_tx43, -naccho_contact_confirm_tx44,
               -naccho_contact_confirm_tx45, -naccho_contact_confirm_tx46, -naccho_contact_confirm_tx47,
               -naccho_contact_confirm_tx48, -naccho_contact_confirm_tx49, -naccho_contact_confirm_tx50,
               -who_initiated_contact1, -who_initiated_contact2, -who_initiated_contact3, -who_initiated_contact4, -who_initiated_contact5,
               -who_initiated_contact6, -who_initiated_contact7, -who_initiated_contact8, -who_initiated_contact9, -who_initiated_contact10,
               -who_initiated_contact11, -who_initiated_contact12, -who_initiated_contact13, -who_initiated_contact14,
               -who_initiated_contact15, -who_initiated_contact16, -who_initiated_contact17, -who_initiated_contact18,
               -who_initiated_contact19, -who_initiated_contact20, -who_initiated_contact21, -who_initiated_contact22,
               -who_initiated_contact23, -who_initiated_contact24, -who_initiated_contact25, -who_initiated_contact26,
               -who_initiated_contact27, -who_initiated_contact28, -who_initiated_contact29, -who_initiated_contact30,
               -who_initiated_contact31, -who_initiated_contact32, -who_initiated_contact33, -who_initiated_contact34,
               -who_initiated_contact35, -who_initiated_contact36, -who_initiated_contact37, -who_initiated_contact38,
               -who_initiated_contact39, -who_initiated_contact40, -who_initiated_contact41, -who_initiated_contact42,
               -who_initiated_contact43, -who_initiated_contact44, -who_initiated_contact45, -who_initiated_contact46,
               -who_initiated_contact47, -who_initiated_contact48, -who_initiated_contact49, -who_initiated_contact50,
               -contact_with1, -contact_with2, -contact_with3, -contact_with4, -contact_with5,
               -contact_with6, -contact_with7, -contact_with8, -contact_with9, -contact_with10,
               -contact_with11, -contact_with12, -contact_with13, -contact_with14,
               -contact_with15, -contact_with16, -contact_with17, -contact_with18,
               -contact_with19, -contact_with20, -contact_with21, -contact_with22,
               -contact_with23, -contact_with24, -contact_with25, -contact_with26,
               -contact_with27, -contact_with28, -contact_with29, -contact_with30,
               -contact_with31, -contact_with32, -contact_with33, -contact_with34,
               -contact_with35, -contact_with36, -contact_with37, -contact_with38,
               -contact_with39, -contact_with40, -contact_with41, -contact_with42,
               -contact_with43, -contact_with44, -contact_with45, -contact_with46,
               -contact_with47, -contact_with48, -contact_with49, -contact_with50,
               -ltc_contact1, -ltc_contact2, -ltc_contact3, -ltc_contact4, -ltc_contact5,
               -ltc_contact6, -ltc_contact7, -ltc_contact8, -ltc_contact9, -ltc_contact10,
               -ltc_contact11, -ltc_contact12, -ltc_contact13, -ltc_contact14, -ltc_contact15,
               -ltc_contact16, -ltc_contact17, -ltc_contact18, -ltc_contact19, -ltc_contact20,
               -ltc_contact21, -ltc_contact22, -ltc_contact23, -ltc_contact24, -ltc_contact25,
               -ltc_contact26, -ltc_contact27, -ltc_contact28, -ltc_contact29, -ltc_contact30,
               -ltc_contact31, -ltc_contact32, -ltc_contact33, -ltc_contact34, -ltc_contact35,
               -ltc_contact36, -ltc_contact37, -ltc_contact38, -ltc_contact39, -ltc_contact40,
               -ltc_contact41, -ltc_contact42, -ltc_contact43, -ltc_contact44, -ltc_contact45,
               -ltc_contact46, -ltc_contact47, -ltc_contact48, -ltc_contact49, -ltc_contact50,
               -no_contact_reason1, -no_contact_reason2, -no_contact_reason3, -no_contact_reason4, -no_contact_reason5,
               -no_contact_reason6, -no_contact_reason7, -no_contact_reason8, -no_contact_reason9, -no_contact_reason10,
               -no_contact_reason11, -no_contact_reason12, -no_contact_reason13, -no_contact_reason14,
               -no_contact_reason15, -no_contact_reason16, -no_contact_reason17, -no_contact_reason18,
               -no_contact_reason19, -no_contact_reason20, -no_contact_reason21, -no_contact_reason22,
               -no_contact_reason23, -no_contact_reason24, -no_contact_reason25, -no_contact_reason26,
               -no_contact_reason27, -no_contact_reason28, -no_contact_reason29, -no_contact_reason30,
               -no_contact_reason31, -no_contact_reason32, -no_contact_reason33, -no_contact_reason34,
               -no_contact_reason35, -no_contact_reason36, -no_contact_reason37, -no_contact_reason38,
               -no_contact_reason39, -no_contact_reason40, -no_contact_reason41, -no_contact_reason42,
               -no_contact_reason43, -no_contact_reason44, -no_contact_reason45, -no_contact_reason46,
               -no_contact_reason47, -no_contact_reason48, -no_contact_reason49, -no_contact_reason50)

# Merge person dataset with full eip dataset

dim(eip23)
dim(person)
eip23 <- merge(eip23, person, by='record_id', all.x=T)
dim(eip23)
eip23 <- distinct(eip23)
dim(eip23)


# 2024
table(eip24$redcap_event_name)
person <- eip24[which(eip24$redcap_event_name == 'visit_001_arm_1'), ]
dim(person)

person <- select(person, record_id, mrn, dob, 
                 race___1, race___2, race___3, race___4, race___5, race___6, ethnicity,
                 sex_raised, sex_selfdefined, insurance, address_county,
                 address_zip_code,
                 followup_date1, followup_date2, followup_date3, followup_date4,
                 followup_date5, followup_date6, followup_date7, followup_date8,
                 followup_date9, followup_date10, followup_date11, followup_date12,
                 followup_date13, followup_date14, followup_date15, followup_date16,
                 followup_date17, followup_date18, followup_date19, followup_date20,
                 followup_date21, followup_date22, followup_date23, followup_date24,
                 followup_date25, followup_date26, followup_date27, followup_date28,
                 followup_date29, followup_date30, followup_date31, followup_date32,
                 followup_date33, followup_date34, followup_date35, followup_date36,
                 followup_date37, followup_date38, followup_date39, followup_date40,
                 followup_date41, followup_date42, followup_date43, followup_date44,
                 followup_date45, followup_date46, followup_date47, followup_date48,
                 followup_date49, followup_date50, followup_counselor1, followup_counselor2,
                 followup_counselor3, followup_counselor4, followup_counselor5,
                 followup_counselor6, followup_counselor7, followup_counselor8,
                 followup_counselor9, followup_counselor10, followup_counselor11,
                 followup_counselor12, followup_counselor13, followup_counselor14,
                 followup_counselor15, followup_counselor16, followup_counselor17,
                 followup_counselor18, followup_counselor19, followup_counselor20,
                 followup_counselor21, followup_counselor22, followup_counselor23,
                 followup_counselor24, followup_counselor25, followup_counselor26,
                 followup_counselor27, followup_counselor28, followup_counselor29,
                 followup_counselor30, followup_counselor31, followup_counselor32,
                 followup_counselor33, followup_counselor34, followup_counselor35,
                 followup_counselor36, followup_counselor37, followup_counselor38,
                 followup_counselor39, followup_counselor40, followup_counselor41,
                 followup_counselor42, followup_counselor43, followup_counselor44,
                 followup_counselor45, followup_counselor46, followup_counselor47,
                 followup_counselor48, followup_counselor49, followup_counselor50,
                 ltc_service1___8, ltc_service2___8,
                 ltc_service3___8, ltc_service4___8, ltc_service5___8,
                 ltc_service6___8, ltc_service7___8, ltc_service8___8,
                 ltc_service9___8, ltc_service10___8, ltc_service11___8,
                 ltc_service12___8, ltc_service13___8, ltc_service14___8,
                 ltc_service15___8, ltc_service16___8, ltc_service17___8,
                 ltc_service18___8, ltc_service19___8, ltc_service20___8,
                 ltc_service21___8, ltc_service22___8, ltc_service23___8,
                 ltc_service24___8, ltc_service25___8, ltc_service26___8,
                 ltc_service27___8, ltc_service28___8, ltc_service29___8,
                 ltc_service30___8, ltc_service31___8, ltc_service32___8,
                 ltc_service33___8, ltc_service34___8, ltc_service35___8,
                 ltc_service36___8, ltc_service37___8, ltc_service38___8,
                 ltc_service39___8, ltc_service40___8, ltc_service41___8,
                 ltc_service42___8, ltc_service43___8, ltc_service44___8,
                 ltc_service45___8, ltc_service46___8, ltc_service47___8,
                 ltc_service48___8, ltc_service49___8, ltc_service50___8,
                 naccho_contact_day1, naccho_contact_day2,
                 naccho_contact_day3, naccho_contact_day4, naccho_contact_day5,
                 naccho_contact_day6, naccho_contact_day7, naccho_contact_day8,
                 naccho_contact_day9, naccho_contact_day10, naccho_contact_day11,
                 naccho_contact_day12, naccho_contact_day13, naccho_contact_day14,
                 naccho_contact_day15, naccho_contact_day16, naccho_contact_day17,
                 naccho_contact_day18, naccho_contact_day19, naccho_contact_day20,
                 naccho_contact_day21, naccho_contact_day22, naccho_contact_day23,
                 naccho_contact_day24, naccho_contact_day25, naccho_contact_day26,
                 naccho_contact_day27, naccho_contact_day28, naccho_contact_day29,
                 naccho_contact_day30, naccho_contact_day31, naccho_contact_day32,
                 naccho_contact_day33, naccho_contact_day34, naccho_contact_day35,
                 naccho_contact_day36, naccho_contact_day37, naccho_contact_day38,
                 naccho_contact_day39, naccho_contact_day40, naccho_contact_day41,
                 naccho_contact_day42, naccho_contact_day43, naccho_contact_day44,
                 naccho_contact_day45, naccho_contact_day46, naccho_contact_day47,
                 naccho_contact_day48, naccho_contact_day49, naccho_contact_day50,
                 naccho_contact_confirm_tx1, naccho_contact_confirm_tx2,
                 naccho_contact_confirm_tx3, naccho_contact_confirm_tx4, naccho_contact_confirm_tx5,
                 naccho_contact_confirm_tx6, naccho_contact_confirm_tx7, naccho_contact_confirm_tx8,
                 naccho_contact_confirm_tx9, naccho_contact_confirm_tx10, naccho_contact_confirm_tx11,
                 naccho_contact_confirm_tx12, naccho_contact_confirm_tx13, naccho_contact_confirm_tx14,
                 naccho_contact_confirm_tx15, naccho_contact_confirm_tx16, naccho_contact_confirm_tx17,
                 naccho_contact_confirm_tx18, naccho_contact_confirm_tx19, naccho_contact_confirm_tx20,
                 naccho_contact_confirm_tx21, naccho_contact_confirm_tx22, naccho_contact_confirm_tx23,
                 naccho_contact_confirm_tx24, naccho_contact_confirm_tx25, naccho_contact_confirm_tx26,
                 naccho_contact_confirm_tx27, naccho_contact_confirm_tx28, naccho_contact_confirm_tx29,
                 naccho_contact_confirm_tx30, naccho_contact_confirm_tx31, naccho_contact_confirm_tx32,
                 naccho_contact_confirm_tx33, naccho_contact_confirm_tx34, naccho_contact_confirm_tx35,
                 naccho_contact_confirm_tx36, naccho_contact_confirm_tx37, naccho_contact_confirm_tx38,
                 naccho_contact_confirm_tx39, naccho_contact_confirm_tx40, naccho_contact_confirm_tx41,
                 naccho_contact_confirm_tx42, naccho_contact_confirm_tx43, naccho_contact_confirm_tx44,
                 naccho_contact_confirm_tx45, naccho_contact_confirm_tx46, naccho_contact_confirm_tx47,
                 naccho_contact_confirm_tx48, naccho_contact_confirm_tx49, naccho_contact_confirm_tx50,
                 who_initiated_contact1, who_initiated_contact2, who_initiated_contact3, who_initiated_contact4, who_initiated_contact5,
                 who_initiated_contact6, who_initiated_contact7, who_initiated_contact8, who_initiated_contact9, who_initiated_contact10,
                 who_initiated_contact11, who_initiated_contact12, who_initiated_contact13, who_initiated_contact14,
                 who_initiated_contact15, who_initiated_contact16, who_initiated_contact17, who_initiated_contact18,
                 who_initiated_contact19, who_initiated_contact20, who_initiated_contact21, who_initiated_contact22,
                 who_initiated_contact23, who_initiated_contact24, who_initiated_contact25, who_initiated_contact26,
                 who_initiated_contact27, who_initiated_contact28, who_initiated_contact29, who_initiated_contact30,
                 who_initiated_contact31, who_initiated_contact32, who_initiated_contact33, who_initiated_contact34,
                 who_initiated_contact35, who_initiated_contact36, who_initiated_contact37, who_initiated_contact38,
                 who_initiated_contact39, who_initiated_contact40, who_initiated_contact41, who_initiated_contact42,
                 who_initiated_contact43, who_initiated_contact44, who_initiated_contact45, who_initiated_contact46,
                 who_initiated_contact47, who_initiated_contact48, who_initiated_contact49, who_initiated_contact50,
                 contact_with1, contact_with2, contact_with3, contact_with4, contact_with5,
                 contact_with6, contact_with7, contact_with8, contact_with9, contact_with10,
                 contact_with11, contact_with12, contact_with13, contact_with14,
                 contact_with15, contact_with16, contact_with17, contact_with18,
                 contact_with19, contact_with20, contact_with21, contact_with22,
                 contact_with23, contact_with24, contact_with25, contact_with26,
                 contact_with27, contact_with28, contact_with29, contact_with30,
                 contact_with31, contact_with32, contact_with33, contact_with34,
                 contact_with35, contact_with36, contact_with37, contact_with38,
                 contact_with39, contact_with40, contact_with41, contact_with42,
                 contact_with43, contact_with44, contact_with45, contact_with46,
                 contact_with47, contact_with48, contact_with49, contact_with50,
                 ltc_contact1, ltc_contact2, ltc_contact3, ltc_contact4, ltc_contact5,
                 ltc_contact6, ltc_contact7, ltc_contact8, ltc_contact9, ltc_contact10,
                 ltc_contact11, ltc_contact12, ltc_contact13, ltc_contact14, ltc_contact15,
                 ltc_contact16, ltc_contact17, ltc_contact18, ltc_contact19, ltc_contact20,
                 ltc_contact21, ltc_contact22, ltc_contact23, ltc_contact24, ltc_contact25,
                 ltc_contact26, ltc_contact27, ltc_contact28, ltc_contact29, ltc_contact30,
                 ltc_contact31, ltc_contact32, ltc_contact33, ltc_contact34, ltc_contact35,
                 ltc_contact36, ltc_contact37, ltc_contact38, ltc_contact39, ltc_contact40,
                 ltc_contact41, ltc_contact42, ltc_contact43, ltc_contact44, ltc_contact45,
                 ltc_contact46, ltc_contact47, ltc_contact48, ltc_contact49, ltc_contact50,
                 no_contact_reason1, no_contact_reason2, no_contact_reason3, no_contact_reason4, no_contact_reason5,
                 no_contact_reason6, no_contact_reason7, no_contact_reason8, no_contact_reason9, no_contact_reason10,
                 no_contact_reason11, no_contact_reason12, no_contact_reason13, no_contact_reason14,
                 no_contact_reason15, no_contact_reason16, no_contact_reason17, no_contact_reason18,
                 no_contact_reason19, no_contact_reason20, no_contact_reason21, no_contact_reason22,
                 no_contact_reason23, no_contact_reason24, no_contact_reason25, no_contact_reason26,
                 no_contact_reason27, no_contact_reason28, no_contact_reason29, no_contact_reason30,
                 no_contact_reason31, no_contact_reason32, no_contact_reason33, no_contact_reason34,
                 no_contact_reason35, no_contact_reason36, no_contact_reason37, no_contact_reason38,
                 no_contact_reason39, no_contact_reason40, no_contact_reason41, no_contact_reason42,
                 no_contact_reason43, no_contact_reason44, no_contact_reason45, no_contact_reason46,
                 no_contact_reason47, no_contact_reason48, no_contact_reason49, no_contact_reason50)
dim(person)

eip24 <- select(eip24, -mrn, -dob, 
               -race___1, -race___2, -race___3, -race___4, -race___5, 
               -race___6, -ethnicity,
               -sex_raised, -sex_selfdefined, -insurance, -address_county,
               -address_zip_code,
               -followup_date1, -followup_date2, -followup_date3, -followup_date4,
               -followup_date5, -followup_date6, -followup_date7, -followup_date8,
               -followup_date9, -followup_date10, -followup_date11, -followup_date12,
               -followup_date13, -followup_date14, -followup_date15, -followup_date16,
               -followup_date17, -followup_date18, -followup_date19, -followup_date20,
               -followup_date21, -followup_date22, -followup_date23, -followup_date24,
               -followup_date25, -followup_date26, -followup_date27, -followup_date28,
               -followup_date29, -followup_date30, -followup_date31, -followup_date32,
               -followup_date33, -followup_date34, -followup_date35, -followup_date36,
               -followup_date37, -followup_date38, -followup_date39, -followup_date40,
               -followup_date41, -followup_date42, -followup_date43, -followup_date44,
               -followup_date45, -followup_date46, -followup_date47, -followup_date48,
               -followup_date49, -followup_date50, -followup_counselor1, -followup_counselor2,
               -followup_counselor3, -followup_counselor4, -followup_counselor5,
               -followup_counselor6, -followup_counselor7, -followup_counselor8,
               -followup_counselor9, -followup_counselor10, -followup_counselor11,
               -followup_counselor12, -followup_counselor13, -followup_counselor14,
               -followup_counselor15, -followup_counselor16, -followup_counselor17,
               -followup_counselor18, -followup_counselor19, -followup_counselor20,
               -followup_counselor21, -followup_counselor22, -followup_counselor23,
               -followup_counselor24, -followup_counselor25, -followup_counselor26,
               -followup_counselor27, -followup_counselor28, -followup_counselor29,
               -followup_counselor30, -followup_counselor31, -followup_counselor32,
               -followup_counselor33, -followup_counselor34, -followup_counselor35,
               -followup_counselor36, -followup_counselor37, -followup_counselor38,
               -followup_counselor39, -followup_counselor40, -followup_counselor41,
               -followup_counselor42, -followup_counselor43, -followup_counselor44,
               -followup_counselor45, -followup_counselor46, -followup_counselor47,
               -followup_counselor48, -followup_counselor49, -followup_counselor50,
               -ltc_service1___8, -ltc_service2___8,
               -ltc_service3___8, -ltc_service4___8, -ltc_service5___8,
               -ltc_service6___8, -ltc_service7___8, -ltc_service8___8,
               -ltc_service9___8, -ltc_service10___8, -ltc_service11___8,
               -ltc_service12___8, -ltc_service13___8, -ltc_service14___8,
               -ltc_service15___8, -ltc_service16___8, -ltc_service17___8,
               -ltc_service18___8, -ltc_service19___8, -ltc_service20___8,
               -ltc_service21___8, -ltc_service22___8, -ltc_service23___8,
               -ltc_service24___8, -ltc_service25___8, -ltc_service26___8,
               -ltc_service27___8, -ltc_service28___8, -ltc_service29___8,
               -ltc_service30___8, -ltc_service31___8, -ltc_service32___8,
               -ltc_service33___8, -ltc_service34___8, -ltc_service35___8,
               -ltc_service36___8, -ltc_service37___8, -ltc_service38___8,
               -ltc_service39___8, -ltc_service40___8, -ltc_service41___8,
               -ltc_service42___8, -ltc_service43___8, -ltc_service44___8,
               -ltc_service45___8, -ltc_service46___8, -ltc_service47___8,
               -ltc_service48___8, -ltc_service49___8, -ltc_service50___8,
               -naccho_contact_day1, -naccho_contact_day2,
               -naccho_contact_day3, -naccho_contact_day4, -naccho_contact_day5,
               -naccho_contact_day6, -naccho_contact_day7, -naccho_contact_day8,
               -naccho_contact_day9, -naccho_contact_day10, -naccho_contact_day11,
               -naccho_contact_day12, -naccho_contact_day13, -naccho_contact_day14,
               -naccho_contact_day15, -naccho_contact_day16, -naccho_contact_day17,
               -naccho_contact_day18, -naccho_contact_day19, -naccho_contact_day20,
               -naccho_contact_day21, -naccho_contact_day22, -naccho_contact_day23,
               -naccho_contact_day24, -naccho_contact_day25, -naccho_contact_day26,
               -naccho_contact_day27, -naccho_contact_day28, -naccho_contact_day29,
               -naccho_contact_day30, -naccho_contact_day31, -naccho_contact_day32,
               -naccho_contact_day33, -naccho_contact_day34, -naccho_contact_day35,
               -naccho_contact_day36, -naccho_contact_day37, -naccho_contact_day38,
               -naccho_contact_day39, -naccho_contact_day40, -naccho_contact_day41,
               -naccho_contact_day42, -naccho_contact_day43, -naccho_contact_day44,
               -naccho_contact_day45, -naccho_contact_day46, -naccho_contact_day47,
               -naccho_contact_day48, -naccho_contact_day49, -naccho_contact_day50,
               -naccho_contact_confirm_tx1, -naccho_contact_confirm_tx2,
               -naccho_contact_confirm_tx3, -naccho_contact_confirm_tx4, -naccho_contact_confirm_tx5,
               -naccho_contact_confirm_tx6, -naccho_contact_confirm_tx7, -naccho_contact_confirm_tx8,
               -naccho_contact_confirm_tx9, -naccho_contact_confirm_tx10, -naccho_contact_confirm_tx11,
               -naccho_contact_confirm_tx12, -naccho_contact_confirm_tx13, -naccho_contact_confirm_tx14,
               -naccho_contact_confirm_tx15, -naccho_contact_confirm_tx16, -naccho_contact_confirm_tx17,
               -naccho_contact_confirm_tx18, -naccho_contact_confirm_tx19, -naccho_contact_confirm_tx20,
               -naccho_contact_confirm_tx21, -naccho_contact_confirm_tx22, -naccho_contact_confirm_tx23,
               -naccho_contact_confirm_tx24, -naccho_contact_confirm_tx25, -naccho_contact_confirm_tx26,
               -naccho_contact_confirm_tx27, -naccho_contact_confirm_tx28, -naccho_contact_confirm_tx29,
               -naccho_contact_confirm_tx30, -naccho_contact_confirm_tx31, -naccho_contact_confirm_tx32,
               -naccho_contact_confirm_tx33, -naccho_contact_confirm_tx34, -naccho_contact_confirm_tx35,
               -naccho_contact_confirm_tx36, -naccho_contact_confirm_tx37, -naccho_contact_confirm_tx38,
               -naccho_contact_confirm_tx39, -naccho_contact_confirm_tx40, -naccho_contact_confirm_tx41,
               -naccho_contact_confirm_tx42, -naccho_contact_confirm_tx43, -naccho_contact_confirm_tx44,
               -naccho_contact_confirm_tx45, -naccho_contact_confirm_tx46, -naccho_contact_confirm_tx47,
               -naccho_contact_confirm_tx48, -naccho_contact_confirm_tx49, -naccho_contact_confirm_tx50,
               -who_initiated_contact1, -who_initiated_contact2, -who_initiated_contact3, -who_initiated_contact4, -who_initiated_contact5,
               -who_initiated_contact6, -who_initiated_contact7, -who_initiated_contact8, -who_initiated_contact9, -who_initiated_contact10,
               -who_initiated_contact11, -who_initiated_contact12, -who_initiated_contact13, -who_initiated_contact14,
               -who_initiated_contact15, -who_initiated_contact16, -who_initiated_contact17, -who_initiated_contact18,
               -who_initiated_contact19, -who_initiated_contact20, -who_initiated_contact21, -who_initiated_contact22,
               -who_initiated_contact23, -who_initiated_contact24, -who_initiated_contact25, -who_initiated_contact26,
               -who_initiated_contact27, -who_initiated_contact28, -who_initiated_contact29, -who_initiated_contact30,
               -who_initiated_contact31, -who_initiated_contact32, -who_initiated_contact33, -who_initiated_contact34,
               -who_initiated_contact35, -who_initiated_contact36, -who_initiated_contact37, -who_initiated_contact38,
               -who_initiated_contact39, -who_initiated_contact40, -who_initiated_contact41, -who_initiated_contact42,
               -who_initiated_contact43, -who_initiated_contact44, -who_initiated_contact45, -who_initiated_contact46,
               -who_initiated_contact47, -who_initiated_contact48, -who_initiated_contact49, -who_initiated_contact50,
               -contact_with1, -contact_with2, -contact_with3, -contact_with4, -contact_with5,
               -contact_with6, -contact_with7, -contact_with8, -contact_with9, -contact_with10,
               -contact_with11, -contact_with12, -contact_with13, -contact_with14,
               -contact_with15, -contact_with16, -contact_with17, -contact_with18,
               -contact_with19, -contact_with20, -contact_with21, -contact_with22,
               -contact_with23, -contact_with24, -contact_with25, -contact_with26,
               -contact_with27, -contact_with28, -contact_with29, -contact_with30,
               -contact_with31, -contact_with32, -contact_with33, -contact_with34,
               -contact_with35, -contact_with36, -contact_with37, -contact_with38,
               -contact_with39, -contact_with40, -contact_with41, -contact_with42,
               -contact_with43, -contact_with44, -contact_with45, -contact_with46,
               -contact_with47, -contact_with48, -contact_with49, -contact_with50,
               -ltc_contact1, -ltc_contact2, -ltc_contact3, -ltc_contact4, -ltc_contact5,
               -ltc_contact6, -ltc_contact7, -ltc_contact8, -ltc_contact9, -ltc_contact10,
               -ltc_contact11, -ltc_contact12, -ltc_contact13, -ltc_contact14, -ltc_contact15,
               -ltc_contact16, -ltc_contact17, -ltc_contact18, -ltc_contact19, -ltc_contact20,
               -ltc_contact21, -ltc_contact22, -ltc_contact23, -ltc_contact24, -ltc_contact25,
               -ltc_contact26, -ltc_contact27, -ltc_contact28, -ltc_contact29, -ltc_contact30,
               -ltc_contact31, -ltc_contact32, -ltc_contact33, -ltc_contact34, -ltc_contact35,
               -ltc_contact36, -ltc_contact37, -ltc_contact38, -ltc_contact39, -ltc_contact40,
               -ltc_contact41, -ltc_contact42, -ltc_contact43, -ltc_contact44, -ltc_contact45,
               -ltc_contact46, -ltc_contact47, -ltc_contact48, -ltc_contact49, -ltc_contact50,
               -no_contact_reason1, -no_contact_reason2, -no_contact_reason3, -no_contact_reason4, -no_contact_reason5,
               -no_contact_reason6, -no_contact_reason7, -no_contact_reason8, -no_contact_reason9, -no_contact_reason10,
               -no_contact_reason11, -no_contact_reason12, -no_contact_reason13, -no_contact_reason14,
               -no_contact_reason15, -no_contact_reason16, -no_contact_reason17, -no_contact_reason18,
               -no_contact_reason19, -no_contact_reason20, -no_contact_reason21, -no_contact_reason22,
               -no_contact_reason23, -no_contact_reason24, -no_contact_reason25, -no_contact_reason26,
               -no_contact_reason27, -no_contact_reason28, -no_contact_reason29, -no_contact_reason30,
               -no_contact_reason31, -no_contact_reason32, -no_contact_reason33, -no_contact_reason34,
               -no_contact_reason35, -no_contact_reason36, -no_contact_reason37, -no_contact_reason38,
               -no_contact_reason39, -no_contact_reason40, -no_contact_reason41, -no_contact_reason42,
               -no_contact_reason43, -no_contact_reason44, -no_contact_reason45, -no_contact_reason46,
               -no_contact_reason47, -no_contact_reason48, -no_contact_reason49, -no_contact_reason50)

# Merge person dataset with full eip24 dataset

dim(eip24)
dim(person)
eip24 <- merge(eip24, person, by='record_id', all.x=T)
dim(eip24)
eip24 <- distinct(eip24)
dim(eip24)


```

```{r Combining Datasets, include=FALSE}

### Combine 2023/2024 Data

dim(eip23)
dim(eip24)


# Changing variables that were changed in 2024 dataset
names(eip23)[names(eip23) == 'encounter_location'] <- 'enc_location'
names(eip23)[names(eip23) == 'encounter_location_other'] <- 'enc_location_other'
names(eip23)[names(eip23) == 'counselor_ref_hiv_specific___4'] <- 'counselor_ref_hiv_specific___0'
names(eip23)[names(eip23) == 'counselor_ref_hcv_specific___2'] <- 'counselor_ref_hcv_specific___0'
names(eip23)[names(eip23) == 'counselor_ref_peer_specific___3'] <- 'counselor_ref_peer_specific___0'
names(eip23)[names(eip23) == 'counselor_ref_mh_specific___3'] <- 'counselor_ref_mh_specific___0'
names(eip23)[names(eip23) == 'counselor_ref_sud_specific___11'] <- 'counselor_ref_sud_specific___0'
names(eip23)[names(eip23) == 'counselor_ref_sti_specific___3'] <- 'counselor_ref_sti_specific___0'
names(eip23)[names(eip23) == 'counselor_ref_housing_specific___8'] <- 'counselor_ref_housing_specific___0'
names(eip23)[names(eip23) == 'counselor_ref_ht_specific___99'] <- 'counselor_ref_ht_specific___0'
names(eip23)[names(eip23) == 'counselor_ref_personabuse_specific___5'] <- 'counselor_ref_personabuse_specific___0'
names(eip23)[names(eip23) == 'counselor_ref_general_specific___6'] <- 'counselor_ref_general_specific___0'
names(eip23)[names(eip23) == 'counselor_ref_food_specific___3'] <- 'counselor_ref_food_specific___0'
names(eip23)[names(eip23) == 'counselor_ref_financial_specific___2'] <- 'counselor_ref_financial_specific___0'
names(eip23)[names(eip23) == 'ltc_service1___5'] <- 'ltc_service1___0'
names(eip23)[names(eip23) == 'ltc_service10___5'] <- 'ltc_service10___0'
names(eip23)[names(eip23) == 'ltc_service11___5'] <- 'ltc_service11___0'
names(eip23)[names(eip23) == 'ltc_service12___5'] <- 'ltc_service12___0'
names(eip23)[names(eip23) == 'ltc_service13___5'] <- 'ltc_service13___0'
names(eip23)[names(eip23) == 'ltc_service14___5'] <- 'ltc_service14___0'
names(eip23)[names(eip23) == 'ltc_service15___5'] <- 'ltc_service15___0'
names(eip23)[names(eip23) == 'ltc_service16___5'] <- 'ltc_service16___0'
names(eip23)[names(eip23) == 'ltc_service17___5'] <- 'ltc_service17___0'
names(eip23)[names(eip23) == 'ltc_service18___5'] <- 'ltc_service18___0'
names(eip23)[names(eip23) == 'ltc_service19___5'] <- 'ltc_service19___0'
names(eip23)[names(eip23) == 'ltc_service2___5'] <- 'ltc_service2___0'
names(eip23)[names(eip23) == 'ltc_service20___5'] <- 'ltc_service20___0'
names(eip23)[names(eip23) == 'ltc_service21___5'] <- 'ltc_service21___0'
names(eip23)[names(eip23) == 'ltc_service22___5'] <- 'ltc_service22___0'
names(eip23)[names(eip23) == 'ltc_service23___5'] <- 'ltc_service23___0'
names(eip23)[names(eip23) == 'ltc_service24___5'] <- 'ltc_service24___0'
names(eip23)[names(eip23) == 'ltc_service25___5'] <- 'ltc_service25___0'
names(eip23)[names(eip23) == 'ltc_service26___5'] <- 'ltc_service26___0'
names(eip23)[names(eip23) == 'ltc_service27___5'] <- 'ltc_service27___0'
names(eip23)[names(eip23) == 'ltc_service28___5'] <- 'ltc_service28___0'
names(eip23)[names(eip23) == 'ltc_service29___5'] <- 'ltc_service29___0'
names(eip23)[names(eip23) == 'ltc_service3___5'] <- 'ltc_service3___0'
names(eip23)[names(eip23) == 'ltc_service30___5'] <- 'ltc_service30___0'
names(eip23)[names(eip23) == 'ltc_service31___5'] <- 'ltc_service31___0'
names(eip23)[names(eip23) == 'ltc_service32___5'] <- 'ltc_service32___0'
names(eip23)[names(eip23) == 'ltc_service33___5'] <- 'ltc_service33___0'
names(eip23)[names(eip23) == 'ltc_service34___5'] <- 'ltc_service34___0'
names(eip23)[names(eip23) == 'ltc_service35___5'] <- 'ltc_service35___0'
names(eip23)[names(eip23) == 'ltc_service36___5'] <- 'ltc_service36___0'
names(eip23)[names(eip23) == 'ltc_service37___5'] <- 'ltc_service37___0'
names(eip23)[names(eip23) == 'ltc_service38___5'] <- 'ltc_service38___0'
names(eip23)[names(eip23) == 'ltc_service39___5'] <- 'ltc_service39___0'
names(eip23)[names(eip23) == 'ltc_service4___5'] <- 'ltc_service4___0'
names(eip23)[names(eip23) == 'ltc_service40___5'] <- 'ltc_service40___0'
names(eip23)[names(eip23) == 'ltc_service41___5'] <- 'ltc_service41___0'
names(eip23)[names(eip23) == 'ltc_service42___5'] <- 'ltc_service42___0'
names(eip23)[names(eip23) == 'ltc_service43___5'] <- 'ltc_service43___0'
names(eip23)[names(eip23) == 'ltc_service44___5'] <- 'ltc_service44___0'
names(eip23)[names(eip23) == 'ltc_service45___5'] <- 'ltc_service45___0'
names(eip23)[names(eip23) == 'ltc_service46___5'] <- 'ltc_service46___0'
names(eip23)[names(eip23) == 'ltc_service47___5'] <- 'ltc_service47___0'
names(eip23)[names(eip23) == 'ltc_service48___5'] <- 'ltc_service48___0'
names(eip23)[names(eip23) == 'ltc_service49___5'] <- 'ltc_service49___0'
names(eip23)[names(eip23) == 'ltc_service5___5'] <- 'ltc_service5___0'
names(eip23)[names(eip23) == 'ltc_service50___5'] <- 'ltc_service50___0'
names(eip23)[names(eip23) == 'ltc_service6___5'] <- 'ltc_service6___0'
names(eip23)[names(eip23) == 'ltc_service7___5'] <- 'ltc_service7___0'
names(eip23)[names(eip23) == 'ltc_service8___5'] <- 'ltc_service8___0'
names(eip23)[names(eip23) == 'ltc_service9___5'] <- 'ltc_service9___0'
names(eip23)[names(eip23) == 'additional_services___99'] <- 'additional_services___0'

eip23$final_test_status_hcv[eip23$final_test_status_hcv == 3] <- 4


# Adding variables introduced in 2024 to 2023 dataset as blank values
eip23$staff_start_peer <- ''
eip23$date_start_peer <- ''
eip23$peer_referred_by <- ''
eip23$peer_reason_for_offer_category <- ''
eip23$peer_reason_for_offer_self_req___1 <- ''
eip23$peer_reason_for_offer_self_req___2 <- ''
eip23$peer_reason_for_offer_self_req___3 <- ''
eip23$peer_reason_for_offer_self_req___5 <- ''
eip23$peer_reason_for_offer_self_req___6 <- ''
eip23$peer_reason_for_offer_self_req___7 <- ''
eip23$peer_reason_for_offer_self_req___8 <- ''
eip23$peer_reason_for_offer_self_req___9 <- ''
eip23$peer_reason_for_offer_self_req___4 <- ''
eip23$peer_reason_for_offer_routine_freq <- ''
eip23$peer_reason_for_offer_self_req_other <- ''
eip23$peer_reason_for_offer_diagnostic___1 <- ''
eip23$peer_reason_for_offer_diagnostic___2 <- ''
eip23$peer_reason_for_offer_diagnostic___3 <- ''
eip23$peer_reason_for_offer_diagnostic___4 <- ''
eip23$peer_reason_for_offer_diagnostic___5 <- ''
eip23$peer_reason_for_offer_diagnostic___6 <- ''
eip23$peer_reason_for_offer_diagnostic___7 <- ''
eip23$peer_reason_for_offer_diagnostic___8 <- ''
eip23$peer_reason_for_offer_diagnostic___9 <- ''
eip23$peer_reason_for_offer_diagnostic___10 <- ''
eip23$peer_reason_for_offer_diagnostic___11 <- ''
eip23$peer_reason_for_offer_diagnostic___12 <- ''
eip23$peer_reason_for_offer_diagnostic___13 <- ''
eip23$peer_reason_for_offer_diagnostic___14 <- ''
eip23$peer_reason_for_offer_diagnostic___15 <- ''
eip23$peer_reason_for_offer_diagnostic___16 <- ''
eip23$peer_reason_for_offer_diagnostic___17 <- ''
eip23$peer_reason_for_offer_diagnostic___18 <- ''
eip23$peer_reason_for_offer_diagnostic___19 <- ''
eip23$peer_reason_for_offer_diagnostic___20 <- ''
eip23$peer_reason_for_offer_diagnostic___21 <- ''
eip23$peer_reason_for_offer_diagnostic___22 <- ''
eip23$peer_reason_for_offer_diagnostic___23 <- ''
eip23$peer_reason_for_offer_diagnostic___24 <- ''
eip23$peer_reason_for_offer_diagnostic___25 <- ''
eip23$peer_reason_for_offer_diagnostic___26 <- ''
eip23$peer_reason_for_offer_diagnostic___27 <- ''
eip23$peer_reason_for_offer_diagnostic___28 <- ''
eip23$peer_reason_for_offer_diagnostic___29 <- ''
eip23$peer_reason_for_offer_diagnostic___30 <- ''
eip23$peer_reason_for_offer_diagnostic___31 <- ''
eip23$peer_reason_for_offer_diagnostic___32 <- ''
eip23$peer_reason_for_offer_diagnostic___33 <- ''
eip23$peer_reason_for_offer_diagnostic_other <- ''
eip23$peer_reason_for_offer_clinical___1 <- ''
eip23$peer_reason_for_offer_clinical___2 <- ''
eip23$peer_reason_for_offer_clinical___3 <- ''
eip23$peer_reason_for_offer_clinical___4 <- ''
eip23$peer_reason_for_offer_clinical___5 <- ''
eip23$peer_reason_for_offer_clinical___7 <- ''
eip23$peer_reason_for_offer_clinical___8 <- ''
eip23$peer_reason_for_offer_clinical___9 <- ''
eip23$peer_reason_for_offer_clinical___10 <- ''
eip23$peer_reason_for_offer_clinical___11 <- ''
eip23$peer_reason_for_offer_clinical___12 <- ''
eip23$peer_reason_for_offer_clinical___13 <- ''
eip23$peer_reason_for_offer_clinical___14 <- ''
eip23$peer_reason_for_offer_clinical___15 <- ''
eip23$peer_reason_for_offer_clinical___16 <- ''
eip23$peer_reason_for_offer_clinical___17 <- ''
eip23$peer_reason_for_offer_clinical___18 <- ''
eip23$peer_reason_for_offer_clinical___19 <- ''
eip23$peer_reason_for_offer_clinical___20 <- ''
eip23$peer_reason_for_offer_clinical___21 <- ''
eip23$peer_reason_for_offer_clinical___22 <- ''
eip23$peer_reason_for_offer_clinical___23 <- ''
eip23$peer_reason_for_offer_clinical___24 <- ''
eip23$peer_reason_for_offer_clinical___25 <- ''
eip23$peer_reason_for_offer_clinical___26 <- ''
eip23$peer_reason_for_offer_clinical___27 <- ''
eip23$peer_reason_for_offer_clinical___28 <- ''
eip23$peer_reason_for_offer_clinical___29 <- ''
eip23$peer_reason_for_offer_clinical___30 <- ''
eip23$peer_reason_for_offer_clinical___31 <- ''
eip23$peer_reason_for_offer_clinical_other <- ''
eip23$peer_reason_for_offer_counselor___1 <- ''
eip23$peer_reason_for_offer_counselor___2 <- ''
eip23$peer_reason_for_offer_counselor___3 <- ''
eip23$peer_reason_for_offer_counselor___4 <- ''
eip23$peer_reason_for_offer_counselor___5 <- ''
eip23$peer_reason_for_offer_counselor___6 <- ''
eip23$peer_reason_for_offer_counselor___7 <- ''
eip23$peer_reason_for_offer_counselor___8 <- ''
eip23$peer_reason_for_offer_counselor___9 <- ''
eip23$peer_reason_for_offer_counselor___10 <- ''
eip23$peer_reason_for_offer_counselor___11 <- ''
eip23$peer_reason_for_offer_counselor___12 <- ''
eip23$peer_reason_for_offer_counselor___13 <- ''
eip23$peer_reason_for_offer_counselor___14 <- ''
eip23$peer_reason_for_offer_counselor___15 <- ''
eip23$peer_reason_for_offer_counselor___16 <- ''
eip23$peer_reason_for_offer_counselor___17 <- ''
eip23$peer_reason_for_offer_counselor___18 <- ''
eip23$peer_reason_for_offer_counselor___19 <- ''
eip23$peer_reason_for_offer_counselor___20 <- ''
eip23$peer_reason_for_offer_counselor___21 <- ''
eip23$peer_reason_for_offer_counselor___22 <- ''
eip23$peer_reason_for_offer_counselor___23 <- ''
eip23$peer_reason_for_offer_counselor___24 <- ''
eip23$peer_reason_for_offer_counselor___25 <- ''
eip23$peer_reason_for_offer_counselor___26 <- ''
eip23$peer_reason_for_offer_counselor___27 <- ''
eip23$peer_reason_for_offer_counselor___28 <- ''
eip23$peer_reason_for_offer_counselor___29 <- ''
eip23$peer_reason_for_offer_counselor___30 <- ''
eip23$peer_reason_for_offer_counselor_other <- ''
eip23$peer_reason_for_offer_demographics___1 <- ''
eip23$peer_reason_for_offer_demographics___2 <- ''
eip23$peer_reason_for_offer_demographics___3 <- ''
eip23$peer_reason_for_offer_demographics___4 <- ''
eip23$peer_reason_for_offer_tnt___1 <- ''
eip23$peer_reason_for_offer_tnt___2 <- ''
eip23$peer_reason_for_offer_tnt___3 <- ''
eip23$peer_reason_for_offer_tnt_number <- ''
eip23$peer_reason_for_offer_tnt_relation <- ''
eip23$offer_outcome_time_peer <- ''
eip23$offer_outcome_location_peer <- ''
eip23$offer_outcome_room_peer <- ''
eip23$offer_outcome_approach_peer___1 <- ''
eip23$offer_outcome_approach_peer___2 <- ''
eip23$offer_outcome_approach_peer___3 <- ''
eip23$offer_outcome_approach_peer___4 <- ''
eip23$offer_outcome_approach_peer___5 <- ''
eip23$offer_outcome_approach_peer___6 <- ''
eip23$offer_outcome_approach_peer___7 <- ''
eip23$offer_outcome_approach_peer___8 <- ''
eip23$offer_outcome_peer <- ''
eip23$offer_outcome_declined_peer___1 <- ''
eip23$offer_outcome_declined_peer___2 <- ''
eip23$offer_outcome_declined_peer___3 <- ''
eip23$offer_outcome_declined_peer___4 <- ''
eip23$offer_outcome_declined_peer___5 <- ''
eip23$offer_outcome_declined_peer___6 <- ''
eip23$offer_outcome_declined_peer___7 <- ''
eip23$offer_outcome_declined_peer___8 <- ''
eip23$offer_outcome_declined_peer___9 <- ''
eip23$offer_outcome_declined_peer___10 <- ''
eip23$offer_outcome_declined_peer___11 <- ''
eip23$offer_outcome_declined_peer___12 <- ''
eip23$offer_outcome_declined_peer___13 <- ''
eip23$offer_outcome_declined_peer___14 <- ''
eip23$offer_outcome_declined_peer___15 <- ''
eip23$offer_outcome_declined_peer___16 <- ''
eip23$offer_outcome_declined_peer___17 <- ''
eip23$offer_outcome_declined_peer___18 <- ''
eip23$offer_outcome_declined_peer___19 <- ''
eip23$offer_outcome_declined_peer___20 <- ''
eip23$offer_outcome_declined_peer___21 <- ''
eip23$offer_outcome_declined_peer___22 <- ''
eip23$offer_outcome_declined_peer___23 <- ''
eip23$offer_outcome_declined_peer___24 <- ''
eip23$offer_outcome_declined_peer___25 <- ''
eip23$offer_outcome_declined_peer___26 <- ''
eip23$offer_outcome_declined_other_peer <- ''
eip23$offer_outcome_prevented_peer___1 <- ''
eip23$offer_outcome_prevented_peer___2 <- ''
eip23$offer_outcome_prevented_peer___3 <- ''
eip23$offer_outcome_prevented_peer___4 <- ''
eip23$offer_outcome_prevented_peer___5 <- ''
eip23$offer_outcome_prevented_peer___6 <- ''
eip23$offer_outcome_prevented_peer___7 <- ''
eip23$offer_outcome_prevented_peer___8 <- ''
eip23$offer_outcome_prevented_peer___9 <- ''
eip23$offer_outcome_prevented_peer___10 <- ''
eip23$offer_outcome_prevented_other_peer <- ''
eip23$peer_navigator_id___14 <- ''
eip23$peer_navigator_id___67 <- ''
eip23$peer_navigator_id___68 <- ''
eip23$peer_navigator_id___0 <- ''
eip23$peer_navigator_id_other <- ''
eip23$peer_initial_enc_details___1 <- ''
eip23$peer_initial_enc_details___2 <- ''
eip23$peer_initial_enc_details___3 <- ''
eip23$peer_initial_enc_details___4 <- ''
eip23$peer_initial_enc_details___5 <- ''
eip23$peer_initial_enc_details___6 <- ''
eip23$peer_initial_enc_details___7 <- ''
eip23$peer_initial_enc_details___8 <- ''
eip23$peer_initial_enc_details___9 <- ''
eip23$peer_initial_enc_details___10 <- ''
eip23$peer_initial_enc_details___0 <- ''
eip23$peer_initial_enc_details_other <- ''
eip23$peer_initial_enc_comments <- ''
eip23$peer_fu_yn <- ''
eip23$peer_next_fu_date <- ''
eip23$peer_fu_closed <- ''
eip23$peer_support_complete <- ''
eip23$nonmedical_drug_use_ltc <- ''
eip23$drug_difficulty_ltc <- ''
eip23$marijuana_use_ltc <- ''
eip23$cocaine_use_ltc <- ''
eip23$rx_amphetamine_use_ltc <- ''
eip23$meth_use_ltc <- ''
eip23$inhalants_use_ltc <- ''
eip23$sedatives_use_ltc <- ''
eip23$ruffies_use_ltc <- ''
eip23$hallucinogen_use_ltc <- ''
eip23$street_opioid_use_ltc <- ''
eip23$rx_opioid_use_ltc <- ''
eip23$injection_drug_use_ltc <- ''
eip23$share_works_last_ltc <- ''
eip23$other_drug_use_ltc <- ''
eip23$other_drug_ltc <- ''
eip23$idu_calc_ltc <- ''
eip23$shares_works_calc_ltc <- ''
eip23$marijuana_use_3mo_ltc <- ''
eip23$cocaine_use_3mo_ltc <- ''
eip23$rx_amphetamine_use_3mo_ltc <- ''
eip23$meth_use_3mo_ltc <- ''
eip23$inhalants_use_3mo_ltc <- ''
eip23$sedatives_use_3mo_ltc <- ''
eip23$hallucinogen_use_3mo_ltc <- ''
eip23$street_opioid_use_3mo_ltc <- ''
eip23$rx_opioid_use_3mo_ltc <- ''
eip23$other_drug_use_3mo_ltc <- ''
eip23$marijuana_use_urge_ltc <- ''
eip23$cocaine_use_urge_ltc <- ''
eip23$meth_use_urge_ltc <- ''
eip23$rx_amphetamine_use_urge_ltc <- ''
eip23$inhalants_use_urge_ltc <- ''
eip23$sedatives_use_urge_ltc <- ''
eip23$hallucinogen_use_urge_ltc <- ''
eip23$street_opioid_use_urge_ltc <- ''
eip23$rx_opioid_use_urge_ltc <- ''
eip23$other_drug_use_urge_ltc <- ''
eip23$marijuana_use_probs_ltc <- ''
eip23$cocaine_use_probs_ltc <- ''
eip23$rx_amphetamine_use_probs_ltc <- ''
eip23$meth_use_probs_ltc <- ''
eip23$inhalants_use_probs_ltc <- ''
eip23$sedatives_use_probs_ltc <- ''
eip23$hallucinogen_use_probs_ltc <- ''
eip23$street_opioid_use_probs_ltc <- ''
eip23$rx_opioid_use_probs_ltc <- ''
eip23$other_drug_use_probs_ltc <- ''
eip23$marijuana_use_failed_ltc <- ''
eip23$cocaine_use_failed_ltc <- ''
eip23$rx_amphetamine_use_failed_ltc <- ''
eip23$meth_use_failed_ltc <- ''
eip23$inhalants_use_failed_ltc <- ''
eip23$sedatives_use_failed_ltc <- ''
eip23$hallucinogen_use_failed_ltc <- ''
eip23$street_opioid_use_failed_ltc <- ''
eip23$rx_opioid_use_failed_ltc <- ''
eip23$other_drug_use_failed_ltc <- ''
eip23$marijuana_use_concern_ltc <- ''
eip23$cocaine_use_concern_ltc <- ''
eip23$rx_amphetamine_use_concern_ltc <- ''
eip23$meth_use_concern_ltc <- ''
eip23$inhalants_use_concern_ltc <- ''
eip23$sedatives_use_concern_ltc <- ''
eip23$hallucinogen_use_concern_ltc <- ''
eip23$street_opioid_use_concern_ltc <- ''
eip23$rx_opioid_use_concern_ltc <- ''
eip23$other_drug_use_concern_ltc <- ''
eip23$marijuana_use_tried_stop_ltc <- ''
eip23$cocaine_use_tried_stop_ltc <- ''
eip23$rx_amphetamine_use_tried_stop_ltc <- ''
eip23$meth_use_tried_stop_ltc <- ''
eip23$inhalants_use_tried_stop_ltc <- ''
eip23$sedatives_use_tried_stop_ltc <- ''
eip23$hallucinogen_use_tried_stop_ltc <- ''
eip23$street_opioid_use_tried_stop_ltc <- ''
eip23$rx_opioid_use_tried_stop_ltc <- ''
eip23$other_drug_use_tried_stop_ltc <- ''
eip23$assist_score_ltc <- ''
eip23$marijuana_score_ltc <- ''
eip23$cocaine_score_ltc <- ''
eip23$rx_amphetamine_score_ltc <- ''
eip23$meth_score_ltc <- ''
eip23$inhalants_score_ltc <- ''
eip23$sedatives_score_ltc <- ''
eip23$hallucinogen_score_ltc <- ''
eip23$street_opioid_score_ltc <- ''
eip23$rx_opioid_score_ltc <- ''
eip23$other_drug_score_ltc <- ''
eip23$marijuana_pos_ltc <- ''
eip23$cocaine_pos_ltc <- ''
eip23$rx_amphetamine_pos_ltc <- ''
eip23$meth_pos_ltc <- ''
eip23$inhalants_pos_ltc <- ''
eip23$sedatives_pos_ltc <- ''
eip23$hallucinogen_pos_ltc <- ''
eip23$street_opioid_pos_ltc <- ''
eip23$rx_opioid_pos_ltc <- ''
eip23$other_drug_pos_ltc <- ''
eip23$assist_pos_ltc <- ''
eip23$sud_screen_positive_ltc <- ''
eip23$ltc_hcv_referral_uc_pharmacy_date <- ''
eip23$ltc_sud_referral_decoach_date <- ''
eip23$ltc_mh_referral_charlie_date <- ''
eip23$ltc_mh_referral_lighthouse_date <- ''
eip23$ltc_mh_referral_mindpeace_date <- ''
eip23$ltc_mh_referral_probono_date <- ''
eip23$ltc_housing_referral_freestore_date <- ''
eip23$ltc_housing_referral_lighthouse_date <- ''
eip23$ltc_food_referral_our_savior_date <- ''
eip23$ltc_food_referral_evanston_date <- ''
eip23$ltc_food_referral_fairhaven_date <- ''
eip23$ltc_food_referral_healthy_harvest_date <- ''
eip23$ltc_food_referral_prince_date <- ''
eip23$ltc_food_referral_united_date <- ''
eip23$ltc_financial_referral_freestore_date <- ''
eip23$ltc_financial_referral_welcome_home_nky_date <- ''
eip23$ltc_financial_referral_freestore___1 <- ''
eip23$ltc_financial_referral_freestore___2 <- ''
eip23$ltc_financial_referral_freestore___3 <- ''
eip23$ltc_financial_referral_welcome_home_nky___1 <- ''
eip23$ltc_financial_referral_welcome_home_nky___2 <- ''
eip23$ltc_financial_referral_welcome_home_nky___3 <- ''
eip23$ltc_food_referral_evanston___1 <- ''
eip23$ltc_food_referral_evanston___2 <- ''
eip23$ltc_food_referral_evanston___3 <- ''
eip23$ltc_food_referral_fairhaven___1 <- ''
eip23$ltc_food_referral_fairhaven___2 <- ''
eip23$ltc_food_referral_fairhaven___3 <- ''
eip23$ltc_food_referral_healthy_harvest___1 <- ''
eip23$ltc_food_referral_healthy_harvest___2 <- ''
eip23$ltc_food_referral_healthy_harvest___3 <- ''
eip23$ltc_food_referral_our_savior___1 <- ''
eip23$ltc_food_referral_our_savior___2 <- ''
eip23$ltc_food_referral_our_savior___3 <- ''
eip23$ltc_food_referral_prince___1 <- ''
eip23$ltc_food_referral_prince___2 <- ''
eip23$ltc_food_referral_prince___3 <- ''
eip23$ltc_food_referral_united___1 <- ''
eip23$ltc_food_referral_united___2 <- ''
eip23$ltc_food_referral_united___3 <- ''
eip23$ltc_hcv_referral_uc_pharmacy___1 <- ''
eip23$ltc_hcv_referral_uc_pharmacy___2 <- ''
eip23$ltc_hcv_referral_uc_pharmacy___3 <- ''
eip23$ltc_hcv_referral_uc_pharmacy_telehealth___1 <- ''
eip23$ltc_hcv_referral_uc_pharmacy_telehealth___2 <- ''
eip23$ltc_hcv_referral_uc_pharmacy_telehealth___3 <- ''
eip23$ltc_housing_referral_freestore___1 <- ''
eip23$ltc_housing_referral_freestore___2 <- ''
eip23$ltc_housing_referral_freestore___3 <- ''
eip23$ltc_housing_referral_lighthouse___1 <- ''
eip23$ltc_housing_referral_lighthouse___2 <- ''
eip23$ltc_housing_referral_lighthouse___3 <- ''
eip23$ltc_mh_referral_charlie___1 <- ''
eip23$ltc_mh_referral_charlie___2 <- ''
eip23$ltc_mh_referral_charlie___3 <- ''
eip23$ltc_mh_referral_lighthouse___1 <- ''
eip23$ltc_mh_referral_lighthouse___2 <- ''
eip23$ltc_mh_referral_lighthouse___3 <- ''
eip23$ltc_mh_referral_mindpeace___1 <- ''
eip23$ltc_mh_referral_mindpeace___2 <- ''
eip23$ltc_mh_referral_mindpeace___3 <- ''
eip23$ltc_mh_referral_probono___1 <- ''
eip23$ltc_mh_referral_probono___2 <- ''
eip23$ltc_mh_referral_probono___3 <- ''
eip23$ltc_sud_referral_decoach___1 <- ''
eip23$ltc_sud_referral_decoach___2 <- ''
eip23$ltc_sud_referral_decoach___3 <- ''
eip23$followup_counselor_other1 <- ''
eip23$followup_counselor_other10 <- ''
eip23$followup_counselor_other11 <- ''
eip23$followup_counselor_other12 <- ''
eip23$followup_counselor_other13 <- ''
eip23$followup_counselor_other14 <- ''
eip23$followup_counselor_other15 <- ''
eip23$followup_counselor_other16 <- ''
eip23$followup_counselor_other17 <- ''
eip23$followup_counselor_other18 <- ''
eip23$followup_counselor_other19 <- ''
eip23$followup_counselor_other2 <- ''
eip23$followup_counselor_other20 <- ''
eip23$followup_counselor_other21 <- ''
eip23$followup_counselor_other22 <- ''
eip23$followup_counselor_other23 <- ''
eip23$followup_counselor_other24 <- ''
eip23$followup_counselor_other25 <- ''
eip23$followup_counselor_other26 <- ''
eip23$followup_counselor_other27 <- ''
eip23$followup_counselor_other28 <- ''
eip23$followup_counselor_other29 <- ''
eip23$followup_counselor_other3 <- ''
eip23$followup_counselor_other30 <- ''
eip23$followup_counselor_other31 <- ''
eip23$followup_counselor_other32 <- ''
eip23$followup_counselor_other33 <- ''
eip23$followup_counselor_other34 <- ''
eip23$followup_counselor_other35 <- ''
eip23$followup_counselor_other36 <- ''
eip23$followup_counselor_other37 <- ''
eip23$followup_counselor_other38 <- ''
eip23$followup_counselor_other39 <- ''
eip23$followup_counselor_other4 <- ''
eip23$followup_counselor_other40 <- ''
eip23$followup_counselor_other41 <- ''
eip23$followup_counselor_other42 <- ''
eip23$followup_counselor_other43 <- ''
eip23$followup_counselor_other44 <- ''
eip23$followup_counselor_other45 <- ''
eip23$followup_counselor_other46 <- ''
eip23$followup_counselor_other47 <- ''
eip23$followup_counselor_other48 <- ''
eip23$followup_counselor_other49 <- ''
eip23$followup_counselor_other5 <- ''
eip23$followup_counselor_other50 <- ''
eip23$followup_counselor_other6 <- ''
eip23$followup_counselor_other7 <- ''
eip23$followup_counselor_other8 <- ''
eip23$followup_counselor_other9 <- ''
eip23$ltc_service_other1 <- ''
eip23$ltc_service_other10 <- ''
eip23$ltc_service_other11 <- ''
eip23$ltc_service_other12 <- ''
eip23$ltc_service_other13 <- ''
eip23$ltc_service_other14 <- ''
eip23$ltc_service_other15 <- ''
eip23$ltc_service_other16 <- ''
eip23$ltc_service_other17 <- ''
eip23$ltc_service_other18 <- ''
eip23$ltc_service_other19 <- ''
eip23$ltc_service_other2 <- ''
eip23$ltc_service_other20 <- ''
eip23$ltc_service_other21 <- ''
eip23$ltc_service_other22 <- ''
eip23$ltc_service_other23 <- ''
eip23$ltc_service_other24 <- ''
eip23$ltc_service_other25 <- ''
eip23$ltc_service_other26 <- ''
eip23$ltc_service_other27 <- ''
eip23$ltc_service_other28 <- ''
eip23$ltc_service_other29 <- ''
eip23$ltc_service_other3 <- ''
eip23$ltc_service_other30 <- ''
eip23$ltc_service_other31 <- ''
eip23$ltc_service_other32 <- ''
eip23$ltc_service_other33 <- ''
eip23$ltc_service_other34 <- ''
eip23$ltc_service_other35 <- ''
eip23$ltc_service_other36 <- ''
eip23$ltc_service_other37 <- ''
eip23$ltc_service_other38 <- ''
eip23$ltc_service_other39 <- ''
eip23$ltc_service_other4 <- ''
eip23$ltc_service_other40 <- ''
eip23$ltc_service_other41 <- ''
eip23$ltc_service_other42 <- ''
eip23$ltc_service_other43 <- ''
eip23$ltc_service_other44 <- ''
eip23$ltc_service_other45 <- ''
eip23$ltc_service_other46 <- ''
eip23$ltc_service_other47 <- ''
eip23$ltc_service_other48 <- ''
eip23$ltc_service_other49 <- ''
eip23$ltc_service_other5 <- ''
eip23$ltc_service_other50 <- ''
eip23$ltc_service_other6 <- ''
eip23$ltc_service_other7 <- ''
eip23$ltc_service_other8 <- ''
eip23$ltc_service_other9 <- ''
eip23$services1___11 <- ''
eip23$ltc_sud_oud_fu <- ''
eip23$ltc_hcv_dashboard <- ''
eip23$ltc_hcv_initial_contact <- ''
eip23$ltc_coordinator_per_case_other <- ''
eip23$counselor_ref_sud_specific___15 <- ''
eip23$counselor_ref_sud_specific___16 <- ''
eip23$counselor_ref_sud_specific___17 <- ''
eip23$counselor_ref_sud_specific___18 <- ''
eip23$counselor_ref_sud_specific___19 <- ''
eip23$counselor_ref_sud_specific___20 <- ''
eip23$counselor_ref_sud_specific___21 <- ''
eip23$counselor_ref_sud_specific___22 <- ''
eip23$counselor_ref_sud_specific___23 <- ''
eip23$counselor_ref_sud_specific___24 <- ''
eip23$counselor_ref_sud_specific___25 <- ''
eip23$counselor_ref_sud_specific___26 <- ''
eip23$counselor_ref_sud_specific___27 <- ''
eip23$counselor_ref_sud_specific___28 <- ''
eip23$counselor_ref_sud_specific___29 <- ''
eip23$counselor_ref_sud_specific___30 <- ''
eip23$counselor_ref_sud_specific___31 <- ''
eip23$counselor_ref_sud_specific___32 <- ''
eip23$counselor_ref_sud_specific___33 <- ''
eip23$counselor_ref_sud_specific___34 <- ''
eip23$counselor_ref_sud_specific___35 <- ''
eip23$counselor_ref_sud_specific___36 <- ''
eip23$counselor_ref_sud_specific___37 <- ''
eip23$counselor_ref_sud_specific___38 <- ''
eip23$counselor_ref_sud_specific___39 <- ''
eip23$counselor_ref_sud_specific___40 <- ''
eip23$counselor_ref_sud_specific___41 <- ''
eip23$counselor_ref_sud_specific___42 <- ''
eip23$counselor_ref_sud_specific___43 <- ''
eip23$counselor_ref_sud_specific___44 <- ''
eip23$counselor_ref_sud_specific___45 <- ''
eip23$counselor_ref_sud_specific___46 <- ''
eip23$counselor_ref_sud_specific___47 <- ''
eip23$counselor_ref_sud_specific___48 <- ''
eip23$counselor_ref_sud_specific___49 <- ''
eip23$counselor_ref_sud_specific___50 <- ''
eip23$counselor_ref_sud_specific___51 <- ''
eip23$counselor_ref_sud_specific___52 <- ''
eip23$counselor_ref_sud_specific___53 <- ''
eip23$counselor_ref_sud_specific___54 <- ''
eip23$counselor_ref_sud_specific___55 <- ''
eip23$counselor_ref_sud_specific___56 <- ''
eip23$counselor_ref_sud_specific___57 <- ''
eip23$counselor_ref_mh_specific___6 <- ''
eip23$counselor_ref_mh_specific___7 <- ''
eip23$counselor_ref_mh_specific___8 <- ''
eip23$counselor_ref_mh_specific___9 <- ''
eip23$counselor_ref_housing_specific___9 <- ''
eip23$counselor_ref_housing_specific___10 <- ''
eip23$counselor_ref_housing_specific___11 <- ''
eip23$counselor_ref_housing_specific___12 <- ''
eip23$counselor_ref_housing_specific___13 <- ''
eip23$counselor_ref_housing_specific___14 <- ''
eip23$counselor_ref_housing_specific___15 <- ''
eip23$counselor_ref_housing_specific___16 <- ''
eip23$counselor_ref_housing_specific___17 <- ''
eip23$counselor_ref_housing_specific___18 <- ''
eip23$counselor_ref_housing_specific___19 <- ''
eip23$counselor_ref_housing_specific___20 <- ''
eip23$counselor_ref_food_specific___5 <- ''
eip23$counselor_ref_food_specific___6 <- ''
eip23$counselor_ref_food_specific___7 <- ''
eip23$counselor_ref_food_specific___8 <- ''
eip23$counselor_ref_food_specific___9 <- ''
eip23$counselor_ref_food_specific___10 <- ''
eip23$counselor_ref_financial_specific___2 <- ''
eip23$counselor_ref_financial_specific___3 <- ''
eip23$counselor_ref_sud_specific___11 <- ''
eip23$ltc_sud_referral_decoach___0 <- ''
eip23$ltc_hcv_referral_uc_pharmacy_telehealth <- ''
eip23$ltc_coordinator_per_case___77 <- ''
eip23$ltc_coordinator_per_case___78 <- ''
eip23$ltc_coordinator_per_case___79 <- ''
eip23$ltc_coordinator_per_case___80 <- ''
eip23$anderson_ltc_open_calc <- ''
eip23$counselor_ref_sud_specific___58 <- ''
eip23$ltc_sud_referral_pods___0 <- ''
eip23$ltc_sud_referral_pods___1 <- ''
eip23$ltc_sud_referral_pods___2 <- ''
eip23$ltc_sud_referral_pods___3 <- ''
eip23$ltc_sud_referral_pods_date <- ''

# Adding variables removed from 2023 dataset to 2024 dataset as blank values
eip24$ltc_hcv_referral_uc_pharmacy_telehealth___1 <- ''
eip24$ltc_hcv_referral_uc_pharmacy_telehealth___2 <- ''
eip24$ltc_hcv_referral_uc_pharmacy_telehealth___3 <- ''
eip24$ltc_coordinator_per_case___2 <- ''
eip24$ltc_coordinator_per_case___12 <- ''
eip24$ltc_coordinator_per_case___61 <- ''
eip24$ltc_coordinator_per_case___54 <- ''
eip24$ltc_coordinator_per_case___24 <- ''
eip24$ltc_coordinator_per_case___64 <- ''
eip24$ltc_coordinator_per_case___28 <- ''
eip24$ltc_coordinator_per_case___63 <- ''
eip24$ltc_coordinator_per_case___49 <- ''
eip24$ltc_coordinator_per_case___69 <- ''
eip24$ltc_coordinator_per_case___30 <- ''


# Removing 2023 variables that are not needed/not in 2024 dataset
eip23 <- select(eip23, -contact_by1, -contact_by10, -contact_by11, -contact_by12, -contact_by13, -contact_by14, -contact_by15, -contact_by16,
               -contact_by17, -contact_by18, -contact_by19, -contact_by2, -contact_by20, -contact_by21, -contact_by22, -contact_by23, -contact_by24,
               -contact_by25, -contact_by26, -contact_by27, -contact_by28, -contact_by29, -contact_by3, -contact_by30, -contact_by31, -contact_by32,
               -contact_by33, -contact_by34, -contact_by35, -contact_by36, -contact_by37, -contact_by38, -contact_by39, -contact_by4, -contact_by40,
               -contact_by41, -contact_by42, -contact_by43, -contact_by44, -contact_by45, -contact_by46, -contact_by47, -contact_by48, -contact_by49,
               -contact_by5, -contact_by50, -contact_by6, -contact_by7, -contact_by8, -contact_by9, -contact_purpose1, -contact_purpose10,
               -contact_purpose11, -contact_purpose12, -contact_purpose13, -contact_purpose14, -contact_purpose15, -contact_purpose16,
               -contact_purpose17, -contact_purpose18, -contact_purpose19, -contact_purpose2, -contact_purpose20, -contact_purpose21,
               -contact_purpose22, -contact_purpose23, -contact_purpose24, -contact_purpose25, -contact_purpose26, -contact_purpose27,
               -contact_purpose28, -contact_purpose29, -contact_purpose3, -contact_purpose30, -contact_purpose31, -contact_purpose32,
               -contact_purpose33, -contact_purpose34, -contact_purpose35, -contact_purpose36, -contact_purpose37, -contact_purpose38,
               -contact_purpose39, -contact_purpose4, -contact_purpose40, -contact_purpose41, -contact_purpose42, -contact_purpose43,
               -contact_purpose44, -contact_purpose45, -contact_purpose46, -contact_purpose47, -contact_purpose48, -contact_purpose49,
               -contact_purpose5, -contact_purpose50, -contact_purpose6, -contact_purpose7, -contact_purpose8, -contact_purpose9,
               -ltc_service1___7, -ltc_service10___7, -ltc_service11___7, -ltc_service12___7, -ltc_service13___7, -ltc_service14___7,
               -ltc_service15___7, -ltc_service16___7, -ltc_service17___7, -ltc_service18___7, -ltc_service19___7, -ltc_service2___7,
               -ltc_service20___7, -ltc_service21___7, -ltc_service22___7, -ltc_service23___7, -ltc_service24___7, -ltc_service25___7,
               -ltc_service26___7, -ltc_service27___7, -ltc_service28___7, -ltc_service29___7, -ltc_service3___7, -ltc_service30___7,
               -ltc_service31___7, -ltc_service32___7, -ltc_service33___7, -ltc_service34___7, -ltc_service35___7, -ltc_service36___7,
               -ltc_service37___7, -ltc_service38___7, -ltc_service39___7, -ltc_service4___7, -ltc_service40___7, -ltc_service41___7,
               -ltc_service42___7, -ltc_service43___7, -ltc_service44___7, -ltc_service45___7, -ltc_service46___7, -ltc_service47___7,
               -ltc_service48___7, -ltc_service49___7, -ltc_service5___7, -ltc_service50___7, -ltc_service6___7, -ltc_service7___7, -ltc_service8___7,
               -ltc_service9___7, -sex_selfdefined_risks, -any_drug_branch_calc, -any_drug3mo_branch_calc,
               -peer_navigator_id___24, -aspire_attend_intake_rsn___1, -aspire_attend_intake_rsn___9,
               -aspire_attend_intake_rsn___7, -aspire_attend_intake_rsn___2, -aspire_attend_intake_rsn___3,
               -aspire_attend_intake_rsn___8, -aspire_attend_intake_rsn___10, -aspire_attend_intake_rsn___6,
               -aspire_attend_intake_rsn___11, -aspire_attend_intake_rsn___4, -aspire_attend_intake_rsn___5,
               -aspire_attend_intake_rsn___16, -aspire_attend_intake_rsn___12, -aspire_attend_intake_rsn___13,
               -aspire_attend_intake_rsn___14, -aspire_attend_intake_rsn___15, -aspire_attend_intake_rsn___88,
               -aspire_attend_intake_rsn___0, -aspire_attend_intake_rsn_other, -ltc_sti_referral_hotline_date,
               -ltc_hcv_linkage_success___1, -ltc_hcv_linkage_success___2, -ltc_hcv_med_complete_date,
               -duba_ltc_open_calc, -fouch_ltc_open_calc)
setdiff(names(eip23), names(eip24))
setdiff(names(eip24), names(eip23))
dim(eip23)
dim(eip24)

eip <- rbind(eip23, eip24)
dim(eip)

```

```{r Patient Information, include=FALSE}

# Formatting variables

summary(eip$enc_date)
eip$enc_date <- as.Date(eip$enc_date, format='%m/%d/%Y')
summary(eip$enc_date)

summary(eip$dob)
eip$dob <- as.Date(eip$dob, format='%m/%d/%Y')
summary(eip$dob)


table(eip$race___1)
White <- eip[which(eip$race___1 == '1'), ]
dim(White)
White <- select(White, record_id)
White$White <- 1
table(White$White)
White <- distinct(White)
dim(White)
head(White)

table(eip$race___2)
Black <- eip[which(eip$race___2 == '1'), ]
dim(Black)
Black <- select(Black, record_id)
Black$Black <- 1
table(Black$Black)
Black <- distinct(Black)
dim(Black)
head(Black)

table(eip$race___3)
Asian <- eip[which(eip$race___3 == '1'), ]
dim(Asian)
Asian <- select(Asian, record_id)
Asian$Asian <- 1
table(Asian$Asian)
Asian <- distinct(Asian)
dim(Asian)
head(Asian)

table(eip$race___4)
AmIn <- eip[which(eip$race___4 == '1'), ]
dim(AmIn)
AmIn <- select(AmIn, record_id)
AmIn$AmIn <- 1
table(AmIn$AmIn)
AmIn <- distinct(AmIn)
dim(AmIn)
head(AmIn)

table(eip$race___5)
RaceOther <- eip[which(eip$race___5 == '1'), ]
dim(RaceOther)
RaceOther <- select(RaceOther, record_id)
RaceOther$RaceOther <- 1
table(RaceOther$RaceOther)
RaceOther <- distinct(RaceOther)
dim(RaceOther)
head(RaceOther)

table(eip$race___6)
RaceUnk <- eip[which(eip$race___6 == '1'), ]
dim(RaceUnk)
RaceUnk <- select(RaceUnk, record_id)
RaceUnk$RaceUnk <- 1
table(RaceUnk$RaceUnk)
RaceUnk <- distinct(RaceUnk)
dim(RaceUnk)
head(RaceUnk)

table(eip$ethnicity)
RaceHisp <- eip[which(eip$ethnicity == 1), ]
dim(RaceHisp)
RaceHisp <- select(RaceHisp, record_id)
RaceHisp$RaceHisp <- 1
table(RaceHisp$RaceHisp)
RaceHisp <- distinct(RaceHisp)
dim(RaceHisp)
head(RaceHisp)


race <- select(eip, record_id)
race <- distinct(race)
dim(race)


dim(race)
race <- merge(race, White, by = 'record_id', all.x = T)
race <- merge(race, Black, by = 'record_id', all.x = T)
race <- merge(race, Asian, by = 'record_id', all.x = T)
race <- merge(race, AmIn, by = 'record_id', all.x = T)
race <- merge(race, RaceOther, by = 'record_id', all.x = T)
race <- merge(race, RaceUnk, by = 'record_id', all.x = T)
race <- merge(race, RaceHisp, by = 'record_id', all.x = T)
dim(race)
head(race)

race$White[is.na(race$White)] <- 0
race$Black[is.na(race$Black)] <- 0
race$Asian[is.na(race$Asian)] <- 0
race$AmIn[is.na(race$AmIn)] <- 0
race$RaceOther[is.na(race$RaceOther)] <- 0
race$RaceUnk[is.na(race$RaceUnk)] <- 0
race$RaceHisp[is.na(race$RaceHisp)] <- 0

race$RaceNumber <- race$White + race$Black + race$Asian + race$AmIn + race$RaceOther + race$RaceUnk + race$RaceHisp
table(race$RaceNumber)
head(race)

race$race[race$RaceNumber == 1 & race$Black == 1] <- 'Black/African American'
race$race[race$RaceNumber == 1 & race$White == 1] <- 'White'
race$race[race$RaceNumber == 1 & race$Asian == 1] <- 'Asian/Pacific Islander'
race$race[race$RaceNumber == 1 & race$AmIn == 1] <- 'American Indian/Alaska native'
race$race[race$RaceNumber == 1 & race$RaceOther == 1] <- 'Other'
race$race[(race$RaceNumber == 1 & race$RaceHisp == 1) |
            (race$RaceNumber > 1 & race$RaceHisp == 1)] <- 'Hispanic/Latinx'
race$race[race$RaceNumber > 1 & race$RaceHisp != 1] <- 'Biracial/Multiracial'
race$race[race$RaceNumber == 0 | is.na(race$RaceNumber) | race$RaceUnk == 1] <- 'Unknown'
table(race$race)

dim(eip)
dim(race)
eip <- merge(eip, race, by = 'record_id', all.x = T)
dim(eip)
table(eip$race)




table(eip$sex_raised)
eip$sex[eip$sex_raised == 1] <- 'Male'
eip$sex[eip$sex_raised == 2] <- 'Female'
eip$sex[eip$sex_raised == 3 | is.na(eip$sex_raised) | eip$sex_raised == ''] <- 'Unknown/Unassigned'
table(eip$sex)



table(eip$sex_raised, eip$sex_selfdefined)
eip$gender[eip$sex_raised == 1 & eip$sex_selfdefined == 1] <- 'Male'
eip$gender[eip$sex_raised == 2 & eip$sex_selfdefined == 2] <- 'Female'
eip$gender[(eip$sex_raised == 1 & eip$sex_selfdefined == 2) |
             (eip$sex_raised == 2 & eip$sex_selfdefined == 1) |
             (eip$sex_raised == 1 & eip$sex_selfdefined == 3) |
             (eip$sex_raised == 2 & eip$sex_selfdefined == 3)] <- 'Transgender/Nonbinary'
eip$gender[(eip$sex_raised == 3 & eip$sex_selfdefined == 3) |
             is.na(eip$sex_raised) | is.na(eip$sex_selfdefined)] <- 'Unknown'
table(eip$gender)


table(eip$insurance)
eip$insurance[eip$insurance == 1] <- 'None'
eip$insurance[eip$insurance == 2] <- 'UC Health (Levy)'
eip$insurance[eip$insurance == 3] <- 'Medicaid'
eip$insurance[eip$insurance == 4] <- 'Medicare'
eip$insurance[eip$insurance == 5] <- 'Military/VA'
eip$insurance[eip$insurance == 6] <- 'Private'
eip$insurance[eip$insurance == 7] <- 'Dual Medicaid/Medicare'
eip$insurance[is.na(eip$insurance)] <- 'Unknown'
table(eip$insurance)



# Populations of Interest
### WOC, Youth (18-24), MSM, IDU, HRHS, PLWHA

table(eip$race, eip$gender)
eip$WOC[(eip$race != 'White' & eip$race != 'Unknown') & eip$gender == 'Female'] <- 1
table(eip$WOC)


table(eip$age)
eip$Youth[eip$age >= 13 & eip$age <= 29] <- 1
table(eip$Youth)


eip$MSM[eip$gender == 'Male' & ((eip$sex_orientation == '2' | eip$sex_orientation == '4') |
                                  (eip$sex_w_man___1 == '1' | eip$sex_w_man___2 == '1' |
                                     eip$sex_w_man___3 == '1') |
                                  (eip$sex_w_ftm___1 == '1' | eip$sex_w_ftm___2 == '1' |
                                     eip$sex_w_ftm___3 == '1') |
                                  (eip$sex_msm___1 == '1' | eip$sex_msm___2 == '1' |
                                     eip$sex_msm___3 == '1') |
                                  (eip$hiv_dx_risks___2 == '1'))] <- 1
table(eip$MSM)


eip$IDU[eip$idu_calc == 1 | eip$hiv_dx_risks___3 == '1'] <- 1
table(eip$IDU)


# For HRHS, all sexual behavior is within the previous 12 months
### Heterosexual males that have unprotected sex with women
### Heterosexual women that have unprotected sex with men
### Heterosexual women that have sex with MSM
### Heterosexual men/women that have sex with IDU
### Heterosexual men/women that have sex with HIV+ partner
### Heterosexual men/women that exchange money/drugs for sex
### Heterosexual men/women that have sex with STD+ partner
### Heterosexual men/women that have more than 3 partners

eip$Hetero[(eip$gender == 'Male' & (eip$sex_w_woman___1 == '1' |
                                      eip$sex_w_woman___2 == '1' | eip$sex_w_woman___3 == '1')) |
             (eip$gender == 'Female' & (eip$sex_w_man___1 == '1' | eip$sex_w_man___2 == '1' |
                                          eip$sex_w_man___3 == '1'))] <- 1
table(eip$Hetero)


eip$HRHS[(eip$Hetero == 1) & ((((eip$sex_w_woman___6 == '1' | eip$sex_w_woman___7 == '1') |
                                  (is.na(eip$sex_w_woman___6) & is.na(eip$sex_w_woman___7) &
                                     is.na(eip$sex_w_woman___8)))) | (((eip$sex_w_man___6 == '1' |
                                                                          eip$sex_w_man___7 == '1') |
                                                                         (is.na(eip$sex_w_man___6) &
                                                                            is.na(eip$sex_w_man___7) &
                                                                            is.na(eip$sex_w_man___8)))) |
                                (eip$sex_msm___1 == '1' | eip$sex_msm___2 == '1' | eip$sex_msm___3 == '1') |
                                (eip$sex_idu___1 == '1' | eip$sex_idu___2 == '1' | eip$sex_idu___3 == '1') |
                                (eip$sex_hiv_pos___1 == '1' | eip$sex_hiv_pos___2 == '1' |
                                   eip$sex_hiv_pos___3 == '1') | (eip$sex_receivemoney___1 == '1' |
                                                                    eip$sex_receivemoney___2 == '1' |
                                                                    eip$sex_receivemoney___3 == '1' |
                                                                    eip$sex_receivedrugs___1 == '1' |
                                                                    eip$sex_receivedrugs___2 == '1' |
                                                                    eip$sex_receivedrugs___3 == '1' |
                                                                    eip$sex_paymoney___1 == '1' |
                                                                    eip$sex_paymoney___2 == '1' |
                                                                    eip$sex_paymoney___3 == '1' |
                                                                    eip$sex_paydrugs___1 == '1' |
                                                                    eip$sex_paydrugs___2 == '1' |
                                                                    eip$sex_paydrugs___3 == '1')  |
                                (eip$sex_sti_pos___1 == '1' | eip$sex_sti_pos___2 == '1' |
                                   eip$sex_sti_pos___3 == '1') | (eip$sex_partners_past_year >= 3))] <- 1
table(eip$HRHS)




# Appalachian

eip$appalachian_pt[eip$address_zip_code == 43006 | eip$address_zip_code == 43056 |
                     eip$address_zip_code == 43076 | eip$address_zip_code == 43101 |
                     eip$address_zip_code == 43102 | eip$address_zip_code == 43107 |
                     eip$address_zip_code == 43111 | eip$address_zip_code == 43115 |
                     eip$address_zip_code == 43127 | eip$address_zip_code == 43135 |
                     eip$address_zip_code == 43138 | eip$address_zip_code == 43144 |
                     eip$address_zip_code == 43148 | eip$address_zip_code == 43149 |
                     eip$address_zip_code == 43150 | eip$address_zip_code == 43152 |
                     eip$address_zip_code == 43155 | eip$address_zip_code == 43158 |
                     eip$address_zip_code == 43160 | eip$address_zip_code == 43164 |
                     eip$address_zip_code == 43701 | eip$address_zip_code == 43702 |
                     eip$address_zip_code == 43711 | eip$address_zip_code == 43713 |
                     eip$address_zip_code == 43716 | eip$address_zip_code == 43717 |
                     eip$address_zip_code == 43718 | eip$address_zip_code == 43719 |
                     eip$address_zip_code == 43720 | eip$address_zip_code == 43722 |
                     eip$address_zip_code == 43723 | eip$address_zip_code == 43724 |
                     eip$address_zip_code == 43725 | eip$address_zip_code == 43727 |
                     eip$address_zip_code == 43728 | eip$address_zip_code == 43730 |
                     eip$address_zip_code == 43731 | eip$address_zip_code == 43732 |
                     eip$address_zip_code == 43733 | eip$address_zip_code == 43734 |
                     eip$address_zip_code == 43735 | eip$address_zip_code == 43736 |
                     eip$address_zip_code == 43738 | eip$address_zip_code == 43739 |
                     eip$address_zip_code == 43746 | eip$address_zip_code == 43747 |
                     eip$address_zip_code == 43748 | eip$address_zip_code == 43749 |
                     eip$address_zip_code == 43750 | eip$address_zip_code == 43752 |
                     eip$address_zip_code == 43754 | eip$address_zip_code == 43755 |
                     eip$address_zip_code == 43756 | eip$address_zip_code == 43757 |
                     eip$address_zip_code == 43758 | eip$address_zip_code == 43759 |
                     eip$address_zip_code == 43760 | eip$address_zip_code == 43761 |
                     eip$address_zip_code == 43762 | eip$address_zip_code == 43764 |
                     eip$address_zip_code == 43766 | eip$address_zip_code == 43767 |
                     eip$address_zip_code == 43768 | eip$address_zip_code == 43771 |
                     eip$address_zip_code == 43772 | eip$address_zip_code == 43773 |
                     eip$address_zip_code == 43777 | eip$address_zip_code == 43778 |
                     eip$address_zip_code == 43779 | eip$address_zip_code == 43780 |
                     eip$address_zip_code == 43782 | eip$address_zip_code == 43783 |
                     eip$address_zip_code == 43786 | eip$address_zip_code == 43787 |
                     eip$address_zip_code == 43788 | eip$address_zip_code == 43791 |
                     eip$address_zip_code == 43793 | eip$address_zip_code == 43802 |
                     eip$address_zip_code == 43803 | eip$address_zip_code == 43804 |
                     eip$address_zip_code == 43805 | eip$address_zip_code == 43811 |
                     eip$address_zip_code == 43812 | eip$address_zip_code == 43821 |
                     eip$address_zip_code == 43822 | eip$address_zip_code == 43824 |
                     eip$address_zip_code == 43828 | eip$address_zip_code == 43830 |
                     eip$address_zip_code == 43832 | eip$address_zip_code == 43836 |
                     eip$address_zip_code == 43837 | eip$address_zip_code == 43840 |
                     eip$address_zip_code == 43842 | eip$address_zip_code == 43843 |
                     eip$address_zip_code == 43844 | eip$address_zip_code == 43845 |
                     eip$address_zip_code == 43901 | eip$address_zip_code == 43902 |
                     eip$address_zip_code == 43903 | eip$address_zip_code == 43905 |
                     eip$address_zip_code == 43906 | eip$address_zip_code == 43907 |
                     eip$address_zip_code == 43908 | eip$address_zip_code == 43909 |
                     eip$address_zip_code == 43910 | eip$address_zip_code == 43912 |
                     eip$address_zip_code == 43913 | eip$address_zip_code == 43914 |
                     eip$address_zip_code == 43915 | eip$address_zip_code == 43916 |
                     eip$address_zip_code == 43917 | eip$address_zip_code == 43920 |
                     eip$address_zip_code == 43925 | eip$address_zip_code == 43926 |
                     eip$address_zip_code == 43927 | eip$address_zip_code == 43928 |
                     eip$address_zip_code == 43930 | eip$address_zip_code == 43931 |
                     eip$address_zip_code == 43932 | eip$address_zip_code == 43933 |
                     eip$address_zip_code == 43934 | eip$address_zip_code == 43935 |
                     eip$address_zip_code == 43937 | eip$address_zip_code == 43938 |
                     eip$address_zip_code == 43939 | eip$address_zip_code == 43940 |
                     eip$address_zip_code == 43941 | eip$address_zip_code == 43942 |
                     eip$address_zip_code == 43943 | eip$address_zip_code == 43944 |
                     eip$address_zip_code == 43945 | eip$address_zip_code == 43946 |
                     eip$address_zip_code == 43947 | eip$address_zip_code == 43948 |
                     eip$address_zip_code == 43950 | eip$address_zip_code == 43951 |
                     eip$address_zip_code == 43952 | eip$address_zip_code == 43953 |
                     eip$address_zip_code == 43961 | eip$address_zip_code == 43962 |
                     eip$address_zip_code == 43963 | eip$address_zip_code == 43964 |
                     eip$address_zip_code == 43967 | eip$address_zip_code == 43968 |
                     eip$address_zip_code == 43970 | eip$address_zip_code == 43971 |
                     eip$address_zip_code == 43972 | eip$address_zip_code == 43973 |
                     eip$address_zip_code == 43974 | eip$address_zip_code == 43976 |
                     eip$address_zip_code == 43977 | eip$address_zip_code == 43981 |
                     eip$address_zip_code == 43983 | eip$address_zip_code == 43984 |
                     eip$address_zip_code == 43985 | eip$address_zip_code == 43986 |
                     eip$address_zip_code == 43988 | eip$address_zip_code == 44003 |
                     eip$address_zip_code == 44004 | eip$address_zip_code == 44005 |
                     eip$address_zip_code == 44010 | eip$address_zip_code == 44030 |
                     eip$address_zip_code == 44032 | eip$address_zip_code == 44041 |
                     eip$address_zip_code == 44046 | eip$address_zip_code == 44047 |
                     eip$address_zip_code == 44048 | eip$address_zip_code == 44057 |
                     eip$address_zip_code == 44062 | eip$address_zip_code == 44064 |
                     eip$address_zip_code == 44068 | eip$address_zip_code == 44076 |
                     eip$address_zip_code == 44082 | eip$address_zip_code == 44084 |
                     eip$address_zip_code == 44085 | eip$address_zip_code == 44086 |
                     eip$address_zip_code == 44088 | eip$address_zip_code == 44093 |
                     eip$address_zip_code == 44099 | eip$address_zip_code == 44231 |
                     eip$address_zip_code == 44288 | eip$address_zip_code == 44401 |
                     eip$address_zip_code == 44402 | eip$address_zip_code == 44403 |
                     eip$address_zip_code == 44404 | eip$address_zip_code == 44405 |
                     eip$address_zip_code == 44406 | eip$address_zip_code == 44408 |
                     eip$address_zip_code == 44410 | eip$address_zip_code == 44411 |
                     eip$address_zip_code == 44412 | eip$address_zip_code == 44413 |
                     eip$address_zip_code == 44415 | eip$address_zip_code == 44416 |
                     eip$address_zip_code == 44417 | eip$address_zip_code == 44418 |
                     eip$address_zip_code == 44420 | eip$address_zip_code == 44422 |
                     eip$address_zip_code == 44423 | eip$address_zip_code == 44424 |
                     eip$address_zip_code == 44425 | eip$address_zip_code == 44427 |
                     eip$address_zip_code == 44428 | eip$address_zip_code == 44429 |
                     eip$address_zip_code == 44430 | eip$address_zip_code == 44431 |
                     eip$address_zip_code == 44432 | eip$address_zip_code == 44436 |
                     eip$address_zip_code == 44437 | eip$address_zip_code == 44438 |
                     eip$address_zip_code == 44439 | eip$address_zip_code == 44440 |
                     eip$address_zip_code == 44441 | eip$address_zip_code == 44442 |
                     eip$address_zip_code == 44443 | eip$address_zip_code == 44444 |
                     eip$address_zip_code == 44445 | eip$address_zip_code == 44446 |
                     eip$address_zip_code == 44449 | eip$address_zip_code == 44450 |
                     eip$address_zip_code == 44451 | eip$address_zip_code == 44452 |
                     eip$address_zip_code == 44453 | eip$address_zip_code == 44454 |
                     eip$address_zip_code == 44455 | eip$address_zip_code == 44460 |
                     eip$address_zip_code == 44470 | eip$address_zip_code == 44471 |
                     eip$address_zip_code == 44473 | eip$address_zip_code == 44481 |
                     eip$address_zip_code == 44482 | eip$address_zip_code == 44483 |
                     eip$address_zip_code == 44484 | eip$address_zip_code == 44485 |
                     eip$address_zip_code == 44486 | eip$address_zip_code == 44490 |
                     eip$address_zip_code == 44491 | eip$address_zip_code == 44492 |
                     eip$address_zip_code == 44493 | eip$address_zip_code == 44501 |
                     eip$address_zip_code == 44502 | eip$address_zip_code == 44503 |
                     eip$address_zip_code == 44504 | eip$address_zip_code == 44505 |
                     eip$address_zip_code == 44506 | eip$address_zip_code == 44507 |
                     eip$address_zip_code == 44509 | eip$address_zip_code == 44510 |
                     eip$address_zip_code == 44511 | eip$address_zip_code == 44512 |
                     eip$address_zip_code == 44513 | eip$address_zip_code == 44514 |
                     eip$address_zip_code == 44515 | eip$address_zip_code == 44555 |
                     eip$address_zip_code == 44601 | eip$address_zip_code == 44607 |
                     eip$address_zip_code == 44608 | eip$address_zip_code == 44609 |
                     eip$address_zip_code == 44610 | eip$address_zip_code == 44611 |
                     eip$address_zip_code == 44612 | eip$address_zip_code == 44615 |
                     eip$address_zip_code == 44617 | eip$address_zip_code == 44619 |
                     eip$address_zip_code == 44620 | eip$address_zip_code == 44621 |
                     eip$address_zip_code == 44622 | eip$address_zip_code == 44624 |
                     eip$address_zip_code == 44625 | eip$address_zip_code == 44626 |
                     eip$address_zip_code == 44627 | eip$address_zip_code == 44628 |
                     eip$address_zip_code == 44629 | eip$address_zip_code == 44633 |
                     eip$address_zip_code == 44634 | eip$address_zip_code == 44637 |
                     eip$address_zip_code == 44638 | eip$address_zip_code == 44639 |
                     eip$address_zip_code == 44643 | eip$address_zip_code == 44644 |
                     eip$address_zip_code == 44651 | eip$address_zip_code == 44653 |
                     eip$address_zip_code == 44654 | eip$address_zip_code == 44656 |
                     eip$address_zip_code == 44657 | eip$address_zip_code == 44660 |
                     eip$address_zip_code == 44661 | eip$address_zip_code == 44663 |
                     eip$address_zip_code == 44665 | eip$address_zip_code == 44671 |
                     eip$address_zip_code == 44672 | eip$address_zip_code == 44675 |
                     eip$address_zip_code == 44676 | eip$address_zip_code == 44678 |
                     eip$address_zip_code == 44679 | eip$address_zip_code == 44680 |
                     eip$address_zip_code == 44681 | eip$address_zip_code == 44682 |
                     eip$address_zip_code == 44683 | eip$address_zip_code == 44687 |
                     eip$address_zip_code == 44688 | eip$address_zip_code == 44689 |
                     eip$address_zip_code == 44690 | eip$address_zip_code == 44693 |
                     eip$address_zip_code == 44695 | eip$address_zip_code == 44697 |
                     eip$address_zip_code == 44699 | eip$address_zip_code == 44730 |
                     eip$address_zip_code == 44842 | eip$address_zip_code == 45101 |
                     eip$address_zip_code == 45102 | eip$address_zip_code == 45103 |
                     eip$address_zip_code == 45105 | eip$address_zip_code == 45106 |
                     eip$address_zip_code == 45107 | eip$address_zip_code == 45112 |
                     eip$address_zip_code == 45115 | eip$address_zip_code == 45118 |
                     eip$address_zip_code == 45119 | eip$address_zip_code == 45120 |
                     eip$address_zip_code == 45121 | eip$address_zip_code == 45122 |
                     eip$address_zip_code == 45123 | eip$address_zip_code == 45130 |
                     eip$address_zip_code == 45131 | eip$address_zip_code == 45132 |
                     eip$address_zip_code == 45133 | eip$address_zip_code == 45135 |
                     eip$address_zip_code == 45140 | eip$address_zip_code == 45142 |
                     eip$address_zip_code == 45144 | eip$address_zip_code == 45147 |
                     eip$address_zip_code == 45148 | eip$address_zip_code == 45150 |
                     eip$address_zip_code == 45153 | eip$address_zip_code == 45154 |
                     eip$address_zip_code == 45155 | eip$address_zip_code == 45156 |
                     eip$address_zip_code == 45157 | eip$address_zip_code == 45158 |
                     eip$address_zip_code == 45159 | eip$address_zip_code == 45160 |
                     eip$address_zip_code == 45162 | eip$address_zip_code == 45167 |
                     eip$address_zip_code == 45168 | eip$address_zip_code == 45171 |
                     eip$address_zip_code == 45172 | eip$address_zip_code == 45176 |
                     eip$address_zip_code == 45244 | eip$address_zip_code == 45245 |
                     eip$address_zip_code == 45255 | eip$address_zip_code == 45601 |
                     eip$address_zip_code == 45612 | eip$address_zip_code == 45613 |
                     eip$address_zip_code == 45614 | eip$address_zip_code == 45616 |
                     eip$address_zip_code == 45617 | eip$address_zip_code == 45618 |
                     eip$address_zip_code == 45619 | eip$address_zip_code == 45620 |
                     eip$address_zip_code == 45621 | eip$address_zip_code == 45622 |
                     eip$address_zip_code == 45623 | eip$address_zip_code == 45624 |
                     eip$address_zip_code == 45628 | eip$address_zip_code == 45629 |
                     eip$address_zip_code == 45630 | eip$address_zip_code == 45631 |
                     eip$address_zip_code == 45633 | eip$address_zip_code == 45634 |
                     eip$address_zip_code == 45636 | eip$address_zip_code == 45638 |
                     eip$address_zip_code == 45640 | eip$address_zip_code == 45642 |
                     eip$address_zip_code == 45643 | eip$address_zip_code == 45644 |
                     eip$address_zip_code == 45645 | eip$address_zip_code == 45646 |
                     eip$address_zip_code == 45647 | eip$address_zip_code == 45648 |
                     eip$address_zip_code == 45650 | eip$address_zip_code == 45651 |
                     eip$address_zip_code == 45652 | eip$address_zip_code == 45653 |
                     eip$address_zip_code == 45654 | eip$address_zip_code == 45656 |
                     eip$address_zip_code == 45657 | eip$address_zip_code == 45658 |
                     eip$address_zip_code == 45659 | eip$address_zip_code == 45660 |
                     eip$address_zip_code == 45661 | eip$address_zip_code == 45662 |
                     eip$address_zip_code == 45663 | eip$address_zip_code == 45669 |
                     eip$address_zip_code == 45671 | eip$address_zip_code == 45672 |
                     eip$address_zip_code == 45673 | eip$address_zip_code == 45674 |
                     eip$address_zip_code == 45675 | eip$address_zip_code == 45677 |
                     eip$address_zip_code == 45678 | eip$address_zip_code == 45679 |
                     eip$address_zip_code == 45680 | eip$address_zip_code == 45681 |
                     eip$address_zip_code == 45682 | eip$address_zip_code == 45683 |
                     eip$address_zip_code == 45684 | eip$address_zip_code == 45685 |
                     eip$address_zip_code == 45686 | eip$address_zip_code == 45687 |
                     eip$address_zip_code == 45688 | eip$address_zip_code == 45690 |
                     eip$address_zip_code == 45692 | eip$address_zip_code == 45693 |
                     eip$address_zip_code == 45694 | eip$address_zip_code == 45695 |
                     eip$address_zip_code == 45696 | eip$address_zip_code == 45697 |
                     eip$address_zip_code == 45698 | eip$address_zip_code == 45699 |
                     eip$address_zip_code == 45701 | eip$address_zip_code == 45710 |
                     eip$address_zip_code == 45711 | eip$address_zip_code == 45712 |
                     eip$address_zip_code == 45713 | eip$address_zip_code == 45714 |
                     eip$address_zip_code == 45715 | eip$address_zip_code == 45716 |
                     eip$address_zip_code == 45717 | eip$address_zip_code == 45719 |
                     eip$address_zip_code == 45720 | eip$address_zip_code == 45721 |
                     eip$address_zip_code == 45723 | eip$address_zip_code == 45724 |
                     eip$address_zip_code == 45727 | eip$address_zip_code == 45729 |
                     eip$address_zip_code == 45732 | eip$address_zip_code == 45734 |
                     eip$address_zip_code == 45735 | eip$address_zip_code == 45739 |
                     eip$address_zip_code == 45740 | eip$address_zip_code == 45741 |
                     eip$address_zip_code == 45742 | eip$address_zip_code == 45743 |
                     eip$address_zip_code == 45744 | eip$address_zip_code == 45745 |
                     eip$address_zip_code == 45746 | eip$address_zip_code == 45750 |
                     eip$address_zip_code == 45760 | eip$address_zip_code == 45761 |
                     eip$address_zip_code == 45764 | eip$address_zip_code == 45766 |
                     eip$address_zip_code == 45767 | eip$address_zip_code == 45768 |
                     eip$address_zip_code == 45769 | eip$address_zip_code == 45770 |
                     eip$address_zip_code == 45771 | eip$address_zip_code == 45772 |
                     eip$address_zip_code == 45773 | eip$address_zip_code == 45775 |
                     eip$address_zip_code == 45776 | eip$address_zip_code == 45777 |
                     eip$address_zip_code == 45778 | eip$address_zip_code == 45779 |
                     eip$address_zip_code == 45780 | eip$address_zip_code == 45782 |
                     eip$address_zip_code == 45783 | eip$address_zip_code == 45784 |
                     eip$address_zip_code == 45786 | eip$address_zip_code == 45787 |
                     eip$address_zip_code == 45788 | eip$address_zip_code == 45789 |
                     (eip$appalachian == 1 | eip$appalachian_family == 1)] <- 1
table(eip$appalachian_pt)


```

```{r Procaccio Data, include=FALSE}

###############################################################################################################
#########################################  Creating Staff Identifier  #########################################
###############################################################################################################

# Procaccio, Bella

eip$Procaccio[eip$counselor_enc_start == 'zprobom7' |
            eip$counselor_risk_start == 'zprobom7' |
            eip$counselor_hiv_start == 'zprobom7' |
            eip$counselor_hcv_start == 'zprobom7' |
            eip$enc_counselor == 71 |
            eip$ltc_coord_start == 'zprobom7' |
            eip$ltc_coordinator_per_case___71 == 1] <- 1
table(eip$Procaccio)



###############################################################################################################
#########################################  Creating Encounter Dataset  ########################################
###############################################################################################################

table(eip$Procaccio)
enc <- eip[which(eip$Procaccio == 1), ]
dim(enc)


########################################  Encounters  ########################################

table(enc$Procaccio)
encounters <- nrow(enc)
encounters

monthly_encounters <- select(enc, enc_date, Procaccio)
monthly_encounters <- monthly_encounters[which(monthly_encounters$Procaccio == 1), ]
head(monthly_encounters)
colnames(monthly_encounters)[2] <- 'encounters'
head(monthly_encounters)


if (nrow(monthly_encounters) == 0) {
  monthly_encounters <- data.frame(enc_date = as.Date("2023-01-01"), encounters = 0)
} else {
  monthly_encounters <- aggregate(encounters ~ enc_date, monthly_encounters, FUN = sum)
}
monthly_encounters


########################################  Assessments  ########################################

table(enc$offer_outcome_risks)
enc$assessments[enc$offer_outcome_risks == 1 & (enc$counselor_risk_start == 'zprobom7' | enc$enc_counselor == 71)] <- 1
table(enc$assessments)

assessments <- enc[which(enc$assessments == 1), ]
assessments <- nrow(assessments)
assessments

assessments_percent <- percent(assessments/encounters, accuracy = 0.1)
assessments_percent


monthly_assessments <- select(enc, enc_date, assessments)
monthly_assessments <- monthly_assessments[which(monthly_assessments$assessments == 1), ]
head(monthly_assessments)
colnames(monthly_assessments)[2] <- 'assessments'
monthly_assessments$assessments[is.na(monthly_assessments$assessments)] <- 0
head(monthly_assessments)


if (nrow(monthly_assessments) == 0) {
  monthly_assessments <- data.frame(enc_date = as.Date("2023-01-01"), assessments = 0)
} else {
  monthly_assessments <- aggregate(assessments ~ enc_date, monthly_assessments, FUN = sum)
}
monthly_assessments




# Screening for SUD

enc$sud_assessed[enc$assessments == 1 &
                   (!is.na(enc$audit_c1) |
                      !is.na(enc$audit_c2) |
                      !is.na(enc$audit_c3) |
                      !is.na(enc$binge_drinking) |
                      !is.na(enc$nonmedical_drug_use) |
                      !is.na(enc$drug_difficulty) |
                      !is.na(enc$marijuana_use) |
                      !is.na(enc$cocaine_use) |
                      !is.na(enc$rx_amphetamine_use) |
                      !is.na(enc$meth_use) |
                      !is.na(enc$inhalants_use) |
                      !is.na(enc$sedatives_use) |
                      !is.na(enc$ruffies_use) |
                      !is.na(enc$hallucinogen_use) |
                      !is.na(enc$street_opioid_use) |
                      !is.na(enc$rx_opioid_use) |
                      !is.na(enc$injection_drug_use) |
                      !is.na(enc$other_drug_use))] <- 1
table(enc$sud_assessed)
sud_assessed <- enc[which(enc$sud_assessed == 1), ]
dim(sud_assessed)
sud_assessed <- nrow(sud_assessed)
sud_assessed

sud_assessed_percent <- percent(sud_assessed/assessments, accuracy = 0.1)
sud_assessed_percent


table(enc$sud_screen_positive)
enc$sud_pos[enc$sud_screen_positive == 1] <- 1
table(enc$sud_pos)
sud_pos <- enc[which(enc$sud_pos == 1), ]
dim(sud_pos)
sud_pos <- nrow(sud_pos)
sud_pos

sud_pos_percent <- percent(sud_pos/sud_assessed, accuracy = 0.1)
sud_pos_percent


# SUD Assessment Table
monthly_sud_assess <- select(enc, enc_date, sud_assessed)
monthly_sud_assess <- monthly_sud_assess[which(monthly_sud_assess$sud_assessed == 1), ]
head(monthly_sud_assess)
colnames(monthly_sud_assess)[2] <- 'sud_assessed'
monthly_sud_assess$sud_assessed[is.na(monthly_sud_assess$sud_assessed)] <- 0
head(monthly_sud_assess)


if (nrow(monthly_sud_assess) == 0) {
  monthly_sud_assess <- data.frame(enc_date = as.Date("2023-01-01"), sud_assessed = 0)
} else {
  monthly_sud_assess <- aggregate(sud_assessed ~ enc_date, monthly_sud_assess, FUN = sum)
}
monthly_sud_assess



monthly_sud_pos <- select(enc, enc_date, sud_pos)
monthly_sud_pos <- monthly_sud_pos[which(monthly_sud_pos$sud_pos == 1), ]
head(monthly_sud_pos)
colnames(monthly_sud_pos)[2] <- 'sud_pos'
monthly_sud_pos$sud_pos[is.na(monthly_sud_pos$sud_pos)] <- 0
head(monthly_sud_pos)


if (nrow(monthly_sud_pos) == 0) {
  monthly_sud_pos <- data.frame(enc_date = as.Date("2023-01-01"), sud_pos = 0)
} else {
  monthly_sud_pos <- aggregate(sud_pos ~ enc_date, monthly_sud_pos, FUN = sum)
}
monthly_sud_pos



# combining all SUD assessment pieces
monthly_sud_assess <- merge(monthly_assessments, monthly_sud_assess, by = 'enc_date', all = T)
monthly_sud_assess <- merge(monthly_sud_assess, monthly_sud_pos, by = 'enc_date', all = T)
monthly_sud_assess # metrics of SUD assessments, positive screens
monthly_sud_assess$assessments[is.na(monthly_sud_assess$assessments)] <- 0
monthly_sud_assess$sud_assessed[is.na(monthly_sud_assess$sud_assessed)] <- 0
monthly_sud_assess$sud_pos[is.na(monthly_sud_assess$sud_pos)] <- 0
monthly_sud_assess




# Screening for MH

# brief assessment for MH
enc$brief_mh_assessed[enc$assessments == 1 &
                        (!is.na(enc$phq1) |
                           !is.na(enc$phq2) |
                           !is.na(enc$gad1) |
                           !is.na(enc$gad2))] <- 1
table(enc$brief_mh_assessed)
brief_mh_assessed <- enc[which(enc$brief_mh_assessed == 1), ]
dim(brief_mh_assessed)
brief_mh_assessed <- nrow(brief_mh_assessed)
brief_mh_assessed

brief_mh_assessed_percent <- percent(brief_mh_assessed/assessments, accuracy = 0.1)
brief_mh_assessed_percent


# full assessment for MH (only those SUD+)
enc$mh_assessed[enc$assessments == 1 & enc$sud_pos == 1 &
                  (!is.na(enc$phq1) |
                     !is.na(enc$phq2) |
                     !is.na(enc$gad3) |
                     !is.na(enc$phq4) |
                     !is.na(enc$phq5) |
                     !is.na(enc$phq6) |
                     !is.na(enc$phq7) |
                     !is.na(enc$phq8) |
                     !is.na(enc$phq9) |
                     !is.na(enc$gad1) |
                     !is.na(enc$gad2) |
                     !is.na(enc$gad3) |
                     !is.na(enc$gad4) |
                     !is.na(enc$gad5) |
                     !is.na(enc$gad6) |
                     !is.na(enc$gad7) |
                     !is.na(enc$pclc1) |
                     !is.na(enc$pclc4))] <- 1
table(enc$mh_assessed)
mh_assessed <- enc[which(enc$mh_assessed == 1), ]
dim(mh_assessed)
mh_assessed <- nrow(mh_assessed)
mh_assessed

mh_assessed_percent <- percent(mh_assessed/sud_pos, accuracy = 0.1)
mh_assessed_percent


# MH positive
enc$mh_pos[enc$assessments == 1 & enc$sud_pos == 1 &
             enc$mh_screen_positive] <- 1
table(enc$mh_pos)
mh_pos <- enc[which(enc$mh_pos == 1), ]
dim(mh_pos)
mh_pos <- nrow(mh_pos)
mh_pos

mh_pos_percent <- percent(mh_pos/mh_assessed, accuracy = 0.1)
mh_pos_percent



# MH Assessment Table
monthly_brief_mh_assess <- select(enc, enc_date, brief_mh_assessed)
monthly_brief_mh_assess <- monthly_brief_mh_assess[which(monthly_brief_mh_assess$brief_mh_assessed == 1), ]
head(monthly_brief_mh_assess)
colnames(monthly_brief_mh_assess)[2] <- 'brief_mh_assessed'
monthly_brief_mh_assess$brief_mh_assessed[is.na(monthly_brief_mh_assess$brief_mh_assessed)] <- 0
head(monthly_brief_mh_assess)


if (nrow(monthly_brief_mh_assess) == 0) {
  monthly_brief_mh_assess <- data.frame(enc_date = as.Date("2023-01-01"), brief_mh_assessed = 0)
} else {
  monthly_brief_mh_assess <- aggregate(brief_mh_assessed ~ enc_date, monthly_brief_mh_assess, FUN = sum)
}
monthly_brief_mh_assess



monthly_mh_assessed <- select(enc, enc_date, mh_assessed)
monthly_mh_assessed <- monthly_mh_assessed[which(monthly_mh_assessed$mh_assessed == 1), ]
head(monthly_mh_assessed)
colnames(monthly_mh_assessed)[2] <- 'mh_assessed'
monthly_mh_assessed$mh_assessed[is.na(monthly_mh_assessed$mh_assessed)] <- 0
head(monthly_mh_assessed)


if (nrow(monthly_mh_assessed) == 0) {
  monthly_mh_assessed <- data.frame(enc_date = as.Date("2023-01-01"), mh_assessed = 0)
} else {
  monthly_mh_assessed <- aggregate(mh_assessed ~ enc_date, monthly_mh_assessed, FUN = sum)
}
monthly_mh_assessed



monthly_mh_pos <- select(enc, enc_date, mh_pos)
monthly_mh_pos <- monthly_mh_pos[which(monthly_mh_pos$mh_pos == 1), ]
head(monthly_mh_pos)
colnames(monthly_mh_pos)[2] <- 'mh_pos'
monthly_mh_pos$mh_pos[is.na(monthly_mh_pos$mh_pos)] <- 0
head(monthly_mh_pos)


if (nrow(monthly_mh_pos) == 0) {
  monthly_mh_pos <- data.frame(enc_date = as.Date("2023-01-01"), mh_pos = 0)
} else {
  monthly_mh_pos <- aggregate(mh_pos ~ enc_date, monthly_mh_pos, FUN = sum)
}
monthly_mh_pos



# combining all MH assessment pieces
monthly_mh_assess <- select(monthly_sud_assess, enc_date, assessments, sud_pos)
monthly_mh_assess <- merge(monthly_mh_assess, monthly_brief_mh_assess, by = 'enc_date', all = T)
monthly_mh_assess <- merge(monthly_mh_assess, monthly_mh_assessed, by = 'enc_date', all = T)
monthly_mh_assess <- merge(monthly_mh_assess, monthly_mh_pos, by = 'enc_date', all = T)
monthly_mh_assess$mh_assessed[is.na(monthly_mh_assess$mh_assessed)] <- 0
monthly_mh_assess$mh_pos[is.na(monthly_mh_assess$mh_pos)] <- 0
monthly_mh_assess # metrics of MH assessments, positive screens
monthly_mh_assess$assessments[is.na(monthly_mh_assess$assessments)] <- 0
monthly_mh_assess$sud_pos[is.na(monthly_mh_assess$sud_pos)] <- 0
monthly_mh_assess$brief_mh_assessed[is.na(monthly_mh_assess$brief_mh_assessed)] <- 0
monthly_mh_assess$mh_assessed[is.na(monthly_mh_assess$mh_assessed)] <- 0
monthly_mh_assess$mh_pos[is.na(monthly_mh_assess$mh_pos)] <- 0




# Depression
enc$depression_assessed[enc$assessments == 1 & enc$sud_pos == 1 &
                          (!is.na(enc$phq1) |
                             !is.na(enc$phq2) |
                             !is.na(enc$gad3) |
                             !is.na(enc$phq4) |
                             !is.na(enc$phq5) |
                             !is.na(enc$phq6) |
                             !is.na(enc$phq7) |
                             !is.na(enc$phq8) |
                             !is.na(enc$phq9))] <- 1
table(enc$depression_assessed)
depression_assessed <- enc[which(enc$depression_assessed == 1), ]
dim(depression_assessed)
depression_assessed <- nrow(depression_assessed)
depression_assessed

depression_assessed_percent <- percent(depression_assessed/mh_assessed, accuracy = 0.1)
depression_assessed_percent


enc$depression_pos[enc$assessments == 1 & enc$sud_pos == 1 &
                     enc$phq9_score_positive == 1] <- 1
table(enc$depression_pos)
depression_pos <- enc[which(enc$depression_pos == 1), ]
dim(depression_pos)
depression_pos <- nrow(depression_pos)
depression_pos

depression_pos_percent <- percent(depression_pos/depression_assessed, accuracy = 0.1)
depression_pos_percent


# Anxiety
enc$anxiety_assessed[enc$assessments == 1 & enc$sud_pos == 1 &
                       (!is.na(enc$gad1) |
                          !is.na(enc$gad2) |
                          !is.na(enc$gad3) |
                          !is.na(enc$gad4) |
                          !is.na(enc$gad5) |
                          !is.na(enc$gad6) |
                          !is.na(enc$gad7))] <- 1
table(enc$anxiety_assessed)
anxiety_assessed <- enc[which(enc$anxiety_assessed == 1), ]
dim(anxiety_assessed)
anxiety_assessed <- nrow(anxiety_assessed)
anxiety_assessed

anxiety_assessed_percent <- percent(anxiety_assessed/mh_assessed, accuracy = 0.1)
anxiety_assessed_percent


enc$anxiety_pos[enc$assessments == 1 & enc$sud_pos == 1 &
                  enc$gad7_score_positive == 1] <- 1
table(enc$anxiety_pos)
anxiety_pos <- enc[which(enc$anxiety_pos == 1), ]
dim(anxiety_pos)
anxiety_pos <- nrow(anxiety_pos)
anxiety_pos

anxiety_pos_percent <- percent(anxiety_pos/anxiety_assessed, accuracy = 0.1)
anxiety_pos_percent


# PTSD
enc$ptsd_assessed[enc$assessments == 1 & enc$sud_pos == 1 &
                    (!is.na(enc$pclc1) |
                       !is.na(enc$pclc4))] <- 1
table(enc$ptsd_assessed)
ptsd_assessed <- enc[which(enc$ptsd_assessed == 1), ]
dim(ptsd_assessed)
ptsd_assessed <- nrow(ptsd_assessed)
ptsd_assessed

ptsd_assessed_percent <- percent(ptsd_assessed/mh_assessed, accuracy = 0.1)
ptsd_assessed_percent


enc$ptsd_pos[enc$assessments == 1 & enc$sud_pos == 1 &
               enc$pclc_score_positive == 1] <- 1
table(enc$ptsd_pos)
ptsd_pos <- enc[which(enc$ptsd_pos == 1), ]
dim(ptsd_pos)
ptsd_pos <- nrow(ptsd_pos)
ptsd_pos

ptsd_pos_percent <- percent(ptsd_pos/ptsd_assessed, accuracy = 0.1)
ptsd_pos_percent




# MH Conditions Table
monthly_depression_assess <- select(enc, enc_date, depression_assessed)
monthly_depression_assess <- monthly_depression_assess[which(monthly_depression_assess$depression_assessed == 1), ]
head(monthly_depression_assess)
colnames(monthly_depression_assess)[2] <- 'depression_assessed'
monthly_depression_assess$depression_assessed[is.na(monthly_depression_assess$depression_assessed)] <- 0
head(monthly_depression_assess)


if (nrow(monthly_depression_assess) == 0) {
  monthly_depression_assess <- data.frame(enc_date = as.Date("2023-01-01"), depression_assessed = 0)
} else {
  monthly_depression_assess <- aggregate(depression_assessed ~ enc_date, monthly_depression_assess, FUN = sum)
}
monthly_depression_assess



monthly_depression_pos <- select(enc, enc_date, depression_pos)
monthly_depression_pos <- monthly_depression_pos[which(monthly_depression_pos$depression_pos == 1), ]
head(monthly_depression_pos)
colnames(monthly_depression_pos)[2] <- 'depression_pos'
monthly_depression_pos$depression_pos[is.na(monthly_depression_pos$depression_pos)] <- 0
head(monthly_depression_pos)


if (nrow(monthly_depression_pos) == 0) {
  monthly_depression_pos <- data.frame(enc_date = as.Date("2023-01-01"), depression_pos = 0)
} else {
  monthly_depression_pos <- aggregate(depression_pos ~ enc_date, monthly_depression_pos, FUN = sum)
}
monthly_depression_pos



monthly_anxiety_assess <- select(enc, enc_date, anxiety_assessed)
monthly_anxiety_assess <- monthly_anxiety_assess[which(monthly_anxiety_assess$anxiety_assessed == 1), ]
head(monthly_anxiety_assess)
colnames(monthly_anxiety_assess)[2] <- 'anxiety_assessed'
monthly_anxiety_assess$anxiety_assessed[is.na(monthly_anxiety_assess$anxiety_assessed)] <- 0
head(monthly_anxiety_assess)


if (nrow(monthly_anxiety_assess) == 0) {
  monthly_anxiety_assess <- data.frame(enc_date = as.Date("2023-01-01"), anxiety_assessed = 0)
} else {
  monthly_anxiety_assess <- aggregate(anxiety_assessed ~ enc_date, monthly_anxiety_assess, FUN = sum)
}
monthly_anxiety_assess



monthly_anxiety_pos <- select(enc, enc_date, anxiety_pos)
monthly_anxiety_pos <- monthly_anxiety_pos[which(monthly_anxiety_pos$anxiety_pos == 1), ]
head(monthly_anxiety_pos)
colnames(monthly_anxiety_pos)[2] <- 'anxiety_pos'
monthly_anxiety_pos$anxiety_pos[is.na(monthly_anxiety_pos$anxiety_pos)] <- 0
head(monthly_anxiety_pos)


if (nrow(monthly_anxiety_pos) == 0) {
  aggregated_data <- data.frame(enc_date = as.Date("2023-01-01"), anxiety_pos = 0)
} else {
  aggregated_data <- aggregate(anxiety_pos ~ enc_date, monthly_anxiety_pos, FUN = sum)
}
monthly_anxiety_pos



monthly_ptsd_assess <- select(enc, enc_date, ptsd_assessed)
monthly_ptsd_assess <- monthly_ptsd_assess[which(monthly_ptsd_assess$ptsd_assessed == 1), ]
head(monthly_ptsd_assess)
colnames(monthly_ptsd_assess)[2] <- 'ptsd_assessed'
monthly_ptsd_assess$ptsd_assessed[is.na(monthly_ptsd_assess$ptsd_assessed)] <- 0
head(monthly_ptsd_assess)


if (nrow(monthly_ptsd_assess) == 0) {
  monthly_ptsd_assess <- data.frame(enc_date = as.Date("2023-01-01"), ptsd_assessed = 0)
} else {
  monthly_ptsd_assess <- aggregate(ptsd_assessed ~ enc_date, monthly_ptsd_assess, FUN = sum)
}
monthly_ptsd_assess



monthly_ptsd_pos <- select(enc, enc_date, ptsd_pos)
monthly_ptsd_pos <- monthly_ptsd_pos[which(monthly_ptsd_pos$ptsd_pos == 1), ]
head(monthly_ptsd_pos)
colnames(monthly_ptsd_pos)[2] <- 'ptsd_pos'
monthly_ptsd_pos$ptsd_pos[is.na(monthly_ptsd_pos$ptsd_pos)] <- 0
head(monthly_ptsd_pos)


if (nrow(monthly_ptsd_pos) == 0) {
  monthly_ptsd_pos <- data.frame(enc_date = as.Date("2023-01-01"), ptsd_pos = 0)
} else {
  monthly_ptsd_pos <- aggregate(ptsd_pos ~ enc_date, monthly_ptsd_pos, FUN = sum)
}
monthly_ptsd_pos



# combining all MH assessment pieces
monthly_mh_cond <- select(monthly_mh_assess, enc_date, mh_assessed)
monthly_mh_cond <- merge(monthly_mh_cond, monthly_depression_assess, by = 'enc_date', all = T)
monthly_mh_cond <- merge(monthly_mh_cond, monthly_depression_pos, by = 'enc_date', all = T)
monthly_mh_cond <- merge(monthly_mh_cond, monthly_anxiety_assess, by = 'enc_date', all = T)
monthly_mh_cond <- merge(monthly_mh_cond, monthly_anxiety_pos, by = 'enc_date', all = T)
monthly_mh_cond <- merge(monthly_mh_cond, monthly_ptsd_assess, by = 'enc_date', all = T)
monthly_mh_cond <- merge(monthly_mh_cond, monthly_ptsd_pos, by = 'enc_date', all = T)
monthly_mh_cond # metrics of MH assessments, positive screens
monthly_mh_cond$depression_assessed[is.na(monthly_mh_cond$depression_assessed)] <- 0
monthly_mh_cond$depression_pos[is.na(monthly_mh_cond$depression_pos)] <- 0
monthly_mh_cond$anxiety_assessed[is.na(monthly_mh_cond$anxiety_assessed)] <- 0
monthly_mh_cond$anxiety_pos[is.na(monthly_mh_cond$anxiety_pos)] <- 0
monthly_mh_cond$ptsd_assessed[is.na(monthly_mh_cond$ptsd_assessed)] <- 0
monthly_mh_cond$ptsd_pos[is.na(monthly_mh_cond$ptsd_pos)] <- 0




# PrEP Eligibility based on Risk Assessment

enc$prep_risk_assessed[enc$assessments == 1 &
                         ((enc$sex_receivemoney___0 != 0 & !is.na(enc$sex_receivemoney___0)) |
                            (enc$sex_receivemoney___1 != 0 & !is.na(enc$sex_receivemoney___1)) |
                            (enc$sex_receivemoney___2 != 0 & !is.na(enc$sex_receivemoney___2)) |
                            (enc$sex_receivemoney___3 != 0 & !is.na(enc$sex_receivemoney___3)) |
                            (enc$sex_receivemoney___4 != 0 & !is.na(enc$sex_receivemoney___4)) |
                            (enc$sex_receivemoney___5 != 0 & !is.na(enc$sex_receivemoney___5)) |
                            (enc$sex_receivemoney___6 != 0 & !is.na(enc$sex_receivemoney___6)) |
                            (enc$sex_receivemoney___7 != 0 & !is.na(enc$sex_receivemoney___7)) |
                            (enc$sex_receivemoney___8 != 0 & !is.na(enc$sex_receivemoney___8)) |
                            (enc$sex_receivedrugs___0 != 0 & !is.na(enc$sex_receivedrugs___0)) |
                            (enc$sex_receivedrugs___1 != 0 & !is.na(enc$sex_receivedrugs___1)) |
                            (enc$sex_receivedrugs___2 != 0 & !is.na(enc$sex_receivedrugs___2)) |
                            (enc$sex_receivedrugs___3 != 0 & !is.na(enc$sex_receivedrugs___3)) |
                            (enc$sex_receivedrugs___4 != 0 & !is.na(enc$sex_receivedrugs___4)) |
                            (enc$sex_receivedrugs___5 != 0 & !is.na(enc$sex_receivedrugs___5)) |
                            (enc$sex_receivedrugs___6 != 0 & !is.na(enc$sex_receivedrugs___6)) |
                            (enc$sex_receivedrugs___7 != 0 & !is.na(enc$sex_receivedrugs___7)) |
                            (enc$sex_receivedrugs___8 != 0 & !is.na(enc$sex_receivedrugs___8)) |
                            (enc$sex_partners_past_year != 0 & !is.na(enc$sex_partners_past_year)) |
                            (enc$share_works_last != 0 & !is.na(enc$share_works_last)) |
                            (enc$prior_std != 0 & !is.na(enc$prior_std)) |
                            (enc$sex_w_man___0 != 0 & !is.na(enc$sex_w_man___0)) |
                            (enc$sex_w_man___1 != 0 & !is.na(enc$sex_w_man___1)) |
                            (enc$sex_w_man___2 != 0 & !is.na(enc$sex_w_man___2)) |
                            (enc$sex_w_man___3 != 0 & !is.na(enc$sex_w_man___3)) |
                            (enc$sex_w_man___4 != 0 & !is.na(enc$sex_w_man___4)) |
                            (enc$sex_w_man___5 != 0 & !is.na(enc$sex_w_man___5)) |
                            (enc$sex_w_man___6 != 0 & !is.na(enc$sex_w_man___6)) |
                            (enc$sex_w_man___7 != 0 & !is.na(enc$sex_w_man___7)) |
                            (enc$sex_w_man___8 != 0 & !is.na(enc$sex_w_man___8)) |
                            (enc$sex_give_anal___0 != 0 & !is.na(enc$sex_give_anal___0)) |
                            (enc$sex_give_anal___1 != 0 & !is.na(enc$sex_give_anal___1)) |
                            (enc$sex_give_anal___2 != 0 & !is.na(enc$sex_give_anal___2)) |
                            (enc$sex_give_anal___3 != 0 & !is.na(enc$sex_give_anal___3)) |
                            (enc$sex_give_anal___4 != 0 & !is.na(enc$sex_give_anal___4)) |
                            (enc$sex_give_anal___5 != 0 & !is.na(enc$sex_give_anal___5)) |
                            (enc$sex_give_anal___6 != 0 & !is.na(enc$sex_give_anal___6)) |
                            (enc$sex_give_anal___7 != 0 & !is.na(enc$sex_give_anal___7)) |
                            (enc$sex_give_anal___8 != 0 & !is.na(enc$sex_give_anal___8)) |
                            (enc$sex_receive_anal___0 != 0 & !is.na(enc$sex_receive_anal___0)) |
                            (enc$sex_receive_anal___1 != 0 & !is.na(enc$sex_receive_anal___1)) |
                            (enc$sex_receive_anal___2 != 0 & !is.na(enc$sex_receive_anal___2)) |
                            (enc$sex_receive_anal___3 != 0 & !is.na(enc$sex_receive_anal___3)) |
                            (enc$sex_receive_anal___4 != 0 & !is.na(enc$sex_receive_anal___4)) |
                            (enc$sex_receive_anal___5 != 0 & !is.na(enc$sex_receive_anal___5)) |
                            (enc$sex_receive_anal___6 != 0 & !is.na(enc$sex_receive_anal___6)) |
                            (enc$sex_receive_anal___7 != 0 & !is.na(enc$sex_receive_anal___7)) |
                            (enc$sex_receive_anal___8 != 0 & !is.na(enc$sex_receive_anal___8)) |
                            (enc$sex_vaginal___0 != 0 & !is.na(enc$sex_vaginal___0)) |
                            (enc$sex_vaginal___1 != 0 & !is.na(enc$sex_vaginal___1)) |
                            (enc$sex_vaginal___2 != 0 & !is.na(enc$sex_vaginal___2)) |
                            (enc$sex_vaginal___3 != 0 & !is.na(enc$sex_vaginal___3)) |
                            (enc$sex_vaginal___4 != 0 & !is.na(enc$sex_vaginal___4)) |
                            (enc$sex_vaginal___5 != 0 & !is.na(enc$sex_vaginal___5)) |
                            (enc$sex_vaginal___6 != 0 & !is.na(enc$sex_vaginal___6)) |
                            (enc$sex_vaginal___7 != 0 & !is.na(enc$sex_vaginal___7)) |
                            (enc$sex_vaginal___8 != 0 & !is.na(enc$sex_vaginal___8)) |
                            (enc$sex_msm___0 != 0 & !is.na(enc$sex_msm___0)) |
                            (enc$sex_msm___1 != 0 & !is.na(enc$sex_msm___1)) |
                            (enc$sex_msm___2 != 0 & !is.na(enc$sex_msm___2)) |
                            (enc$sex_msm___3 != 0 & !is.na(enc$sex_msm___3)) |
                            (enc$sex_msm___4 != 0 & !is.na(enc$sex_msm___4)) |
                            (enc$sex_msm___5 != 0 & !is.na(enc$sex_msm___5)) |
                            (enc$sex_msm___6 != 0 & !is.na(enc$sex_msm___6)) |
                            (enc$sex_msm___7 != 0 & !is.na(enc$sex_msm___7)) |
                            (enc$sex_msm___8 != 0 & !is.na(enc$sex_msm___8)) |
                            (enc$sex_idu___0 != 0 & !is.na(enc$sex_idu___0)) |
                            (enc$sex_idu___1 != 0 & !is.na(enc$sex_idu___1)) |
                            (enc$sex_idu___2 != 0 & !is.na(enc$sex_idu___2)) |
                            (enc$sex_idu___3 != 0 & !is.na(enc$sex_idu___3)) |
                            (enc$sex_idu___4 != 0 & !is.na(enc$sex_idu___4)) |
                            (enc$sex_idu___5 != 0 & !is.na(enc$sex_idu___5)) |
                            (enc$sex_idu___6 != 0 & !is.na(enc$sex_idu___6)) |
                            (enc$sex_idu___7 != 0 & !is.na(enc$sex_idu___7)) |
                            (enc$sex_idu___8 != 0 & !is.na(enc$sex_idu___8)) |
                            (enc$sex_hiv_pos___0 != 0 & !is.na(enc$sex_hiv_pos___0)) |
                            (enc$sex_hiv_pos___1 != 0 & !is.na(enc$sex_hiv_pos___1)) |
                            (enc$sex_hiv_pos___2 != 0 & !is.na(enc$sex_hiv_pos___2)) |
                            (enc$sex_hiv_pos___3 != 0 & !is.na(enc$sex_hiv_pos___3)) |
                            (enc$sex_hiv_pos___4 != 0 & !is.na(enc$sex_hiv_pos___4)) |
                            (enc$sex_hiv_pos___5 != 0 & !is.na(enc$sex_hiv_pos___5)) |
                            (enc$sex_hiv_pos___6 != 0 & !is.na(enc$sex_hiv_pos___6)) |
                            (enc$sex_hiv_pos___7 != 0 & !is.na(enc$sex_hiv_pos___7)) |
                            (enc$sex_hiv_pos___8 != 0 & !is.na(enc$sex_hiv_pos___8)))] <- 1
table(enc$prep_risk_assessed)
prep_risk_assessed <- enc[which(enc$prep_risk_assessed == 1), ]
dim(prep_risk_assessed)
prep_risk_assessed <- nrow(prep_risk_assessed)
prep_risk_assessed

prep_risk_assessed_percent <- percent(prep_risk_assessed/assessments, accuracy = 0.1)
prep_risk_assessed_percent


# PrEP Eligibility based on Risk Assessment
enc$prep_eligible[enc$assessments == 1 & enc$prep_eligible] <- 1
table(enc$prep_eligible)
prep_eligible <- enc[which(enc$prep_eligible == 1), ]
dim(prep_eligible)
prep_eligible <- nrow(prep_eligible)
prep_eligible

prep_eligible_percent <- percent(prep_eligible/prep_risk_assessed, accuracy = 0.1)
prep_eligible_percent


# PrEP Assessed
enc$prep_assessed[enc$assessments == 1 & enc$prep_eligible == 1 &
                    (!is.na(enc$prep_knowledge) |
                       !is.na(enc$prep_current_use) |
                       !is.na(enc$prep_past_yr) |
                       !is.na(enc$pep_knowledge) |
                       !is.na(enc$pep_current_use) |
                       !is.na(enc$pep_past_yr) |
                       !is.na(enc$daily_med))] <- 1
table(enc$prep_assessed)
prep_assessed <- enc[which(enc$prep_assessed == 1), ]
dim(prep_assessed)
prep_assessed <- nrow(prep_assessed)
prep_assessed

prep_assessed_percent <- percent(prep_assessed/prep_eligible, accuracy = 0.1)
prep_assessed_percent


# PrEP Table
monthly_prep_risk <- select(enc, enc_date, prep_risk_assessed)
monthly_prep_risk <- monthly_prep_risk[which(monthly_prep_risk$prep_risk_assessed == 1), ]
head(monthly_prep_risk)
colnames(monthly_prep_risk)[2] <- 'prep_risk_assessed'
monthly_prep_risk$prep_risk_assessed[is.na(monthly_prep_risk$prep_risk_assessed)] <- 0
head(monthly_prep_risk)


if (nrow(monthly_prep_risk) == 0) {
  monthly_prep_risk <- data.frame(enc_date = as.Date("2023-01-01"), prep_risk_assessed = 0)
} else {
  monthly_prep_risk <- aggregate(prep_risk_assessed ~ enc_date, monthly_prep_risk, FUN = sum)
}
monthly_prep_risk


monthly_prep_eligible <- select(enc, enc_date, prep_eligible)
monthly_prep_eligible <- monthly_prep_eligible[which(monthly_prep_eligible$prep_eligible == 1), ]
head(monthly_prep_eligible)
colnames(monthly_prep_eligible)[2] <- 'prep_eligible'
monthly_prep_eligible$prep_eligible[is.na(monthly_prep_eligible$prep_eligible)] <- 0
head(monthly_prep_eligible)


if (nrow(monthly_prep_eligible) == 0) {
  monthly_prep_eligible <- data.frame(enc_date = as.Date("2023-01-01"), prep_eligible = 0)
} else {
  monthly_prep_eligible <- aggregate(prep_eligible ~ enc_date, monthly_prep_eligible, FUN = sum)
}
monthly_prep_eligible


monthly_prep_assessed <- select(enc, enc_date, prep_assessed)
monthly_prep_assessed <- monthly_prep_assessed[which(monthly_prep_assessed$prep_assessed == 1), ]
head(monthly_prep_assessed)
colnames(monthly_prep_assessed)[2] <- 'prep_assessed'
monthly_prep_assessed$prep_assessed[is.na(monthly_prep_assessed$prep_assessed)] <- 0
head(monthly_prep_assessed)


if (nrow(monthly_prep_assessed) == 0) {
  monthly_prep_assessed <- data.frame(enc_date = as.Date("2023-01-01"), prep_assessed = 0)
} else {
  monthly_prep_assessed <- aggregate(prep_assessed ~ enc_date, monthly_prep_assessed, FUN = sum)
}
monthly_prep_assessed



# combining all PrEP pieces
monthly_prep <- select(monthly_sud_assess, enc_date, assessments)
monthly_prep <- merge(monthly_prep, monthly_prep_risk, by = 'enc_date', all = T)
monthly_prep <- merge(monthly_prep, monthly_prep_eligible, by = 'enc_date', all = T)
monthly_prep <- merge(monthly_prep, monthly_prep_assessed, by = 'enc_date', all = T)
monthly_prep # metrics of PrEP assessments, eligible screens
monthly_prep$assessments[is.na(monthly_prep$assessments)] <- 0
monthly_prep$prep_risk_assessed[is.na(monthly_prep$prep_risk_assessed)] <- 0
monthly_prep$prep_eligible[is.na(monthly_prep$prep_eligible)] <- 0
monthly_prep$prep_assessed[is.na(monthly_prep$prep_assessed)] <- 0




########################################  HIV Testing  ########################################

table(enc$ctr_calc)
enc$ctr_tests[enc$ctr_calc == 1 & (enc$counselor_hiv_start == 'zprobom7' | enc$enc_counselor == 71)] <- 1
ctr_tests <- enc[which(enc$ctr_tests == 1), ]
ctr_tests <- nrow(ctr_tests)
ctr_tests

ctr_tests_percent <- percent(ctr_tests/encounters, accuracy = 0.1)
ctr_tests_percent


table(enc$ctr_calc, enc$final_test_status_hiv)
ctr_positive <- enc[which(enc$ctr_calc == 1 & enc$final_test_status_hiv == 1), ]
ctr_positive <- nrow(ctr_positive)
ctr_positive

ctr_positive_percent <- percent(ctr_positive/ctr_tests, accuracy = 0.01)
ctr_positive_percent
ctr_positive_percent[is.na(ctr_positive_percent)] <- '0.0%'
ctr_positive_percent


table(enc$ctr_calc, enc$final_test_status_hiv, enc$diagnosis_hiv)
ctr_new_positive <- enc[which(enc$ctr_calc == 1 & enc$final_test_status_hiv == 1 & enc$diagnosis_hiv == 1), ]
ctr_new_positive <- nrow(ctr_new_positive)
ctr_new_positive

ctr_new_positive_percent <- percent(ctr_new_positive/ctr_positive, accuracy = 0.01)
ctr_new_positive_percent
ctr_new_positive_percent[is.na(ctr_new_positive_percent)] <- '0.0%'
ctr_new_positive_percent


table(enc$ehe_calc)
ehe_tests <- enc[which(enc$ehe_calc == 1), ]
ehe_tests <- nrow(ehe_tests)
ehe_tests

ehe_tests_percent <- percent(ehe_tests/encounters, accuracy = 0.01)
ehe_tests_percent


table(enc$ehe_calc, enc$final_test_status_hiv)
ehe_positive <- enc[which(enc$ehe_calc == 1 & enc$final_test_status_hiv == 1), ]
ehe_positive <- nrow(ehe_positive)
ehe_positive

ehe_positive_percent <- percent(ehe_positive/ehe_tests, accuracy = 0.01)
ehe_positive_percent
ehe_positive_percent[is.na(ehe_positive_percent)] <- '0.0%'
ehe_positive_percent

table(enc$ehe_calc, enc$final_test_status_hiv, enc$diagnosis_hiv)
ehe_new_positive <- enc[which(enc$ehe_calc == 1 & enc$final_test_status_hiv == 1 & enc$diagnosis_hiv == 1), ]
ehe_new_positive <- nrow(ehe_new_positive)
ehe_new_positive

ehe_new_positive_percent <- percent(ehe_new_positive/ehe_positive, accuracy = 0.01)
ehe_new_positive_percent
ehe_new_positive_percent[is.na(ehe_new_positive_percent)] <- '0.0%'
ehe_new_positive_percent


total_hiv_tests <- ctr_tests + ehe_tests
total_hiv_tests

total_hiv_positive <- ctr_positive + ehe_positive
total_hiv_positive
total_hiv_positive_percent <- percent(total_hiv_positive/total_hiv_tests, accuracy = 0.01)
total_hiv_positive_percent
total_hiv_positive_percent[is.na(total_hiv_positive_percent)] <- '0.0%'
total_hiv_positive_percent

total_hiv_new_positive <- ctr_new_positive + ehe_new_positive
total_hiv_new_positive
total_hiv_new_positive_percent <- percent(total_hiv_new_positive/total_hiv_positive, accuracy = 0.1)
total_hiv_new_positive_percent
total_hiv_new_positive_percent[is.na(total_hiv_new_positive_percent)] <- '0.0%'
total_hiv_new_positive_percent



monthly_hiv_tests <- select(enc, enc_date, record_id, ctr_calc, ehe_calc)
monthly_hiv_tests <- monthly_hiv_tests[which(monthly_hiv_tests$ctr_calc == 1 | monthly_hiv_tests$ehe_calc == 1), ]
head(monthly_hiv_tests)
monthly_hiv_tests <- select(monthly_hiv_tests, -record_id)
head(monthly_hiv_tests)
colnames(monthly_hiv_tests)[2] <- 'ctr_tests'
colnames(monthly_hiv_tests)[3] <- 'ehe_tests'
monthly_hiv_tests$ctr_tests[is.na(monthly_hiv_tests$ctr_tests)] <- 0
monthly_hiv_tests$ehe_tests[is.na(monthly_hiv_tests$ehe_tests)] <- 0
head(monthly_hiv_tests)

if (nrow(monthly_hiv_tests) == 0) {
  aggregated_data <- data.frame(enc_date = as.Date("2023-01-01"), ctr_tests = 0, ehe_tests = 0)
} else {
  aggregated_data <- aggregate(cbind(ctr_tests, ehe_tests) ~ enc_date, monthly_hiv_tests, FUN = sum)
}
monthly_hiv_tests




enc$hiv_false_positive[(enc$hiv_result1 == 1 | enc$hiv_result1 == 2 |
                          enc$hiv_result2 == 1 | enc$hiv_result2 == 2 |
                          enc$hiv_result3 == 1 | enc$hiv_result3 == 2 |
                          enc$hiv_result4 == 1 | enc$hiv_result4 == 2 |
                          enc$hiv_result5 == 1 | enc$hiv_result5 == 2 |
                          enc$hiv_result6 == 1 | enc$hiv_result6 == 2) &
                         enc$final_test_status_hiv == 0] <- 1
table(enc$hiv_false_positive)
hiv_false_positive <- enc[which(enc$hiv_false_positive == 1), ]
dim(hiv_false_positive)
hiv_false_positive <- nrow(hiv_false_positive)
hiv_false_positive

hiv_false_positive_percent <- percent(hiv_false_positive/total_hiv_tests, accuracy = 0.1)
hiv_false_positive_percent


enc$hiv_indeterminate[enc$final_test_status_hiv == 2] <- 1
table(enc$hiv_indeterminate)
hiv_indeterminate <- enc[which(enc$hiv_indeterminate == 1), ]
dim(hiv_indeterminate)
hiv_indeterminate <- nrow(hiv_indeterminate)
hiv_indeterminate

hiv_indeterminate_percent <- percent(hiv_indeterminate/total_hiv_tests, accuracy = 0.1)
hiv_indeterminate_percent


hiv_positivity_rate <- percent(total_hiv_new_positive/total_hiv_tests, accuracy = 0.01)
hiv_positivity_rate
hiv_positivity_rate[is.na(hiv_positivity_rate)] <- '0.0%'

ctr_positivity_rate <- percent(ctr_new_positive/ctr_tests, accuracy = 0.01)
ctr_positivity_rate
ctr_positivity_rate[is.na(ctr_positivity_rate)] <- '0.0%'

ehe_positivity_rate <- percent(ehe_new_positive/ehe_tests, accuracy = 0.01)
ehe_positivity_rate
ehe_positivity_rate[is.na(ehe_positivity_rate)] <- '0.0%'




########################################  HCV Testing  ########################################

# HCV Rapid Testing
## based on fingerstick sample type
enc$hcv_rapid_test[(enc$sample_type_hcv1 == 5 |
                      enc$sample_type_hcv2 == 5 |
                      enc$sample_type_hcv3 == 5 |
                      enc$sample_type_hcv4 == 5 |
                      enc$sample_type_hcv5 == 5 |
                      enc$sample_type_hcv6 == 5) & (enc$counselor_hcv_start == 'zprobom7' | enc$enc_counselor == 71)] <- 1
table(enc$hcv_rapid_test)

hcv_rapid_tests <- enc[which(enc$hcv_rapid_test == 1), ]
hcv_rapid_tests <- nrow(hcv_rapid_tests)
hcv_rapid_tests


hcv_rapid_tests_percent <- percent(hcv_rapid_tests/encounters, accuracy = 0.1)
hcv_rapid_tests_percent
hcv_rapid_tests_percent[is.na(hcv_rapid_tests_percent)] <- '0.0%'
hcv_rapid_tests_percent


table(enc$hcv_rapid_test, enc$final_test_status_hcv)
hcv_rapid_positive <- enc[which(enc$hcv_rapid_test == 1 & enc$final_test_status_hcv == 1), ]
hcv_rapid_positive <- nrow(hcv_rapid_positive)
hcv_rapid_positive

hcv_rapid_positive_percent <- percent(hcv_rapid_positive/hcv_rapid_tests, accuracy = 0.1)
hcv_rapid_positive_percent
hcv_rapid_positive_percent[is.na(hcv_rapid_positive_percent)] <- '0.0%'
hcv_rapid_positive_percent

table(enc$hcv_rapid_test, enc$final_test_status_hcv, enc$diagnosis_hcv)
hcv_rapid_new_positive <- enc[which(enc$hcv_rapid_test == 1 & enc$final_test_status_hcv == 1 & enc$diagnosis_hcv == 1), ]
hcv_rapid_new_positive <- nrow(hcv_rapid_new_positive)
hcv_rapid_new_positive

hcv_rapid_new_positive_percent <- percent(hcv_rapid_new_positive/hcv_rapid_positive, accuracy = 0.1)
hcv_rapid_new_positive_percent
hcv_rapid_new_positive_percent[is.na(hcv_rapid_new_positive_percent)] <- '0.0%'
hcv_rapid_new_positive_percent


monthly_hcv_tests <- select(enc, enc_date, record_id, hcv_rapid_test)
monthly_hcv_tests <- monthly_hcv_tests[which(monthly_hcv_tests$hcv_rapid_test == 1), ]
head(monthly_hcv_tests)
monthly_hcv_tests <- select(monthly_hcv_tests, -record_id)
head(monthly_hcv_tests)
colnames(monthly_hcv_tests)[2] <- 'hcv_tests'
monthly_hcv_tests$hcv_tests[is.na(monthly_hcv_tests$hcv_tests)] <- 0
head(monthly_hcv_tests)

if (nrow(monthly_hcv_tests) == 0) {
  monthly_hcv_tests <- data.frame(enc_date = as.Date("2023-01-01"), hcv_tests = 0)
} else {
  monthly_hcv_tests <- aggregate(hcv_tests ~ enc_date, monthly_hcv_tests, FUN = sum)
}
monthly_hcv_tests


hcv_rapid_positivity_rate <- percent(hcv_rapid_new_positive/hcv_rapid_tests, accuracy = 0.01)
hcv_rapid_positivity_rate
hcv_rapid_positivity_rate[is.na(hcv_rapid_positivity_rate)] <- '0.0%'
hcv_rapid_positivity_rate




########################################  Linkage Cases  ########################################


###############  Linkage Cases  ###############

enc$ltc_cases[enc$ltc_coordinator_per_case___71 == 1 &
                (enc$ltc_services___1 == 1 |
                   enc$ltc_services___2 == 1 |
                   enc$ltc_services___3 == 1 |
                   enc$ltc_services___4 == 1 |
                   enc$ltc_services___5 == 1)] <- 1
table(enc$ltc_cases)
ltc_cases <- enc[which(enc$ltc_cases == 1), ]
ltc_cases <- nrow(ltc_cases)
ltc_cases

ltc_cases_percent <- percent(ltc_cases/encounters, accuracy = 0.1)
ltc_cases_percent
ltc_cases_percent[is.na(ltc_cases_percent)] <- '0.0%'
ltc_cases_percent


monthly_ltc_cases <- select(enc, enc_date, record_id, ltc_cases)
monthly_ltc_cases <- monthly_ltc_cases[which(monthly_ltc_cases$ltc_cases == 1), ]
head(monthly_ltc_cases)
monthly_ltc_cases <- select(monthly_ltc_cases, -record_id)
head(monthly_ltc_cases)
colnames(monthly_ltc_cases)[2] <- 'ltc_cases'
monthly_ltc_cases$ltc_cases[is.na(monthly_ltc_cases$ltc_cases)] <- 0
head(monthly_ltc_cases)

if (nrow(monthly_ltc_cases) == 0) {
  monthly_ltc_cases <- data.frame(enc_date = as.Date("2023-01-01"), ltc_cases = 0)
} else {
  monthly_ltc_cases <- aggregate(ltc_cases ~ enc_date, monthly_ltc_cases, FUN = sum)
}
monthly_ltc_cases




###############  HIV Linkage  ###############

enc$hiv_ltc_cases[enc$ltc_coordinator_per_case___71 == 1 &
                    enc$ltc_services___1 == 1] <- 1
table(enc$hiv_ltc_cases)
hiv_ltc_cases <- enc[which(enc$hiv_ltc_cases == 1), ]
hiv_ltc_cases <- nrow(hiv_ltc_cases)
hiv_ltc_cases

hiv_ltc_cases_percent <- percent(hiv_ltc_cases/ltc_cases, accuracy = 0.1)
hiv_ltc_cases_percent
hiv_ltc_cases_percent[is.na(hiv_ltc_cases_percent)] <- '0.0%'
hiv_ltc_cases_percent


enc$new_hiv_ltc_cases[enc$hiv_ltc_cases == 1 &
                        enc$diagnosis_hiv == 1] <- 1
table(enc$new_hiv_ltc_cases)
new_hiv_ltc_cases <- enc[which(enc$new_hiv_ltc_cases == 1), ]
new_hiv_ltc_cases <- nrow(new_hiv_ltc_cases)
new_hiv_ltc_cases

new_hiv_ltc_cases_percent <- percent(new_hiv_ltc_cases/hiv_ltc_cases, accuracy = 0.1)
new_hiv_ltc_cases_percent
new_hiv_ltc_cases_percent[is.na(new_hiv_ltc_cases_percent)] <- '0.0%'
new_hiv_ltc_cases_percent


enc$prev_hiv_ltc_cases[enc$hiv_ltc_cases == 1 &
                         enc$diagnosis_hiv == 2] <- 1
table(enc$prev_hiv_ltc_cases)
prev_hiv_ltc_cases <- enc[which(enc$prev_hiv_ltc_cases == 1), ]
prev_hiv_ltc_cases <- nrow(prev_hiv_ltc_cases)
prev_hiv_ltc_cases

prev_hiv_ltc_cases_percent <- percent(prev_hiv_ltc_cases/hiv_ltc_cases, accuracy = 0.1)
prev_hiv_ltc_cases_percent
prev_hiv_ltc_cases_percent[is.na(prev_hiv_ltc_cases_percent)] <- '0.0%'
prev_hiv_ltc_cases_percent


# Ineligible HIV Linkage - Already Linked
table(enc$ltc_hiv_declined_rsn___23)
table(enc$ltc_hiv_prevented_rsn___16)
enc$hiv_already_linked[enc$hiv_ltc_cases == 1 &
                         (enc$ltc_hiv_declined_rsn___23 == 1 |
                            enc$ltc_hiv_prevented_rsn___16 == 1)] <- 1
table(enc$hiv_already_linked)

table(enc$hiv_already_linked)
hiv_already_linked <- enc[which(enc$hiv_already_linked == 1), ]
dim(hiv_already_linked)
hiv_already_linked <- nrow(hiv_already_linked)
hiv_already_linked


# Ineligible HIV Linkage - Deceased
table(enc$ltc_hiv_declined_rsn___35)
table(enc$ltc_hiv_prevented_rsn___17)
enc$hiv_deceased[enc$hiv_ltc_cases == 1 &
                   (enc$ltc_hiv_declined_rsn___35 == 1 |
                      enc$ltc_hiv_prevented_rsn___17 == 1)] <- 1
table(enc$hiv_deceased)

table(enc$hiv_deceased)
hiv_deceased <- enc[which(enc$hiv_deceased == 1), ]
dim(hiv_deceased)
hiv_deceased <- nrow(hiv_deceased)
hiv_deceased


# Ineligible HIV Linkage - Incarcerated
table(enc$ltc_hiv_prevented_rsn___12)
enc$hiv_incarcerated[enc$hiv_ltc_cases == 1 &
                       enc$ltc_hiv_prevented_rsn___12 == 1] <- 1
table(enc$hiv_incarcerated)

table(enc$hiv_incarcerated)
hiv_incarcerated <- enc[which(enc$hiv_incarcerated == 1), ]
dim(hiv_incarcerated)
hiv_incarcerated <- nrow(hiv_incarcerated)
hiv_incarcerated


# Ineligible HIV Linkage - Declined Linkage Service
table(enc$ltc_hiv_final_ltc_status)
enc$hiv_linkage_declined[(enc$hiv_ltc_cases == 1 &
                            enc$ltc_hiv_final_ltc_status == 2) &
                           (is.na(enc$hiv_already_linked) &
                              is.na(enc$hiv_deceased) &
                              is.na(enc$hiv_incarcerated))] <- 1
table(enc$hiv_linkage_declined)

table(enc$hiv_linkage_declined)
hiv_linkage_declined <- enc[which(enc$hiv_linkage_declined == 1), ]
dim(hiv_linkage_declined)
hiv_linkage_declined <- nrow(hiv_linkage_declined)
hiv_linkage_declined


# Ineligible HIV Linkage - Linkage in Progress
table(enc$ltc_hiv_prevented_rsn___18)
enc$hiv_ongoing_linkage[enc$hiv_ltc_cases == 1 &
                          enc$ltc_hiv_prevented_rsn___18 == 1] <- 1
table(enc$hiv_ongoing_linkage)

table(enc$hiv_ongoing_linkage)
hiv_ongoing_linkage <- enc[which(enc$hiv_ongoing_linkage == 1), ]
dim(hiv_ongoing_linkage)
hiv_ongoing_linkage <- nrow(hiv_ongoing_linkage)
hiv_ongoing_linkage


# HIV Ineligible Cases
enc$hiv_ineligible_ltc[enc$hiv_already_linked == 1 |
                         enc$hiv_deceased == 1 |
                         enc$hiv_incarcerated == 1 |
                         enc$hiv_linkage_declined == 1 |
                         enc$hiv_ongoing_linkage == 1] <- 1
table(enc$hiv_ineligible_ltc)

table(enc$hiv_ineligible_ltc)
hiv_ineligible_ltc <- enc[which(enc$hiv_ineligible_ltc == 1), ]
dim(hiv_ineligible_ltc)
hiv_ineligible_ltc <- nrow(hiv_ineligible_ltc)
hiv_ineligible_ltc

hiv_ineligible_ltc_percent <- percent(hiv_ineligible_ltc/hiv_ltc_cases, accuracy = 0.1)
hiv_ineligible_ltc_percent
hiv_ineligible_ltc_percent[is.na(hiv_ineligible_ltc_percent)] <- '0.0%'
hiv_ineligible_ltc_percent

hiv_already_linked_percent <- percent(hiv_already_linked/hiv_ineligible_ltc, accuracy = 0.1)
hiv_already_linked_percent
hiv_already_linked_percent[is.na(hiv_already_linked_percent)] <- '0.0%'
hiv_already_linked_percent

hiv_deceased_percent <- percent(hiv_deceased/hiv_ineligible_ltc, accuracy = 0.1)
hiv_deceased_percent
hiv_deceased_percent[is.na(hiv_deceased_percent)] <- '0.0%'
hiv_deceased_percent

hiv_incarcerated_percent <- percent(hiv_incarcerated/hiv_ineligible_ltc, accuracy = 0.1)
hiv_incarcerated_percent
hiv_incarcerated_percent[is.na(hiv_incarcerated_percent)] <- '0.0%'
hiv_incarcerated_percent

hiv_linkage_declined_percent <- percent(hiv_linkage_declined/hiv_ineligible_ltc, accuracy = 0.1)
hiv_linkage_declined_percent
hiv_linkage_declined_percent[is.na(hiv_linkage_declined_percent)] <- '0.0%'
hiv_linkage_declined_percent

hiv_ongoing_linkage_percent <- percent(hiv_ongoing_linkage/hiv_ineligible_ltc, accuracy = 0.1)
hiv_ongoing_linkage_percent
hiv_ongoing_linkage_percent[is.na(hiv_ongoing_linkage_percent)] <- '0.0%'
hiv_ongoing_linkage_percent


# HIV Eligibility to be Linked
enc$hiv_eligible_ltc[enc$hiv_ltc_cases == 1 &
                       (is.na(enc$hiv_already_linked) &
                          is.na(enc$hiv_deceased) &
                          is.na(enc$hiv_incarcerated) &
                          is.na(enc$hiv_linkage_declined) &
                          is.na(enc$hiv_ongoing_linkage))] <- 1
table(enc$hiv_eligible_ltc)

table(enc$hiv_eligible_ltc)
hiv_eligible_ltc <- enc[which(enc$hiv_eligible_ltc == 1), ]
dim(hiv_eligible_ltc)
hiv_eligible_ltc <- nrow(hiv_eligible_ltc)
hiv_eligible_ltc

hiv_eligible_ltc_percent <- percent(hiv_eligible_ltc/hiv_ltc_cases, accuracy = 0.1)
hiv_eligible_ltc_percent
hiv_eligible_ltc_percent[is.na(hiv_eligible_ltc_percent)] <- '0.0%'
hiv_eligible_ltc_percent



table(enc$hiv_eligible_ltc, enc$diagnosis_hiv)
enc$hiv_new_eligible_ltc[enc$hiv_eligible_ltc == 1 &
                           enc$diagnosis_hiv == 1] <- 1
table(enc$hiv_new_eligible_ltc)

table(enc$hiv_new_eligible_ltc)
hiv_new_eligible_ltc <- enc[which(enc$hiv_new_eligible_ltc == 1), ]
dim(hiv_new_eligible_ltc)
hiv_new_eligible_ltc <- nrow(hiv_new_eligible_ltc)
hiv_new_eligible_ltc

hiv_new_eligible_ltc_percent <- percent(hiv_new_eligible_ltc/hiv_eligible_ltc, accuracy = 0.1)
hiv_new_eligible_ltc_percent
hiv_new_eligible_ltc_percent[is.na(hiv_new_eligible_ltc_percent)] <- '0.0%'
hiv_new_eligible_ltc_percent




table(enc$hiv_eligible_ltc, enc$diagnosis_hiv)
enc$hiv_prev_eligible_ltc[enc$hiv_eligible_ltc == 1 &
                            enc$diagnosis_hiv == 2] <- 1
table(enc$hiv_prev_eligible_ltc)

table(enc$hiv_prev_eligible_ltc)
hiv_prev_eligible_ltc <- enc[which(enc$hiv_prev_eligible_ltc == 1), ]
dim(hiv_prev_eligible_ltc)
hiv_prev_eligible_ltc <- nrow(hiv_prev_eligible_ltc)
hiv_prev_eligible_ltc

hiv_prev_eligible_ltc_percent <- percent(hiv_prev_eligible_ltc/hiv_eligible_ltc, accuracy = 0.1)
hiv_prev_eligible_ltc_percent
hiv_prev_eligible_ltc_percent[is.na(hiv_prev_eligible_ltc_percent)] <- '0.0%'
hiv_prev_eligible_ltc_percent



table(enc$hiv_eligible_ltc, enc$diagnosis_hiv)
enc$hiv_unk_eligible_ltc[(enc$hiv_eligible_ltc == 1 &
                            (enc$diagnosis_hiv == 3 |
                               is.na(enc$diagnosis_hiv)))] <- 1
table(enc$hiv_unk_eligible_ltc)

table(enc$hiv_unk_eligible_ltc)
hiv_unk_eligible_ltc <- enc[which(enc$hiv_unk_eligible_ltc == 1), ]
dim(hiv_unk_eligible_ltc)
hiv_unk_eligible_ltc <- nrow(hiv_unk_eligible_ltc)
hiv_unk_eligible_ltc

hiv_unk_eligible_ltc_percent <- percent(hiv_unk_eligible_ltc/hiv_eligible_ltc, accuracy = 0.1)
hiv_unk_eligible_ltc_percent
hiv_unk_eligible_ltc_percent[is.na(hiv_unk_eligible_ltc_percent)] <- '0.0%'
hiv_unk_eligible_ltc_percent


# HIV Open/Closed Cases
table(enc$ltc_hiv_open_case_calc)
enc$hiv_in_progress[enc$hiv_eligible_ltc == 1 &
                      enc$ltc_hiv_open_case_calc == 1] <- 1
table(enc$hiv_in_progress)

table(enc$hiv_in_progress)
hiv_in_progress <- enc[which(enc$hiv_in_progress == 1), ]
dim(hiv_in_progress)
hiv_in_progress <- nrow(hiv_in_progress)
hiv_in_progress

hiv_in_progress_percent <- percent(hiv_in_progress/hiv_eligible_ltc, accuracy = 0.1)
hiv_in_progress_percent
hiv_in_progress_percent[is.na(hiv_in_progress_percent)] <- '0.0%'
hiv_in_progress_percent



table(enc$hiv_in_progress, enc$diagnosis_hiv)
enc$hiv_new_in_progress[enc$hiv_in_progress == 1 &
                          enc$diagnosis_hiv == 1] <- 1
table(enc$hiv_new_in_progress)

table(enc$hiv_new_in_progress)
hiv_new_in_progress <- enc[which(enc$hiv_new_in_progress == 1), ]
dim(hiv_new_in_progress)
hiv_new_in_progress <- nrow(hiv_new_in_progress)
hiv_new_in_progress

hiv_new_in_progress_percent <- percent(hiv_new_in_progress/hiv_new_eligible_ltc, accuracy = 0.1)
hiv_new_in_progress_percent
hiv_new_in_progress_percent[is.na(hiv_new_in_progress_percent)] <- '0.0%'
hiv_new_in_progress_percent



table(enc$hiv_in_progress, enc$diagnosis_hiv)
enc$hiv_prev_in_progress[enc$hiv_in_progress == 1 &
                           enc$diagnosis_hiv == 2] <- 1
table(enc$hiv_prev_in_progress)

table(enc$hiv_prev_in_progress)
hiv_prev_in_progress <- enc[which(enc$hiv_prev_in_progress == 1), ]
dim(hiv_prev_in_progress)
hiv_prev_in_progress <- nrow(hiv_prev_in_progress)
hiv_prev_in_progress

hiv_prev_in_progress_percent <- percent(hiv_prev_in_progress/hiv_prev_eligible_ltc, accuracy = 0.1)
hiv_prev_in_progress_percent
hiv_prev_in_progress_percent[is.na(hiv_prev_in_progress_percent)] <- '0.0%'
hiv_prev_in_progress_percent



table(enc$hiv_in_progress, enc$diagnosis_hiv)
enc$hiv_unk_in_progress[enc$hiv_in_progress == 1 &
                          (enc$diagnosis_hiv == 3 |
                             is.na(enc$diagnosis_hiv))] <- 1
table(enc$hiv_unk_in_progress)

table(enc$hiv_unk_in_progress)
hiv_unk_in_progress <- enc[which(enc$hiv_unk_in_progress == 1), ]
dim(hiv_unk_in_progress)
hiv_unk_in_progress <- nrow(hiv_unk_in_progress)
hiv_unk_in_progress

hiv_unk_in_progress_percent <- percent(hiv_unk_in_progress/hiv_unk_eligible_ltc, accuracy = 0.1)
hiv_unk_in_progress_percent
hiv_unk_in_progress_percent[is.na(hiv_unk_in_progress_percent)] <- '0.0%'
hiv_unk_in_progress_percent



table(enc$hiv_in_progress)
enc$hiv_ltc_cases_days_open <- difftime(Sys.Date(), enc$enc_date, units="days")
table(enc$hiv_ltc_cases_days_open)
enc$hiv_in_progress_90days[enc$hiv_in_progress == 1 &
                             (enc$hiv_ltc_cases_days_open > 90)] <- 1
table(enc$hiv_in_progress_90days)

table(enc$hiv_in_progress_90days)
hiv_in_progress_90days <- enc[which(enc$hiv_in_progress_90days == 1), ]
dim(hiv_in_progress_90days)
hiv_in_progress_90days <- nrow(hiv_in_progress_90days)
hiv_in_progress_90days

hiv_in_progress_90days_percent <- percent(hiv_in_progress_90days/hiv_in_progress, accuracy = 0.1)
hiv_in_progress_90days_percent
hiv_in_progress_90days_percent[is.na(hiv_in_progress_90days_percent)] <- '0.0%'
hiv_in_progress_90days_percent



table(enc$hiv_eligible_ltc, enc$hiv_in_progress)
enc$hiv_closed_case[enc$hiv_eligible_ltc == 1 &
                      is.na(enc$hiv_in_progress)] <- 1
table(enc$hiv_closed_case)

table(enc$hiv_closed_case)
hiv_closed_case <- enc[which(enc$hiv_closed_case == 1), ]
dim(hiv_closed_case)
hiv_closed_case <- nrow(hiv_closed_case)
hiv_closed_case

hiv_closed_case_percent <- percent(hiv_closed_case/hiv_eligible_ltc, accuracy = 0.1)
hiv_closed_case_percent
hiv_closed_case_percent[is.na(hiv_closed_case_percent)] <- '0.0%'
hiv_closed_case_percent


# HIV Cases Linked to Care
table(enc$hiv_closed_case, enc$ltc_hiv_final_ltc_status)
enc$hiv_linked[enc$hiv_closed_case == 1 &
                 enc$ltc_hiv_final_ltc_status == 1] <- 1
table(enc$hiv_linked)

table(enc$hiv_linked)
hiv_linked <- enc[which(enc$hiv_linked == 1), ]
dim(hiv_linked)
hiv_linked <- nrow(hiv_linked)
hiv_linked

hiv_linked_percent <- percent(hiv_linked/hiv_closed_case, accuracy = 0.1)
hiv_linked_percent
hiv_linked_percent[is.na(hiv_linked_percent)] <- '0.0%'
hiv_linked_percent



table(enc$diagnosis_hiv, enc$hiv_eligible_ltc)
table(enc$hiv_linked, enc$diagnosis_hiv)
enc$hiv_new_linked[enc$hiv_linked == 1 &
                     enc$diagnosis_hiv == 1] <- 1
table(enc$hiv_new_linked)

table(enc$hiv_new_linked)
hiv_new_linked <- enc[which(enc$hiv_new_linked == 1), ]
dim(hiv_new_linked)
hiv_new_linked <- nrow(hiv_new_linked)
hiv_new_linked

hiv_new_linked_percent <- percent(hiv_new_linked/hiv_new_eligible_ltc, accuracy = 0.1)
hiv_new_linked_percent
hiv_new_linked_percent[is.na(hiv_new_linked_percent)] <- '0.0%'
hiv_new_linked_percent



table(enc$diagnosis_hiv, enc$hiv_eligible_ltc)
table(enc$hiv_linked, enc$diagnosis_hiv)
enc$hiv_prev_linked[enc$hiv_linked == 1 &
                      enc$diagnosis_hiv == 2] <- 1
table(enc$hiv_prev_linked)

table(enc$hiv_prev_linked)
hiv_prev_linked <- enc[which(enc$hiv_prev_linked == 1), ]
dim(hiv_prev_linked)
hiv_prev_linked <- nrow(hiv_prev_linked)
hiv_prev_linked

hiv_prev_linked_percent <- percent(hiv_prev_linked/hiv_prev_eligible_ltc, accuracy = 0.1)
hiv_prev_linked_percent
hiv_prev_linked_percent[is.na(hiv_prev_linked_percent)] <- '0.0%'
hiv_prev_linked_percent




enc$hiv_not_linked[enc$hiv_eligible_ltc == 1 & is.na(enc$hiv_in_progress) & is.na(enc$hiv_linked)] <- 1
table(enc$hiv_not_linked)

table(enc$hiv_not_linked)
hiv_not_linked <- enc[which(enc$hiv_not_linked == 1), ]
dim(hiv_not_linked)
hiv_not_linked <- nrow(hiv_not_linked)
hiv_not_linked

hiv_not_linked_percent <- percent(hiv_not_linked/hiv_closed_case, accuracy = 0.1)
hiv_not_linked_percent
hiv_not_linked_percent[is.na(hiv_not_linked_percent)] <- '0.0%'
hiv_not_linked_percent



table(enc$hiv_not_linked, enc$diagnosis_hiv)
enc$hiv_new_not_linked[enc$hiv_not_linked == 1 &
                         enc$diagnosis_hiv == 1] <- 1
table(enc$hiv_new_not_linked)

table(enc$hiv_new_not_linked)
hiv_new_not_linked <- enc[which(enc$hiv_new_not_linked == 1), ]
dim(hiv_new_not_linked)
hiv_new_not_linked <- nrow(hiv_new_not_linked)
hiv_new_not_linked

hiv_new_not_linked_percent <- percent(hiv_new_not_linked/hiv_new_eligible_ltc, accuracy = 0.1)
hiv_new_not_linked_percent
hiv_new_not_linked_percent[is.na(hiv_new_not_linked_percent)] <- '0.0%'
hiv_new_not_linked_percent



table(enc$hiv_not_linked, enc$diagnosis_hiv)
enc$hiv_prev_not_linked[enc$hiv_not_linked == 1 &
                          enc$diagnosis_hiv == 2] <- 1
table(enc$hiv_prev_not_linked)

table(enc$hiv_prev_not_linked)
hiv_prev_not_linked <- enc[which(enc$hiv_prev_not_linked == 1), ]
dim(hiv_prev_not_linked)
hiv_prev_not_linked <- nrow(hiv_prev_not_linked)
hiv_prev_not_linked

hiv_prev_not_linked_percent <- percent(hiv_prev_not_linked/hiv_prev_eligible_ltc, accuracy = 0.1)
hiv_prev_not_linked_percent
hiv_prev_not_linked_percent[is.na(hiv_prev_not_linked_percent)] <- '0.0%'
hiv_prev_not_linked_percent


# HIV Reasons Not Linked to Care
enc$hiv_not_linked_med_staff[(enc$hiv_closed_case == 1 & is.na(enc$hiv_linked)) &
                               (enc$ltc_hiv_prevented_rsn___1 == 1 |
                                  enc$ltc_hiv_prevented_rsn___2 == 1 |
                                  enc$ltc_hiv_prevented_rsn___11 == 1)] <- 1
table(enc$hiv_not_linked_med_staff)

table(enc$hiv_not_linked_med_staff)
hiv_not_linked_med_staff <- enc[which(enc$hiv_not_linked_med_staff == 1), ]
dim(hiv_not_linked_med_staff)
hiv_not_linked_med_staff <- nrow(hiv_not_linked_med_staff)
hiv_not_linked_med_staff

hiv_not_linked_med_staff_percent <- percent(hiv_not_linked_med_staff/hiv_not_linked, accuracy = 0.1)
hiv_not_linked_med_staff_percent
hiv_not_linked_med_staff_percent[is.na(hiv_not_linked_med_staff_percent)] <- '0.0%'
hiv_not_linked_med_staff_percent



enc$hiv_not_linked_family[(enc$hiv_closed_case == 1 & is.na(enc$hiv_linked)) &
                            (enc$ltc_hiv_prevented_rsn___3 == 1)] <- 1
table(enc$hiv_not_linked_family)

table(enc$hiv_not_linked_family)
hiv_not_linked_family <- enc[which(enc$hiv_not_linked_family == 1), ]
dim(hiv_not_linked_family)
hiv_not_linked_family <- nrow(hiv_not_linked_family)
hiv_not_linked_family

hiv_not_linked_family_percent <- percent(hiv_not_linked_family/hiv_not_linked, accuracy = 0.1)
hiv_not_linked_family_percent
hiv_not_linked_family_percent[is.na(hiv_not_linked_family_percent)] <- '0.0%'
hiv_not_linked_family_percent



enc$hiv_not_linked_not_talking[(enc$hiv_closed_case == 1 & is.na(enc$hiv_linked)) &
                                 (enc$ltc_hiv_prevented_rsn___4 == 1)] <- 1
table(enc$hiv_not_linked_not_talking)

table(enc$hiv_not_linked_not_talking)
hiv_not_linked_not_talking <- enc[which(enc$hiv_not_linked_not_talking == 1), ]
dim(hiv_not_linked_not_talking)
hiv_not_linked_not_talking <- nrow(hiv_not_linked_not_talking)
hiv_not_linked_not_talking

hiv_not_linked_not_talking_percent <- percent(hiv_not_linked_not_talking/hiv_not_linked, accuracy = 0.1)
hiv_not_linked_not_talking_percent
hiv_not_linked_not_talking_percent[is.na(hiv_not_linked_not_talking_percent)] <- '0.0%'
hiv_not_linked_not_talking_percent



enc$hiv_not_linked_safety[(enc$hiv_closed_case == 1 & is.na(enc$hiv_linked)) &
                            (enc$ltc_hiv_prevented_rsn___5 == 1)] <- 1
table(enc$hiv_not_linked_safety)

table(enc$hiv_not_linked_safety)
hiv_not_linked_safety <- enc[which(enc$hiv_not_linked_safety == 1), ]
dim(hiv_not_linked_safety)
hiv_not_linked_safety <- nrow(hiv_not_linked_safety)
hiv_not_linked_safety

hiv_not_linked_safety_percent <- percent(hiv_not_linked_safety/hiv_not_linked, accuracy = 0.1)
hiv_not_linked_safety_percent
hiv_not_linked_safety_percent[is.na(hiv_not_linked_safety_percent)] <- '0.0%'
hiv_not_linked_safety_percent



enc$hiv_not_linked_medical[(enc$hiv_closed_case == 1 & is.na(enc$hiv_linked)) &
                             (enc$ltc_hiv_prevented_rsn___6 == 1 |
                                enc$ltc_hiv_prevented_rsn___8)] <- 1
table(enc$hiv_not_linked_medical)

table(enc$hiv_not_linked_medical)
hiv_not_linked_medical <- enc[which(enc$hiv_not_linked_medical == 1), ]
dim(hiv_not_linked_medical)
hiv_not_linked_medical <- nrow(hiv_not_linked_medical)
hiv_not_linked_medical

hiv_not_linked_medical_percent <- percent(hiv_not_linked_medical/hiv_not_linked, accuracy = 0.1)
hiv_not_linked_medical_percent
hiv_not_linked_medical_percent[is.na(hiv_not_linked_medical_percent)] <- '0.0%'
hiv_not_linked_medical_percent



enc$hiv_not_linked_contact[(enc$hiv_closed_case == 1 & is.na(enc$hiv_linked)) &
                             (enc$ltc_hiv_prevented_rsn___20 == 1)] <- 1
table(enc$hiv_not_linked_contact)

table(enc$hiv_not_linked_contact)
hiv_not_linked_contact <- enc[which(enc$hiv_not_linked_contact == 1), ]
dim(hiv_not_linked_contact)
hiv_not_linked_contact <- nrow(hiv_not_linked_contact)
hiv_not_linked_contact

hiv_not_linked_contact_percent <- percent(hiv_not_linked_contact/hiv_not_linked, accuracy = 0.1)
hiv_not_linked_contact_percent
hiv_not_linked_contact_percent[is.na(hiv_not_linked_contact_percent)] <- '0.0%'
hiv_not_linked_contact_percent



enc$hiv_not_linked_language[(enc$hiv_closed_case == 1 & is.na(enc$hiv_linked)) &
                              (enc$ltc_hiv_prevented_rsn___9 == 1)] <- 1
table(enc$hiv_not_linked_language)

table(enc$hiv_not_linked_language)
hiv_not_linked_language <- enc[which(enc$hiv_not_linked_language == 1), ]
dim(hiv_not_linked_language)
hiv_not_linked_language <- nrow(hiv_not_linked_language)
hiv_not_linked_language

hiv_not_linked_language_percent <- percent(hiv_not_linked_language/hiv_not_linked, accuracy = 0.1)
hiv_not_linked_language_percent
hiv_not_linked_language_percent[is.na(hiv_not_linked_language_percent)] <- '0.0%'
hiv_not_linked_language_percent



enc$hiv_not_linked_other[(enc$hiv_closed_case == 1 & is.na(enc$hiv_linked)) &
                           (enc$ltc_hiv_prevented_rsn___0 == 1)] <- 1
table(enc$hiv_not_linked_other)

table(enc$hiv_not_linked_other)
hiv_not_linked_other <- enc[which(enc$hiv_not_linked_other == 1), ]
dim(hiv_not_linked_other)
hiv_not_linked_other <- nrow(hiv_not_linked_other)
hiv_not_linked_other

hiv_not_linked_other_percent <- percent(hiv_not_linked_other/hiv_not_linked, accuracy = 0.1)
hiv_not_linked_other_percent
hiv_not_linked_other_percent[is.na(hiv_not_linked_other_percent)] <- '0.0%'
hiv_not_linked_other_percent


###############  HCV Linkage  ###############

enc$hcv_ltc_cases[enc$ltc_coordinator_per_case___71 == 1 &
                    enc$ltc_services___2 == 1] <- 1
table(enc$hcv_ltc_cases)
hcv_ltc_cases <- enc[which(enc$hcv_ltc_cases == 1), ]
hcv_ltc_cases <- nrow(hcv_ltc_cases)
hcv_ltc_cases

hcv_ltc_cases_percent <- percent(hcv_ltc_cases/ltc_cases, accuracy = 0.1)
hcv_ltc_cases_percent
hcv_ltc_cases_percent[is.na(hcv_ltc_cases_percent)] <- '0.0%'
hcv_ltc_cases_percent


enc$new_hcv_ltc_cases[enc$hcv_ltc_cases == 1 &
                        enc$diagnosis_hcv == 1] <- 1
table(enc$new_hcv_ltc_cases)
new_hcv_ltc_cases <- enc[which(enc$new_hcv_ltc_cases == 1), ]
new_hcv_ltc_cases <- nrow(new_hcv_ltc_cases)
new_hcv_ltc_cases

new_hcv_ltc_cases_percent <- percent(new_hcv_ltc_cases/hcv_ltc_cases, accuracy = 0.1)
new_hcv_ltc_cases_percent
new_hcv_ltc_cases_percent[is.na(new_hcv_ltc_cases_percent)] <- '0.0%'
new_hcv_ltc_cases_percent


enc$prev_hcv_ltc_cases[enc$hcv_ltc_cases == 1 &
                         enc$diagnosis_hcv == 2] <- 1
table(enc$prev_hcv_ltc_cases)
prev_hcv_ltc_cases <- enc[which(enc$prev_hcv_ltc_cases == 1), ]
prev_hcv_ltc_cases <- nrow(prev_hcv_ltc_cases)
prev_hcv_ltc_cases

prev_hcv_ltc_cases_percent <- percent(prev_hcv_ltc_cases/hcv_ltc_cases, accuracy = 0.1)
prev_hcv_ltc_cases_percent
prev_hcv_ltc_cases_percent[is.na(prev_hcv_ltc_cases_percent)] <- '0.0%'
prev_hcv_ltc_cases_percent


# Ineligible hcv Linkage - Already Linked
table(enc$ltc_hcv_declined_rsn___23)
table(enc$ltc_hcv_prevented_rsn___16)
enc$hcv_already_linked[enc$hcv_ltc_cases == 1 &
                         (enc$ltc_hcv_declined_rsn___23 == 1 |
                            enc$ltc_hcv_prevented_rsn___16 == 1)] <- 1
table(enc$hcv_already_linked)

table(enc$hcv_already_linked)
hcv_already_linked <- enc[which(enc$hcv_already_linked == 1), ]
dim(hcv_already_linked)
hcv_already_linked <- nrow(hcv_already_linked)
hcv_already_linked


# Ineligible hcv Linkage - Deceased
table(enc$ltc_hcv_declined_rsn___35)
table(enc$ltc_hcv_prevented_rsn___17)
enc$hcv_deceased[enc$hcv_ltc_cases == 1 &
                   (enc$ltc_hcv_declined_rsn___35 == 1 |
                      enc$ltc_hcv_prevented_rsn___17 == 1)] <- 1
table(enc$hcv_deceased)

table(enc$hcv_deceased)
hcv_deceased <- enc[which(enc$hcv_deceased == 1), ]
dim(hcv_deceased)
hcv_deceased <- nrow(hcv_deceased)
hcv_deceased


# Ineligible hcv Linkage - Incarcerated
table(enc$ltc_hcv_prevented_rsn___12)
enc$hcv_incarcerated[enc$hcv_ltc_cases == 1 &
                       enc$ltc_hcv_prevented_rsn___12 == 1] <- 1
table(enc$hcv_incarcerated)

table(enc$hcv_incarcerated)
hcv_incarcerated <- enc[which(enc$hcv_incarcerated == 1), ]
dim(hcv_incarcerated)
hcv_incarcerated <- nrow(hcv_incarcerated)
hcv_incarcerated


# Ineligible hcv Linkage - Declined Linkage Service
table(enc$ltc_hcv_final_ltc_status)
enc$hcv_linkage_declined[(enc$hcv_ltc_cases == 1 &
                            enc$ltc_hcv_final_ltc_status == 2) &
                           (is.na(enc$hcv_already_linked) &
                              is.na(enc$hcv_deceased) &
                              is.na(enc$hcv_incarcerated))] <- 1
table(enc$hcv_linkage_declined)

table(enc$hcv_linkage_declined)
hcv_linkage_declined <- enc[which(enc$hcv_linkage_declined == 1), ]
dim(hcv_linkage_declined)
hcv_linkage_declined <- nrow(hcv_linkage_declined)
hcv_linkage_declined


# Ineligible hcv Linkage - Linkage in Progress
table(enc$ltc_hcv_prevented_rsn___18)
enc$hcv_ongoing_linkage[enc$hcv_ltc_cases == 1 &
                          enc$ltc_hcv_prevented_rsn___18 == 1] <- 1
table(enc$hcv_ongoing_linkage)

table(enc$hcv_ongoing_linkage)
hcv_ongoing_linkage <- enc[which(enc$hcv_ongoing_linkage == 1), ]
dim(hcv_ongoing_linkage)
hcv_ongoing_linkage <- nrow(hcv_ongoing_linkage)
hcv_ongoing_linkage


# hcv Ineligible Cases
enc$hcv_ineligible_ltc[enc$hcv_already_linked == 1 |
                         enc$hcv_deceased == 1 |
                         enc$hcv_incarcerated == 1 |
                         enc$hcv_linkage_declined == 1 |
                         enc$hcv_ongoing_linkage == 1] <- 1
table(enc$hcv_ineligible_ltc)

table(enc$hcv_ineligible_ltc)
hcv_ineligible_ltc <- enc[which(enc$hcv_ineligible_ltc == 1), ]
dim(hcv_ineligible_ltc)
hcv_ineligible_ltc <- nrow(hcv_ineligible_ltc)
hcv_ineligible_ltc

hcv_ineligible_ltc_percent <- percent(hcv_ineligible_ltc/hcv_ltc_cases, accuracy = 0.1)
hcv_ineligible_ltc_percent
hcv_ineligible_ltc_percent[is.na(hcv_ineligible_ltc_percent)] <- '0.0%'
hcv_ineligible_ltc_percent

hcv_already_linked_percent <- percent(hcv_already_linked/hcv_ineligible_ltc, accuracy = 0.1)
hcv_already_linked_percent
hcv_already_linked_percent[is.na(hcv_already_linked_percent)] <- '0.0%'
hcv_already_linked_percent

hcv_deceased_percent <- percent(hcv_deceased/hcv_ineligible_ltc, accuracy = 0.1)
hcv_deceased_percent
hcv_deceased_percent[is.na(hcv_deceased_percent)] <- '0.0%'
hcv_deceased_percent

hcv_incarcerated_percent <- percent(hcv_incarcerated/hcv_ineligible_ltc, accuracy = 0.1)
hcv_incarcerated_percent
hcv_incarcerated_percent[is.na(hcv_incarcerated_percent)] <- '0.0%'
hcv_incarcerated_percent

hcv_linkage_declined_percent <- percent(hcv_linkage_declined/hcv_ineligible_ltc, accuracy = 0.1)
hcv_linkage_declined_percent
hcv_linkage_declined_percent[is.na(hcv_linkage_declined_percent)] <- '0.0%'
hcv_linkage_declined_percent

hcv_ongoing_linkage_percent <- percent(hcv_ongoing_linkage/hcv_ineligible_ltc, accuracy = 0.1)
hcv_ongoing_linkage_percent
hcv_ongoing_linkage_percent[is.na(hcv_ongoing_linkage_percent)] <- '0.0%'
hcv_ongoing_linkage_percent


# hcv Eligibility to be Linked
enc$hcv_eligible_ltc[enc$hcv_ltc_cases == 1 &
                       (is.na(enc$hcv_already_linked) &
                          is.na(enc$hcv_deceased) &
                          is.na(enc$hcv_incarcerated) &
                          is.na(enc$hcv_linkage_declined) &
                          is.na(enc$hcv_ongoing_linkage))] <- 1
table(enc$hcv_eligible_ltc)

table(enc$hcv_eligible_ltc)
hcv_eligible_ltc <- enc[which(enc$hcv_eligible_ltc == 1), ]
dim(hcv_eligible_ltc)
hcv_eligible_ltc <- nrow(hcv_eligible_ltc)
hcv_eligible_ltc

hcv_eligible_ltc_percent <- percent(hcv_eligible_ltc/hcv_ltc_cases, accuracy = 0.1)
hcv_eligible_ltc_percent
hcv_eligible_ltc_percent[is.na(hcv_eligible_ltc_percent)] <- '0.0%'
hcv_eligible_ltc_percent



table(enc$hcv_eligible_ltc, enc$diagnosis_hcv)
enc$hcv_new_eligible_ltc[enc$hcv_eligible_ltc == 1 &
                           enc$diagnosis_hcv == 1] <- 1
table(enc$hcv_new_eligible_ltc)

table(enc$hcv_new_eligible_ltc)
hcv_new_eligible_ltc <- enc[which(enc$hcv_new_eligible_ltc == 1), ]
dim(hcv_new_eligible_ltc)
hcv_new_eligible_ltc <- nrow(hcv_new_eligible_ltc)
hcv_new_eligible_ltc

hcv_new_eligible_ltc_percent <- percent(hcv_new_eligible_ltc/hcv_eligible_ltc, accuracy = 0.1)
hcv_new_eligible_ltc_percent
hcv_new_eligible_ltc_percent[is.na(hcv_new_eligible_ltc_percent)] <- '0.0%'
hcv_new_eligible_ltc_percent




table(enc$hcv_eligible_ltc, enc$diagnosis_hcv)
enc$hcv_prev_eligible_ltc[enc$hcv_eligible_ltc == 1 &
                            enc$diagnosis_hcv == 2] <- 1
table(enc$hcv_prev_eligible_ltc)

table(enc$hcv_prev_eligible_ltc)
hcv_prev_eligible_ltc <- enc[which(enc$hcv_prev_eligible_ltc == 1), ]
dim(hcv_prev_eligible_ltc)
hcv_prev_eligible_ltc <- nrow(hcv_prev_eligible_ltc)
hcv_prev_eligible_ltc

hcv_prev_eligible_ltc_percent <- percent(hcv_prev_eligible_ltc/hcv_eligible_ltc, accuracy = 0.1)
hcv_prev_eligible_ltc_percent
hcv_prev_eligible_ltc_percent[is.na(hcv_prev_eligible_ltc_percent)] <- '0.0%'
hcv_prev_eligible_ltc_percent



table(enc$hcv_eligible_ltc, enc$diagnosis_hcv)
enc$hcv_unk_eligible_ltc[(enc$hcv_eligible_ltc == 1 &
                            (is.na(enc$diagnosis_hcv)))] <- 1
table(enc$hcv_unk_eligible_ltc)

table(enc$hcv_unk_eligible_ltc)
hcv_unk_eligible_ltc <- enc[which(enc$hcv_unk_eligible_ltc == 1), ]
dim(hcv_unk_eligible_ltc)
hcv_unk_eligible_ltc <- nrow(hcv_unk_eligible_ltc)
hcv_unk_eligible_ltc

hcv_unk_eligible_ltc_percent <- percent(hcv_unk_eligible_ltc/hcv_eligible_ltc, accuracy = 0.1)
hcv_unk_eligible_ltc_percent
hcv_unk_eligible_ltc_percent[is.na(hcv_unk_eligible_ltc_percent)] <- '0.0%'
hcv_unk_eligible_ltc_percent


# hcv Open/Closed Cases
table(enc$ltc_hcv_open_case_calc)
enc$hcv_in_progress[enc$hcv_eligible_ltc == 1 &
                      enc$ltc_hcv_open_case_calc == 1] <- 1
table(enc$hcv_in_progress)

table(enc$hcv_in_progress)
hcv_in_progress <- enc[which(enc$hcv_in_progress == 1), ]
dim(hcv_in_progress)
hcv_in_progress <- nrow(hcv_in_progress)
hcv_in_progress

hcv_in_progress_percent <- percent(hcv_in_progress/hcv_eligible_ltc, accuracy = 0.1)
hcv_in_progress_percent
hcv_in_progress_percent[is.na(hcv_in_progress_percent)] <- '0.0%'
hcv_in_progress_percent



table(enc$hcv_in_progress, enc$diagnosis_hcv)
enc$hcv_new_in_progress[enc$hcv_in_progress == 1 &
                          enc$diagnosis_hcv == 1] <- 1
table(enc$hcv_new_in_progress)

table(enc$hcv_new_in_progress)
hcv_new_in_progress <- enc[which(enc$hcv_new_in_progress == 1), ]
dim(hcv_new_in_progress)
hcv_new_in_progress <- nrow(hcv_new_in_progress)
hcv_new_in_progress

hcv_new_in_progress_percent <- percent(hcv_new_in_progress/hcv_new_eligible_ltc, accuracy = 0.1)
hcv_new_in_progress_percent
hcv_new_in_progress_percent[is.na(hcv_new_in_progress_percent)] <- '0.0%'
hcv_new_in_progress_percent



table(enc$hcv_in_progress, enc$diagnosis_hcv)
enc$hcv_prev_in_progress[enc$hcv_in_progress == 1 &
                           enc$diagnosis_hcv == 2] <- 1
table(enc$hcv_prev_in_progress)

table(enc$hcv_prev_in_progress)
hcv_prev_in_progress <- enc[which(enc$hcv_prev_in_progress == 1), ]
dim(hcv_prev_in_progress)
hcv_prev_in_progress <- nrow(hcv_prev_in_progress)
hcv_prev_in_progress

hcv_prev_in_progress_percent <- percent(hcv_prev_in_progress/hcv_prev_eligible_ltc, accuracy = 0.1)
hcv_prev_in_progress_percent
hcv_prev_in_progress_percent[is.na(hcv_prev_in_progress_percent)] <- '0.0%'
hcv_prev_in_progress_percent



table(enc$hcv_in_progress, enc$diagnosis_hcv)
enc$hcv_unk_in_progress[enc$hcv_in_progress == 1 &
                          (is.na(enc$diagnosis_hcv))] <- 1
table(enc$hcv_unk_in_progress)

table(enc$hcv_unk_in_progress)
hcv_unk_in_progress <- enc[which(enc$hcv_unk_in_progress == 1), ]
dim(hcv_unk_in_progress)
hcv_unk_in_progress <- nrow(hcv_unk_in_progress)
hcv_unk_in_progress

hcv_unk_in_progress_percent <- percent(hcv_unk_in_progress/hcv_unk_eligible_ltc, accuracy = 0.1)
hcv_unk_in_progress_percent
hcv_unk_in_progress_percent[is.na(hcv_unk_in_progress_percent)] <- '0.0%'
hcv_unk_in_progress_percent



table(enc$hcv_in_progress)
enc$hcv_ltc_cases_days_open <- difftime(Sys.Date(), enc$enc_date, units="days")
table(enc$hcv_ltc_cases_days_open)
enc$hcv_in_progress_90days[enc$hcv_in_progress == 1 &
                             (enc$hcv_ltc_cases_days_open > 90)] <- 1
table(enc$hcv_in_progress_90days)

table(enc$hcv_in_progress_90days)
hcv_in_progress_90days <- enc[which(enc$hcv_in_progress_90days == 1), ]
dim(hcv_in_progress_90days)
hcv_in_progress_90days <- nrow(hcv_in_progress_90days)
hcv_in_progress_90days

hcv_in_progress_90days_percent <- percent(hcv_in_progress_90days/hcv_in_progress, accuracy = 0.1)
hcv_in_progress_90days_percent
hcv_in_progress_90days_percent[is.na(hcv_in_progress_90days_percent)] <- '0.0%'
hcv_in_progress_90days_percent



table(enc$hcv_eligible_ltc, enc$hcv_in_progress)
enc$hcv_closed_case[enc$hcv_eligible_ltc == 1 &
                      is.na(enc$hcv_in_progress)] <- 1
table(enc$hcv_closed_case)

table(enc$hcv_closed_case)
hcv_closed_case <- enc[which(enc$hcv_closed_case == 1), ]
dim(hcv_closed_case)
hcv_closed_case <- nrow(hcv_closed_case)
hcv_closed_case

hcv_closed_case_percent <- percent(hcv_closed_case/hcv_eligible_ltc, accuracy = 0.1)
hcv_closed_case_percent
hcv_closed_case_percent[is.na(hcv_closed_case_percent)] <- '0.0%'
hcv_closed_case_percent


# hcv Cases Linked to Care
table(enc$hcv_closed_case, enc$ltc_hcv_final_ltc_status)
enc$hcv_linked[enc$hcv_closed_case == 1 &
                 enc$ltc_hcv_final_ltc_status == 1] <- 1
table(enc$hcv_linked)

table(enc$hcv_linked)
hcv_linked <- enc[which(enc$hcv_linked == 1), ]
dim(hcv_linked)
hcv_linked <- nrow(hcv_linked)
hcv_linked

hcv_linked_percent <- percent(hcv_linked/hcv_closed_case, accuracy = 0.1)
hcv_linked_percent
hcv_linked_percent[is.na(hcv_linked_percent)] <- '0.0%'
hcv_linked_percent



table(enc$diagnosis_hcv, enc$hcv_eligible_ltc)
table(enc$hcv_linked, enc$diagnosis_hcv)
enc$hcv_new_linked[enc$hcv_linked == 1 &
                     enc$diagnosis_hcv == 1] <- 1
table(enc$hcv_new_linked)

table(enc$hcv_new_linked)
hcv_new_linked <- enc[which(enc$hcv_new_linked == 1), ]
dim(hcv_new_linked)
hcv_new_linked <- nrow(hcv_new_linked)
hcv_new_linked

hcv_new_linked_percent <- percent(hcv_new_linked/hcv_new_eligible_ltc, accuracy = 0.1)
hcv_new_linked_percent
hcv_new_linked_percent[is.na(hcv_new_linked_percent)] <- '0.0%'
hcv_new_linked_percent



table(enc$diagnosis_hcv, enc$hcv_eligible_ltc)
table(enc$hcv_linked, enc$diagnosis_hcv)
enc$hcv_prev_linked[enc$hcv_linked == 1 &
                      enc$diagnosis_hcv == 2] <- 1
table(enc$hcv_prev_linked)

table(enc$hcv_prev_linked)
hcv_prev_linked <- enc[which(enc$hcv_prev_linked == 1), ]
dim(hcv_prev_linked)
hcv_prev_linked <- nrow(hcv_prev_linked)
hcv_prev_linked

hcv_prev_linked_percent <- percent(hcv_prev_linked/hcv_prev_eligible_ltc, accuracy = 0.1)
hcv_prev_linked_percent
hcv_prev_linked_percent[is.na(hcv_prev_linked_percent)] <- '0.0%'
hcv_prev_linked_percent




enc$hcv_not_linked[enc$hcv_eligible_ltc == 1 & is.na(enc$hcv_in_progress) & is.na(enc$hcv_linked)] <- 1
table(enc$hcv_not_linked)

table(enc$hcv_not_linked)
hcv_not_linked <- enc[which(enc$hcv_not_linked == 1), ]
dim(hcv_not_linked)
hcv_not_linked <- nrow(hcv_not_linked)
hcv_not_linked

hcv_not_linked_percent <- percent(hcv_not_linked/hcv_closed_case, accuracy = 0.1)
hcv_not_linked_percent
hcv_not_linked_percent[is.na(hcv_not_linked_percent)] <- '0.0%'
hcv_not_linked_percent



table(enc$hcv_not_linked, enc$diagnosis_hcv)
enc$hcv_new_not_linked[enc$hcv_not_linked == 1 &
                         enc$diagnosis_hcv == 1] <- 1
table(enc$hcv_new_not_linked)

table(enc$hcv_new_not_linked)
hcv_new_not_linked <- enc[which(enc$hcv_new_not_linked == 1), ]
dim(hcv_new_not_linked)
hcv_new_not_linked <- nrow(hcv_new_not_linked)
hcv_new_not_linked

hcv_new_not_linked_percent <- percent(hcv_new_not_linked/hcv_new_eligible_ltc, accuracy = 0.1)
hcv_new_not_linked_percent
hcv_new_not_linked_percent[is.na(hcv_new_not_linked_percent)] <- '0.0%'
hcv_new_not_linked_percent



table(enc$hcv_not_linked, enc$diagnosis_hcv)
enc$hcv_prev_not_linked[enc$hcv_not_linked == 1 &
                          enc$diagnosis_hcv == 2] <- 1
table(enc$hcv_prev_not_linked)

table(enc$hcv_prev_not_linked)
hcv_prev_not_linked <- enc[which(enc$hcv_prev_not_linked == 1), ]
dim(hcv_prev_not_linked)
hcv_prev_not_linked <- nrow(hcv_prev_not_linked)
hcv_prev_not_linked

hcv_prev_not_linked_percent <- percent(hcv_prev_not_linked/hcv_prev_eligible_ltc, accuracy = 0.1)
hcv_prev_not_linked_percent
hcv_prev_not_linked_percent[is.na(hcv_prev_not_linked_percent)] <- '0.0%'
hcv_prev_not_linked_percent


# hcv Reasons Not Linked to Care
enc$hcv_not_linked_med_staff[(enc$hcv_closed_case == 1 & is.na(enc$hcv_linked)) &
                               (enc$ltc_hcv_prevented_rsn___1 == 1 |
                                  enc$ltc_hcv_prevented_rsn___2 == 1 |
                                  enc$ltc_hcv_prevented_rsn___11 == 1)] <- 1
table(enc$hcv_not_linked_med_staff)

table(enc$hcv_not_linked_med_staff)
hcv_not_linked_med_staff <- enc[which(enc$hcv_not_linked_med_staff == 1), ]
dim(hcv_not_linked_med_staff)
hcv_not_linked_med_staff <- nrow(hcv_not_linked_med_staff)
hcv_not_linked_med_staff

hcv_not_linked_med_staff_percent <- percent(hcv_not_linked_med_staff/hcv_not_linked, accuracy = 0.1)
hcv_not_linked_med_staff_percent
hcv_not_linked_med_staff_percent[is.na(hcv_not_linked_med_staff_percent)] <- '0.0%'
hcv_not_linked_med_staff_percent



enc$hcv_not_linked_family[(enc$hcv_closed_case == 1 & is.na(enc$hcv_linked)) &
                            (enc$ltc_hcv_prevented_rsn___3 == 1)] <- 1
table(enc$hcv_not_linked_family)

table(enc$hcv_not_linked_family)
hcv_not_linked_family <- enc[which(enc$hcv_not_linked_family == 1), ]
dim(hcv_not_linked_family)
hcv_not_linked_family <- nrow(hcv_not_linked_family)
hcv_not_linked_family

hcv_not_linked_family_percent <- percent(hcv_not_linked_family/hcv_not_linked, accuracy = 0.1)
hcv_not_linked_family_percent
hcv_not_linked_family_percent[is.na(hcv_not_linked_family_percent)] <- '0.0%'
hcv_not_linked_family_percent



enc$hcv_not_linked_not_talking[(enc$hcv_closed_case == 1 & is.na(enc$hcv_linked)) &
                                 (enc$ltc_hcv_prevented_rsn___4 == 1)] <- 1
table(enc$hcv_not_linked_not_talking)

table(enc$hcv_not_linked_not_talking)
hcv_not_linked_not_talking <- enc[which(enc$hcv_not_linked_not_talking == 1), ]
dim(hcv_not_linked_not_talking)
hcv_not_linked_not_talking <- nrow(hcv_not_linked_not_talking)
hcv_not_linked_not_talking

hcv_not_linked_not_talking_percent <- percent(hcv_not_linked_not_talking/hcv_not_linked, accuracy = 0.1)
hcv_not_linked_not_talking_percent
hcv_not_linked_not_talking_percent[is.na(hcv_not_linked_not_talking_percent)] <- '0.0%'
hcv_not_linked_not_talking_percent



enc$hcv_not_linked_safety[(enc$hcv_closed_case == 1 & is.na(enc$hcv_linked)) &
                            (enc$ltc_hcv_prevented_rsn___5 == 1)] <- 1
table(enc$hcv_not_linked_safety)

table(enc$hcv_not_linked_safety)
hcv_not_linked_safety <- enc[which(enc$hcv_not_linked_safety == 1), ]
dim(hcv_not_linked_safety)
hcv_not_linked_safety <- nrow(hcv_not_linked_safety)
hcv_not_linked_safety

hcv_not_linked_safety_percent <- percent(hcv_not_linked_safety/hcv_not_linked, accuracy = 0.1)
hcv_not_linked_safety_percent
hcv_not_linked_safety_percent[is.na(hcv_not_linked_safety_percent)] <- '0.0%'
hcv_not_linked_safety_percent



enc$hcv_not_linked_medical[(enc$hcv_closed_case == 1 & is.na(enc$hcv_linked)) &
                             (enc$ltc_hcv_prevented_rsn___6 == 1 |
                                enc$ltc_hcv_prevented_rsn___8)] <- 1
table(enc$hcv_not_linked_medical)

table(enc$hcv_not_linked_medical)
hcv_not_linked_medical <- enc[which(enc$hcv_not_linked_medical == 1), ]
dim(hcv_not_linked_medical)
hcv_not_linked_medical <- nrow(hcv_not_linked_medical)
hcv_not_linked_medical

hcv_not_linked_medical_percent <- percent(hcv_not_linked_medical/hcv_not_linked, accuracy = 0.1)
hcv_not_linked_medical_percent
hcv_not_linked_medical_percent[is.na(hcv_not_linked_medical_percent)] <- '0.0%'
hcv_not_linked_medical_percent



enc$hcv_not_linked_contact[(enc$hcv_closed_case == 1 & is.na(enc$hcv_linked)) &
                             (enc$ltc_hcv_prevented_rsn___20 == 1)] <- 1
table(enc$hcv_not_linked_contact)

table(enc$hcv_not_linked_contact)
hcv_not_linked_contact <- enc[which(enc$hcv_not_linked_contact == 1), ]
dim(hcv_not_linked_contact)
hcv_not_linked_contact <- nrow(hcv_not_linked_contact)
hcv_not_linked_contact

hcv_not_linked_contact_percent <- percent(hcv_not_linked_contact/hcv_not_linked, accuracy = 0.1)
hcv_not_linked_contact_percent
hcv_not_linked_contact_percent[is.na(hcv_not_linked_contact_percent)] <- '0.0%'
hcv_not_linked_contact_percent



enc$hcv_not_linked_language[(enc$hcv_closed_case == 1 & is.na(enc$hcv_linked)) &
                              (enc$ltc_hcv_prevented_rsn___9 == 1)] <- 1
table(enc$hcv_not_linked_language)

table(enc$hcv_not_linked_language)
hcv_not_linked_language <- enc[which(enc$hcv_not_linked_language == 1), ]
dim(hcv_not_linked_language)
hcv_not_linked_language <- nrow(hcv_not_linked_language)
hcv_not_linked_language

hcv_not_linked_language_percent <- percent(hcv_not_linked_language/hcv_not_linked, accuracy = 0.1)
hcv_not_linked_language_percent
hcv_not_linked_language_percent[is.na(hcv_not_linked_language_percent)] <- '0.0%'
hcv_not_linked_language_percent



enc$hcv_not_linked_other[(enc$hcv_closed_case == 1 & is.na(enc$hcv_linked)) &
                           (enc$ltc_hcv_prevented_rsn___0 == 1)] <- 1
table(enc$hcv_not_linked_other)

table(enc$hcv_not_linked_other)
hcv_not_linked_other <- enc[which(enc$hcv_not_linked_other == 1), ]
dim(hcv_not_linked_other)
hcv_not_linked_other <- nrow(hcv_not_linked_other)
hcv_not_linked_other

hcv_not_linked_other_percent <- percent(hcv_not_linked_other/hcv_not_linked, accuracy = 0.1)
hcv_not_linked_other_percent
hcv_not_linked_other_percent[is.na(hcv_not_linked_other_percent)] <- '0.0%'
hcv_not_linked_other_percent


###############  SUD Linkage  ###############

enc$sud_ltc_cases[enc$ltc_coordinator_per_case___71 == 1 &
                    enc$ltc_services___3 == 1] <- 1
table(enc$sud_ltc_cases)
sud_ltc_cases <- enc[which(enc$sud_ltc_cases == 1), ]
sud_ltc_cases <- nrow(sud_ltc_cases)
sud_ltc_cases

sud_ltc_cases_percent <- percent(sud_ltc_cases/ltc_cases, accuracy = 0.1)
sud_ltc_cases_percent
sud_ltc_cases_percent[is.na(sud_ltc_cases_percent)] <- '0.0%'
sud_ltc_cases_percent


# Ineligible sud Linkage - Already Linked
table(enc$ltc_sud_declined_rsn___23)
table(enc$ltc_sud_prevented_rsn___16)
enc$sud_already_linked[enc$sud_ltc_cases == 1 &
                         (enc$ltc_sud_declined_rsn___23 == 1 |
                            enc$ltc_sud_prevented_rsn___16 == 1)] <- 1
table(enc$sud_already_linked)

table(enc$sud_already_linked)
sud_already_linked <- enc[which(enc$sud_already_linked == 1), ]
dim(sud_already_linked)
sud_already_linked <- nrow(sud_already_linked)
sud_already_linked


# Ineligible sud Linkage - Deceased
table(enc$ltc_sud_declined_rsn___35)
table(enc$ltc_sud_prevented_rsn___17)
enc$sud_deceased[enc$sud_ltc_cases == 1 &
                   (enc$ltc_sud_declined_rsn___35 == 1 |
                      enc$ltc_sud_prevented_rsn___17 == 1)] <- 1
table(enc$sud_deceased)

table(enc$sud_deceased)
sud_deceased <- enc[which(enc$sud_deceased == 1), ]
dim(sud_deceased)
sud_deceased <- nrow(sud_deceased)
sud_deceased


# Ineligible sud Linkage - Incarcerated
table(enc$ltc_sud_prevented_rsn___12)
enc$sud_incarcerated[enc$sud_ltc_cases == 1 &
                       enc$ltc_sud_prevented_rsn___12 == 1] <- 1
table(enc$sud_incarcerated)

table(enc$sud_incarcerated)
sud_incarcerated <- enc[which(enc$sud_incarcerated == 1), ]
dim(sud_incarcerated)
sud_incarcerated <- nrow(sud_incarcerated)
sud_incarcerated


# Ineligible sud Linkage - Declined Linkage Service
table(enc$ltc_sud_final_ltc_status)
enc$sud_linkage_declined[(enc$sud_ltc_cases == 1 &
                            enc$ltc_sud_final_ltc_status == 2) &
                           (is.na(enc$sud_already_linked) &
                              is.na(enc$sud_deceased) &
                              is.na(enc$sud_incarcerated))] <- 1
table(enc$sud_linkage_declined)

table(enc$sud_linkage_declined)
sud_linkage_declined <- enc[which(enc$sud_linkage_declined == 1), ]
dim(sud_linkage_declined)
sud_linkage_declined <- nrow(sud_linkage_declined)
sud_linkage_declined


# Ineligible sud Linkage - Linkage in Progress
table(enc$ltc_sud_prevented_rsn___18)
enc$sud_ongoing_linkage[enc$sud_ltc_cases == 1 &
                          enc$ltc_sud_prevented_rsn___18 == 1] <- 1
table(enc$sud_ongoing_linkage)

table(enc$sud_ongoing_linkage)
sud_ongoing_linkage <- enc[which(enc$sud_ongoing_linkage == 1), ]
dim(sud_ongoing_linkage)
sud_ongoing_linkage <- nrow(sud_ongoing_linkage)
sud_ongoing_linkage


# sud Ineligible Cases
enc$sud_ineligible_ltc[enc$sud_already_linked == 1 |
                         enc$sud_deceased == 1 |
                         enc$sud_incarcerated == 1 |
                         enc$sud_linkage_declined == 1 |
                         enc$sud_ongoing_linkage == 1] <- 1
table(enc$sud_ineligible_ltc)

table(enc$sud_ineligible_ltc)
sud_ineligible_ltc <- enc[which(enc$sud_ineligible_ltc == 1), ]
dim(sud_ineligible_ltc)
sud_ineligible_ltc <- nrow(sud_ineligible_ltc)
sud_ineligible_ltc

sud_ineligible_ltc_percent <- percent(sud_ineligible_ltc/sud_ltc_cases, accuracy = 0.1)
sud_ineligible_ltc_percent
sud_ineligible_ltc_percent[is.na(sud_ineligible_ltc_percent)] <- '0.0%'
sud_ineligible_ltc_percent

sud_already_linked_percent <- percent(sud_already_linked/sud_ineligible_ltc, accuracy = 0.1)
sud_already_linked_percent
sud_already_linked_percent[is.na(sud_already_linked_percent)] <- '0.0%'
sud_already_linked_percent

sud_deceased_percent <- percent(sud_deceased/sud_ineligible_ltc, accuracy = 0.1)
sud_deceased_percent
sud_deceased_percent[is.na(sud_deceased_percent)] <- '0.0%'
sud_deceased_percent

sud_incarcerated_percent <- percent(sud_incarcerated/sud_ineligible_ltc, accuracy = 0.1)
sud_incarcerated_percent
sud_incarcerated_percent[is.na(sud_incarcerated_percent)] <- '0.0%'
sud_incarcerated_percent

sud_linkage_declined_percent <- percent(sud_linkage_declined/sud_ineligible_ltc, accuracy = 0.1)
sud_linkage_declined_percent
sud_linkage_declined_percent[is.na(sud_linkage_declined_percent)] <- '0.0%'
sud_linkage_declined_percent

sud_ongoing_linkage_percent <- percent(sud_ongoing_linkage/sud_ineligible_ltc, accuracy = 0.1)
sud_ongoing_linkage_percent
sud_ongoing_linkage_percent[is.na(sud_ongoing_linkage_percent)] <- '0.0%'
sud_ongoing_linkage_percent


# sud Eligibility to be Linked
enc$sud_eligible_ltc[enc$sud_ltc_cases == 1 &
                       (is.na(enc$sud_already_linked) &
                          is.na(enc$sud_deceased) &
                          is.na(enc$sud_incarcerated) &
                          is.na(enc$sud_linkage_declined) &
                          is.na(enc$sud_ongoing_linkage))] <- 1
table(enc$sud_eligible_ltc)

table(enc$sud_eligible_ltc)
sud_eligible_ltc <- enc[which(enc$sud_eligible_ltc == 1), ]
dim(sud_eligible_ltc)
sud_eligible_ltc <- nrow(sud_eligible_ltc)
sud_eligible_ltc

sud_eligible_ltc_percent <- percent(sud_eligible_ltc/sud_ltc_cases, accuracy = 0.1)
sud_eligible_ltc_percent
sud_eligible_ltc_percent[is.na(sud_eligible_ltc_percent)] <- '0.0%'
sud_eligible_ltc_percent


# sud Open/Closed Cases
table(enc$ltc_sud_open_case_calc)
enc$sud_in_progress[enc$sud_eligible_ltc == 1 &
                      enc$ltc_sud_open_case_calc == 1] <- 1
table(enc$sud_in_progress)

table(enc$sud_in_progress)
sud_in_progress <- enc[which(enc$sud_in_progress == 1), ]
dim(sud_in_progress)
sud_in_progress <- nrow(sud_in_progress)
sud_in_progress

sud_in_progress_percent <- percent(sud_in_progress/sud_eligible_ltc, accuracy = 0.1)
sud_in_progress_percent
sud_in_progress_percent[is.na(sud_in_progress_percent)] <- '0.0%'
sud_in_progress_percent



table(enc$sud_in_progress)
enc$sud_ltc_cases_days_open <- difftime(Sys.Date(), enc$enc_date, units="days")
table(enc$sud_ltc_cases_days_open)
enc$sud_in_progress_90days[enc$sud_in_progress == 1 &
                             (enc$sud_ltc_cases_days_open > 90)] <- 1
table(enc$sud_in_progress_90days)

table(enc$sud_in_progress_90days)
sud_in_progress_90days <- enc[which(enc$sud_in_progress_90days == 1), ]
dim(sud_in_progress_90days)
sud_in_progress_90days <- nrow(sud_in_progress_90days)
sud_in_progress_90days

sud_in_progress_90days_percent <- percent(sud_in_progress_90days/sud_in_progress, accuracy = 0.1)
sud_in_progress_90days_percent
sud_in_progress_90days_percent[is.na(sud_in_progress_90days_percent)] <- '0.0%'
sud_in_progress_90days_percent



table(enc$sud_eligible_ltc, enc$sud_in_progress)
enc$sud_closed_case[enc$sud_eligible_ltc == 1 &
                      is.na(enc$sud_in_progress)] <- 1
table(enc$sud_closed_case)

table(enc$sud_closed_case)
sud_closed_case <- enc[which(enc$sud_closed_case == 1), ]
dim(sud_closed_case)
sud_closed_case <- nrow(sud_closed_case)
sud_closed_case

sud_closed_case_percent <- percent(sud_closed_case/sud_eligible_ltc, accuracy = 0.1)
sud_closed_case_percent
sud_closed_case_percent[is.na(sud_closed_case_percent)] <- '0.0%'
sud_closed_case_percent


# sud Cases Linked to Care
table(enc$sud_closed_case, enc$ltc_sud_final_ltc_status)
enc$sud_linked[enc$sud_closed_case == 1 &
                 enc$ltc_sud_final_ltc_status == 1] <- 1
table(enc$sud_linked)

table(enc$sud_linked)
sud_linked <- enc[which(enc$sud_linked == 1), ]
dim(sud_linked)
sud_linked <- nrow(sud_linked)
sud_linked

sud_linked_percent <- percent(sud_linked/sud_closed_case, accuracy = 0.1)
sud_linked_percent
sud_linked_percent[is.na(sud_linked_percent)] <- '0.0%'
sud_linked_percent



enc$sud_not_linked[enc$sud_eligible_ltc == 1 & is.na(enc$sud_in_progress) & is.na(enc$sud_linked)] <- 1
table(enc$sud_not_linked)

table(enc$sud_not_linked)
sud_not_linked <- enc[which(enc$sud_not_linked == 1), ]
dim(sud_not_linked)
sud_not_linked <- nrow(sud_not_linked)
sud_not_linked

sud_not_linked_percent <- percent(sud_not_linked/sud_closed_case, accuracy = 0.1)
sud_not_linked_percent
sud_not_linked_percent[is.na(sud_not_linked_percent)] <- '0.0%'
sud_not_linked_percent



# sud Reasons Not Linked to Care
enc$sud_not_linked_med_staff[(enc$sud_closed_case == 1 & is.na(enc$sud_linked)) &
                               (enc$ltc_sud_prevented_rsn___1 == 1 |
                                  enc$ltc_sud_prevented_rsn___2 == 1 |
                                  enc$ltc_sud_prevented_rsn___11 == 1)] <- 1
table(enc$sud_not_linked_med_staff)

table(enc$sud_not_linked_med_staff)
sud_not_linked_med_staff <- enc[which(enc$sud_not_linked_med_staff == 1), ]
dim(sud_not_linked_med_staff)
sud_not_linked_med_staff <- nrow(sud_not_linked_med_staff)
sud_not_linked_med_staff

sud_not_linked_med_staff_percent <- percent(sud_not_linked_med_staff/sud_not_linked, accuracy = 0.1)
sud_not_linked_med_staff_percent
sud_not_linked_med_staff_percent[is.na(sud_not_linked_med_staff_percent)] <- '0.0%'
sud_not_linked_med_staff_percent



enc$sud_not_linked_family[(enc$sud_closed_case == 1 & is.na(enc$sud_linked)) &
                            (enc$ltc_sud_prevented_rsn___3 == 1)] <- 1
table(enc$sud_not_linked_family)

table(enc$sud_not_linked_family)
sud_not_linked_family <- enc[which(enc$sud_not_linked_family == 1), ]
dim(sud_not_linked_family)
sud_not_linked_family <- nrow(sud_not_linked_family)
sud_not_linked_family

sud_not_linked_family_percent <- percent(sud_not_linked_family/sud_not_linked, accuracy = 0.1)
sud_not_linked_family_percent
sud_not_linked_family_percent[is.na(sud_not_linked_family_percent)] <- '0.0%'
sud_not_linked_family_percent



enc$sud_not_linked_not_talking[(enc$sud_closed_case == 1 & is.na(enc$sud_linked)) &
                                 (enc$ltc_sud_prevented_rsn___4 == 1)] <- 1
table(enc$sud_not_linked_not_talking)

table(enc$sud_not_linked_not_talking)
sud_not_linked_not_talking <- enc[which(enc$sud_not_linked_not_talking == 1), ]
dim(sud_not_linked_not_talking)
sud_not_linked_not_talking <- nrow(sud_not_linked_not_talking)
sud_not_linked_not_talking

sud_not_linked_not_talking_percent <- percent(sud_not_linked_not_talking/sud_not_linked, accuracy = 0.1)
sud_not_linked_not_talking_percent
sud_not_linked_not_talking_percent[is.na(sud_not_linked_not_talking_percent)] <- '0.0%'
sud_not_linked_not_talking_percent



enc$sud_not_linked_safety[(enc$sud_closed_case == 1 & is.na(enc$sud_linked)) &
                            (enc$ltc_sud_prevented_rsn___5 == 1)] <- 1
table(enc$sud_not_linked_safety)

table(enc$sud_not_linked_safety)
sud_not_linked_safety <- enc[which(enc$sud_not_linked_safety == 1), ]
dim(sud_not_linked_safety)
sud_not_linked_safety <- nrow(sud_not_linked_safety)
sud_not_linked_safety

sud_not_linked_safety_percent <- percent(sud_not_linked_safety/sud_not_linked, accuracy = 0.1)
sud_not_linked_safety_percent
sud_not_linked_safety_percent[is.na(sud_not_linked_safety_percent)] <- '0.0%'
sud_not_linked_safety_percent



enc$sud_not_linked_medical[(enc$sud_closed_case == 1 & is.na(enc$sud_linked)) &
                             (enc$ltc_sud_prevented_rsn___6 == 1 |
                                enc$ltc_sud_prevented_rsn___8)] <- 1
table(enc$sud_not_linked_medical)

table(enc$sud_not_linked_medical)
sud_not_linked_medical <- enc[which(enc$sud_not_linked_medical == 1), ]
dim(sud_not_linked_medical)
sud_not_linked_medical <- nrow(sud_not_linked_medical)
sud_not_linked_medical

sud_not_linked_medical_percent <- percent(sud_not_linked_medical/sud_not_linked, accuracy = 0.1)
sud_not_linked_medical_percent
sud_not_linked_medical_percent[is.na(sud_not_linked_medical_percent)] <- '0.0%'
sud_not_linked_medical_percent



enc$sud_not_linked_contact[(enc$sud_closed_case == 1 & is.na(enc$sud_linked)) &
                             (enc$ltc_sud_prevented_rsn___20 == 1)] <- 1
table(enc$sud_not_linked_contact)

table(enc$sud_not_linked_contact)
sud_not_linked_contact <- enc[which(enc$sud_not_linked_contact == 1), ]
dim(sud_not_linked_contact)
sud_not_linked_contact <- nrow(sud_not_linked_contact)
sud_not_linked_contact

sud_not_linked_contact_percent <- percent(sud_not_linked_contact/sud_not_linked, accuracy = 0.1)
sud_not_linked_contact_percent
sud_not_linked_contact_percent[is.na(sud_not_linked_contact_percent)] <- '0.0%'
sud_not_linked_contact_percent



enc$sud_not_linked_language[(enc$sud_closed_case == 1 & is.na(enc$sud_linked)) &
                              (enc$ltc_sud_prevented_rsn___9 == 1)] <- 1
table(enc$sud_not_linked_language)

table(enc$sud_not_linked_language)
sud_not_linked_language <- enc[which(enc$sud_not_linked_language == 1), ]
dim(sud_not_linked_language)
sud_not_linked_language <- nrow(sud_not_linked_language)
sud_not_linked_language

sud_not_linked_language_percent <- percent(sud_not_linked_language/sud_not_linked, accuracy = 0.1)
sud_not_linked_language_percent
sud_not_linked_language_percent[is.na(sud_not_linked_language_percent)] <- '0.0%'
sud_not_linked_language_percent



enc$sud_not_linked_other[(enc$sud_closed_case == 1 & is.na(enc$sud_linked)) &
                           (enc$ltc_sud_prevented_rsn___0 == 1)] <- 1
table(enc$sud_not_linked_other)

table(enc$sud_not_linked_other)
sud_not_linked_other <- enc[which(enc$sud_not_linked_other == 1), ]
dim(sud_not_linked_other)
sud_not_linked_other <- nrow(sud_not_linked_other)
sud_not_linked_other

sud_not_linked_other_percent <- percent(sud_not_linked_other/sud_not_linked, accuracy = 0.1)
sud_not_linked_other_percent
sud_not_linked_other_percent[is.na(sud_not_linked_other_percent)] <- '0.0%'
sud_not_linked_other_percent


###############  HT Linkage  ###############

enc$ht_ltc_cases[enc$ltc_coordinator_per_case___71 == 1 &
                   enc$additional_services___9 == 1] <- 1
table(enc$ht_ltc_cases)
ht_ltc_cases <- enc[which(enc$ht_ltc_cases == 1), ]
ht_ltc_cases <- nrow(ht_ltc_cases)
ht_ltc_cases

ht_ltc_cases_percent <- percent(ht_ltc_cases/ltc_cases, accuracy = 0.1)
ht_ltc_cases_percent
ht_ltc_cases_percent[is.na(ht_ltc_cases_percent)] <- '0.0%'
ht_ltc_cases_percent


# Ineligible HT Linkage - Already Linked
table(enc$ltc_ht_declined_rsn___23)
enc$ht_already_linked[enc$ht_ltc_cases == 1 &
                        (enc$ltc_ht_declined_rsn___23 == 1)] <- 1
table(enc$ht_already_linked)

table(enc$ht_already_linked)
ht_already_linked <- enc[which(enc$ht_already_linked == 1), ]
dim(ht_already_linked)
ht_already_linked <- nrow(ht_already_linked)
ht_already_linked


# Ineligible HT Linkage - Deceased
table(enc$ltc_ht_declined_rsn___35)
table(enc$ltc_ht_prevented_rsn___17)
enc$ht_deceased[enc$ht_ltc_cases == 1 &
                  (enc$ltc_ht_declined_rsn___35 == 1 |
                     enc$ltc_ht_prevented_rsn___17 == 1)] <- 1
table(enc$ht_deceased)

table(enc$ht_deceased)
ht_deceased <- enc[which(enc$ht_deceased == 1), ]
dim(ht_deceased)
ht_deceased <- nrow(ht_deceased)
ht_deceased


# Ineligible HT Linkage - Incarcerated
table(enc$ltc_ht_prevented_rsn___12)
enc$ht_incarcerated[enc$ht_ltc_cases == 1 &
                      enc$ltc_ht_prevented_rsn___12 == 1] <- 1
table(enc$ht_incarcerated)

table(enc$ht_incarcerated)
ht_incarcerated <- enc[which(enc$ht_incarcerated == 1), ]
dim(ht_incarcerated)
ht_incarcerated <- nrow(ht_incarcerated)
ht_incarcerated


# Ineligible HT Linkage - Declined Linkage Service
table(enc$ltc_ht_final_ltc_status)
enc$ht_linkage_declined[(enc$ht_ltc_cases == 1 &
                           enc$ltc_ht_final_ltc_status == 2) &
                          (is.na(enc$ht_already_linked) &
                             is.na(enc$ht_deceased) &
                             is.na(enc$ht_incarcerated))] <- 1
table(enc$ht_linkage_declined)

table(enc$ht_linkage_declined)
ht_linkage_declined <- enc[which(enc$ht_linkage_declined == 1), ]
dim(ht_linkage_declined)
ht_linkage_declined <- nrow(ht_linkage_declined)
ht_linkage_declined


# Ineligible HT Linkage - Linkage in Progress
table(enc$ltc_ht_prevented_rsn___18)
enc$ht_ongoing_linkage[enc$ht_ltc_cases == 1 &
                         enc$ltc_ht_prevented_rsn___18 == 1] <- 1
table(enc$ht_ongoing_linkage)

table(enc$ht_ongoing_linkage)
ht_ongoing_linkage <- enc[which(enc$ht_ongoing_linkage == 1), ]
dim(ht_ongoing_linkage)
ht_ongoing_linkage <- nrow(ht_ongoing_linkage)
ht_ongoing_linkage


# HT Ineligible Cases
enc$ht_ineligible_ltc[enc$ht_already_linked == 1 |
                        enc$ht_deceased == 1 |
                        enc$ht_incarcerated == 1 |
                        enc$ht_linkage_declined == 1 |
                        enc$ht_ongoing_linkage == 1] <- 1
table(enc$ht_ineligible_ltc)

table(enc$ht_ineligible_ltc)
ht_ineligible_ltc <- enc[which(enc$ht_ineligible_ltc == 1), ]
dim(ht_ineligible_ltc)
ht_ineligible_ltc <- nrow(ht_ineligible_ltc)
ht_ineligible_ltc

ht_ineligible_ltc_percent <- percent(ht_ineligible_ltc/ht_ltc_cases, accuracy = 0.1)
ht_ineligible_ltc_percent
ht_ineligible_ltc_percent[is.na(ht_ineligible_ltc_percent)] <- '0.0%'
ht_ineligible_ltc_percent

ht_already_linked_percent <- percent(ht_already_linked/ht_ineligible_ltc, accuracy = 0.1)
ht_already_linked_percent
ht_already_linked_percent[is.na(ht_already_linked_percent)] <- '0.0%'
ht_already_linked_percent

ht_deceased_percent <- percent(ht_deceased/ht_ineligible_ltc, accuracy = 0.1)
ht_deceased_percent
ht_deceased_percent[is.na(ht_deceased_percent)] <- '0.0%'
ht_deceased_percent

ht_incarcerated_percent <- percent(ht_incarcerated/ht_ineligible_ltc, accuracy = 0.1)
ht_incarcerated_percent
ht_incarcerated_percent[is.na(ht_incarcerated_percent)] <- '0.0%'
ht_incarcerated_percent

ht_linkage_declined_percent <- percent(ht_linkage_declined/ht_ineligible_ltc, accuracy = 0.1)
ht_linkage_declined_percent
ht_linkage_declined_percent[is.na(ht_linkage_declined_percent)] <- '0.0%'
ht_linkage_declined_percent

ht_ongoing_linkage_percent <- percent(ht_ongoing_linkage/ht_ineligible_ltc, accuracy = 0.1)
ht_ongoing_linkage_percent
ht_ongoing_linkage_percent[is.na(ht_ongoing_linkage_percent)] <- '0.0%'
ht_ongoing_linkage_percent


# HT Eligibility to be Linked
enc$ht_eligible_ltc[enc$ht_ltc_cases == 1 &
                      (is.na(enc$ht_already_linked) &
                         is.na(enc$ht_deceased) &
                         is.na(enc$ht_incarcerated) &
                         is.na(enc$ht_linkage_declined) &
                         is.na(enc$ht_ongoing_linkage))] <- 1
table(enc$ht_eligible_ltc)

table(enc$ht_eligible_ltc)
ht_eligible_ltc <- enc[which(enc$ht_eligible_ltc == 1), ]
dim(ht_eligible_ltc)
ht_eligible_ltc <- nrow(ht_eligible_ltc)
ht_eligible_ltc

ht_eligible_ltc_percent <- percent(ht_eligible_ltc/ht_ltc_cases, accuracy = 0.1)
ht_eligible_ltc_percent
ht_eligible_ltc_percent[is.na(ht_eligible_ltc_percent)] <- '0.0%'
ht_eligible_ltc_percent


# HT Open/Closed Cases
table(enc$ltc_ht_open_case_calc)
enc$ht_in_progress[enc$ht_eligible_ltc == 1 &
                     enc$ltc_ht_open_case_calc == 1] <- 1
table(enc$ht_in_progress)

table(enc$ht_in_progress)
ht_in_progress <- enc[which(enc$ht_in_progress == 1), ]
dim(ht_in_progress)
ht_in_progress <- nrow(ht_in_progress)
ht_in_progress

ht_in_progress_percent <- percent(ht_in_progress/ht_eligible_ltc, accuracy = 0.1)
ht_in_progress_percent
ht_in_progress_percent[is.na(ht_in_progress_percent)] <- '0.0%'
ht_in_progress_percent



table(enc$ht_in_progress)
enc$ht_ltc_cases_days_open <- difftime(Sys.Date(), enc$enc_date, units="days")
table(enc$ht_ltc_cases_days_open)
enc$ht_in_progress_90days[enc$ht_in_progress == 1 &
                            (enc$ht_ltc_cases_days_open > 90)] <- 1
table(enc$ht_in_progress_90days)

table(enc$ht_in_progress_90days)
ht_in_progress_90days <- enc[which(enc$ht_in_progress_90days == 1), ]
dim(ht_in_progress_90days)
ht_in_progress_90days <- nrow(ht_in_progress_90days)
ht_in_progress_90days

ht_in_progress_90days_percent <- percent(ht_in_progress_90days/ht_in_progress, accuracy = 0.1)
ht_in_progress_90days_percent
ht_in_progress_90days_percent[is.na(ht_in_progress_90days_percent)] <- '0.0%'
ht_in_progress_90days_percent



table(enc$ht_eligible_ltc, enc$ht_in_progress)
enc$ht_closed_case[enc$ht_eligible_ltc == 1 &
                     is.na(enc$ht_in_progress)] <- 1
table(enc$ht_closed_case)

table(enc$ht_closed_case)
ht_closed_case <- enc[which(enc$ht_closed_case == 1), ]
dim(ht_closed_case)
ht_closed_case <- nrow(ht_closed_case)
ht_closed_case

ht_closed_case_percent <- percent(ht_closed_case/ht_eligible_ltc, accuracy = 0.1)
ht_closed_case_percent
ht_closed_case_percent[is.na(ht_closed_case_percent)] <- '0.0%'
ht_closed_case_percent


# HT Cases Linked to Care
table(enc$ht_closed_case, enc$ltc_ht_final_ltc_status)
enc$ht_linked[enc$ht_closed_case == 1 &
                enc$ltc_ht_final_ltc_status == 1] <- 1
table(enc$ht_linked)

table(enc$ht_linked)
ht_linked <- enc[which(enc$ht_linked == 1), ]
dim(ht_linked)
ht_linked <- nrow(ht_linked)
ht_linked

ht_linked_percent <- percent(ht_linked/ht_closed_case, accuracy = 0.1)
ht_linked_percent
ht_linked_percent[is.na(ht_linked_percent)] <- '0.0%'
ht_linked_percent



enc$ht_not_linked[enc$ht_eligible_ltc == 1 & is.na(enc$ht_in_progress) & is.na(enc$ht_linked)] <- 1
table(enc$ht_not_linked)

table(enc$ht_not_linked)
ht_not_linked <- enc[which(enc$ht_not_linked == 1), ]
dim(ht_not_linked)
ht_not_linked <- nrow(ht_not_linked)
ht_not_linked

ht_not_linked_percent <- percent(ht_not_linked/ht_closed_case, accuracy = 0.1)
ht_not_linked_percent
ht_not_linked_percent[is.na(ht_not_linked_percent)] <- '0.0%'
ht_not_linked_percent



# HT Reasons Not Linked to Care
enc$ht_not_linked_med_staff[(enc$ht_closed_case == 1 & is.na(enc$ht_linked)) &
                              (enc$ltc_ht_prevented_rsn___1 == 1 |
                                 enc$ltc_ht_prevented_rsn___2 == 1 |
                                 enc$ltc_ht_prevented_rsn___11 == 1)] <- 1
table(enc$ht_not_linked_med_staff)

table(enc$ht_not_linked_med_staff)
ht_not_linked_med_staff <- enc[which(enc$ht_not_linked_med_staff == 1), ]
dim(ht_not_linked_med_staff)
ht_not_linked_med_staff <- nrow(ht_not_linked_med_staff)
ht_not_linked_med_staff

ht_not_linked_med_staff_percent <- percent(ht_not_linked_med_staff/ht_not_linked, accuracy = 0.1)
ht_not_linked_med_staff_percent
ht_not_linked_med_staff_percent[is.na(ht_not_linked_med_staff_percent)] <- '0.0%'
ht_not_linked_med_staff_percent


enc$ht_not_linked_family[(enc$ht_closed_case == 1 & is.na(enc$ht_linked)) &
                           (enc$ltc_ht_prevented_rsn___3 == 1)] <- 1
table(enc$ht_not_linked_family)

table(enc$ht_not_linked_family)
ht_not_linked_family <- enc[which(enc$ht_not_linked_family == 1), ]
dim(ht_not_linked_family)
ht_not_linked_family <- nrow(ht_not_linked_family)
ht_not_linked_family

ht_not_linked_family_percent <- percent(ht_not_linked_family/ht_not_linked, accuracy = 0.1)
ht_not_linked_family_percent
ht_not_linked_family_percent[is.na(ht_not_linked_family_percent)] <- '0.0%'
ht_not_linked_family_percent



enc$ht_not_linked_not_talking[(enc$ht_closed_case == 1 & is.na(enc$ht_linked)) &
                                (enc$ltc_ht_prevented_rsn___4 == 1)] <- 1
table(enc$ht_not_linked_not_talking)

table(enc$ht_not_linked_not_talking)
ht_not_linked_not_talking <- enc[which(enc$ht_not_linked_not_talking == 1), ]
dim(ht_not_linked_not_talking)
ht_not_linked_not_talking <- nrow(ht_not_linked_not_talking)
ht_not_linked_not_talking

ht_not_linked_not_talking_percent <- percent(ht_not_linked_not_talking/ht_not_linked, accuracy = 0.1)
ht_not_linked_not_talking_percent
ht_not_linked_not_talking_percent[is.na(ht_not_linked_not_talking_percent)] <- '0.0%'
ht_not_linked_not_talking_percent



enc$ht_not_linked_safety[(enc$ht_closed_case == 1 & is.na(enc$ht_linked)) &
                           (enc$ltc_ht_prevented_rsn___5 == 1)] <- 1
table(enc$ht_not_linked_safety)

table(enc$ht_not_linked_safety)
ht_not_linked_safety <- enc[which(enc$ht_not_linked_safety == 1), ]
dim(ht_not_linked_safety)
ht_not_linked_safety <- nrow(ht_not_linked_safety)
ht_not_linked_safety

ht_not_linked_safety_percent <- percent(ht_not_linked_safety/ht_not_linked, accuracy = 0.1)
ht_not_linked_safety_percent
ht_not_linked_safety_percent[is.na(ht_not_linked_safety_percent)] <- '0.0%'
ht_not_linked_safety_percent



enc$ht_not_linked_medical[(enc$ht_closed_case == 1 & is.na(enc$ht_linked)) &
                            (enc$ltc_ht_prevented_rsn___6 == 1 |
                               enc$ltc_ht_prevented_rsn___8)] <- 1
table(enc$ht_not_linked_medical)

table(enc$ht_not_linked_medical)
ht_not_linked_medical <- enc[which(enc$ht_not_linked_medical == 1), ]
dim(ht_not_linked_medical)
ht_not_linked_medical <- nrow(ht_not_linked_medical)
ht_not_linked_medical

ht_not_linked_medical_percent <- percent(ht_not_linked_medical/ht_not_linked, accuracy = 0.1)
ht_not_linked_medical_percent
ht_not_linked_medical_percent[is.na(ht_not_linked_medical_percent)] <- '0.0%'
ht_not_linked_medical_percent



enc$ht_not_linked_contact[(enc$ht_closed_case == 1 & is.na(enc$ht_linked)) &
                            (enc$ltc_ht_prevented_rsn___20 == 1)] <- 1
table(enc$ht_not_linked_contact)

table(enc$ht_not_linked_contact)
ht_not_linked_contact <- enc[which(enc$ht_not_linked_contact == 1), ]
dim(ht_not_linked_contact)
ht_not_linked_contact <- nrow(ht_not_linked_contact)
ht_not_linked_contact

ht_not_linked_contact_percent <- percent(ht_not_linked_contact/ht_not_linked, accuracy = 0.1)
ht_not_linked_contact_percent
ht_not_linked_contact_percent[is.na(ht_not_linked_contact_percent)] <- '0.0%'
ht_not_linked_contact_percent



enc$ht_not_linked_language[(enc$ht_closed_case == 1 & is.na(enc$ht_linked)) &
                             (enc$ltc_ht_prevented_rsn___9 == 1)] <- 1
table(enc$ht_not_linked_language)

table(enc$ht_not_linked_language)
ht_not_linked_language <- enc[which(enc$ht_not_linked_language == 1), ]
dim(ht_not_linked_language)
ht_not_linked_language <- nrow(ht_not_linked_language)
ht_not_linked_language

ht_not_linked_language_percent <- percent(ht_not_linked_language/ht_not_linked, accuracy = 0.1)
ht_not_linked_language_percent
ht_not_linked_language_percent[is.na(ht_not_linked_language_percent)] <- '0.0%'
ht_not_linked_language_percent



enc$ht_not_linked_other[(enc$ht_closed_case == 1 & is.na(enc$ht_linked)) &
                          (enc$ltc_ht_prevented_rsn___0 == 1)] <- 1
table(enc$ht_not_linked_other)

table(enc$ht_not_linked_other)
ht_not_linked_other <- enc[which(enc$ht_not_linked_other == 1), ]
dim(ht_not_linked_other)
ht_not_linked_other <- nrow(ht_not_linked_other)
ht_not_linked_other

ht_not_linked_other_percent <- percent(ht_not_linked_other/ht_not_linked, accuracy = 0.1)
ht_not_linked_other_percent
ht_not_linked_other_percent[is.na(ht_not_linked_other_percent)] <- '0.0%'
ht_not_linked_other_percent


###############  mh Linkage  ###############

enc$mh_ltc_cases[enc$ltc_coordinator_per_case___71 == 1 &
                   enc$additional_services___1 == 1] <- 1
table(enc$mh_ltc_cases)
mh_ltc_cases <- enc[which(enc$mh_ltc_cases == 1), ]
mh_ltc_cases <- nrow(mh_ltc_cases)
mh_ltc_cases

mh_ltc_cases_percent <- percent(mh_ltc_cases/ltc_cases, accuracy = 0.1)
mh_ltc_cases_percent
mh_ltc_cases_percent[is.na(mh_ltc_cases_percent)] <- '0.0%'
mh_ltc_cases_percent


# Ineligible mh Linkage - Already Linked
table(enc$ltc_mh_declined_rsn___23)
enc$mh_already_linked[enc$mh_ltc_cases == 1 &
                        (enc$ltc_mh_declined_rsn___23 == 1)] <- 1
table(enc$mh_already_linked)

table(enc$mh_already_linked)
mh_already_linked <- enc[which(enc$mh_already_linked == 1), ]
dim(mh_already_linked)
mh_already_linked <- nrow(mh_already_linked)
mh_already_linked


# Ineligible mh Linkage - Deceased
table(enc$ltc_mh_declined_rsn___35)
table(enc$ltc_mh_prevented_rsn___17)
enc$mh_deceased[enc$mh_ltc_cases == 1 &
                  (enc$ltc_mh_declined_rsn___35 == 1 |
                     enc$ltc_mh_prevented_rsn___17 == 1)] <- 1
table(enc$mh_deceased)

table(enc$mh_deceased)
mh_deceased <- enc[which(enc$mh_deceased == 1), ]
dim(mh_deceased)
mh_deceased <- nrow(mh_deceased)
mh_deceased


# Ineligible mh Linkage - Incarcerated
table(enc$ltc_mh_prevented_rsn___12)
enc$mh_incarcerated[enc$mh_ltc_cases == 1 &
                      enc$ltc_mh_prevented_rsn___12 == 1] <- 1
table(enc$mh_incarcerated)

table(enc$mh_incarcerated)
mh_incarcerated <- enc[which(enc$mh_incarcerated == 1), ]
dim(mh_incarcerated)
mh_incarcerated <- nrow(mh_incarcerated)
mh_incarcerated


# Ineligible mh Linkage - Declined Linkage Service
table(enc$ltc_mh_final_ltc_status)
enc$mh_linkage_declined[(enc$mh_ltc_cases == 1 &
                           enc$ltc_mh_final_ltc_status == 2) &
                          (is.na(enc$mh_already_linked) &
                             is.na(enc$mh_deceased) &
                             is.na(enc$mh_incarcerated))] <- 1
table(enc$mh_linkage_declined)

table(enc$mh_linkage_declined)
mh_linkage_declined <- enc[which(enc$mh_linkage_declined == 1), ]
dim(mh_linkage_declined)
mh_linkage_declined <- nrow(mh_linkage_declined)
mh_linkage_declined


# Ineligible mh Linkage - Linkage in Progress
table(enc$ltc_mh_prevented_rsn___18)
enc$mh_ongoing_linkage[enc$mh_ltc_cases == 1 &
                         enc$ltc_mh_prevented_rsn___18 == 1] <- 1
table(enc$mh_ongoing_linkage)

table(enc$mh_ongoing_linkage)
mh_ongoing_linkage <- enc[which(enc$mh_ongoing_linkage == 1), ]
dim(mh_ongoing_linkage)
mh_ongoing_linkage <- nrow(mh_ongoing_linkage)
mh_ongoing_linkage


# mh Ineligible Cases
enc$mh_ineligible_ltc[enc$mh_already_linked == 1 |
                        enc$mh_deceased == 1 |
                        enc$mh_incarcerated == 1 |
                        enc$mh_linkage_declined == 1 |
                        enc$mh_ongoing_linkage == 1] <- 1
table(enc$mh_ineligible_ltc)

table(enc$mh_ineligible_ltc)
mh_ineligible_ltc <- enc[which(enc$mh_ineligible_ltc == 1), ]
dim(mh_ineligible_ltc)
mh_ineligible_ltc <- nrow(mh_ineligible_ltc)
mh_ineligible_ltc

mh_ineligible_ltc_percent <- percent(mh_ineligible_ltc/mh_ltc_cases, accuracy = 0.1)
mh_ineligible_ltc_percent
mh_ineligible_ltc_percent[is.na(mh_ineligible_ltc_percent)] <- '0.0%'
mh_ineligible_ltc_percent

mh_already_linked_percent <- percent(mh_already_linked/mh_ineligible_ltc, accuracy = 0.1)
mh_already_linked_percent
mh_already_linked_percent[is.na(mh_already_linked_percent)] <- '0.0%'
mh_already_linked_percent

mh_deceased_percent <- percent(mh_deceased/mh_ineligible_ltc, accuracy = 0.1)
mh_deceased_percent
mh_deceased_percent[is.na(mh_deceased_percent)] <- '0.0%'
mh_deceased_percent

mh_incarcerated_percent <- percent(mh_incarcerated/mh_ineligible_ltc, accuracy = 0.1)
mh_incarcerated_percent
mh_incarcerated_percent[is.na(mh_incarcerated_percent)] <- '0.0%'
mh_incarcerated_percent

mh_linkage_declined_percent <- percent(mh_linkage_declined/mh_ineligible_ltc, accuracy = 0.1)
mh_linkage_declined_percent
mh_linkage_declined_percent[is.na(mh_linkage_declined_percent)] <- '0.0%'
mh_linkage_declined_percent

mh_ongoing_linkage_percent <- percent(mh_ongoing_linkage/mh_ineligible_ltc, accuracy = 0.1)
mh_ongoing_linkage_percent
mh_ongoing_linkage_percent[is.na(mh_ongoing_linkage_percent)] <- '0.0%'
mh_ongoing_linkage_percent


# mh Eligibility to be Linked
enc$mh_eligible_ltc[enc$mh_ltc_cases == 1 &
                      (is.na(enc$mh_already_linked) &
                         is.na(enc$mh_deceased) &
                         is.na(enc$mh_incarcerated) &
                         is.na(enc$mh_linkage_declined) &
                         is.na(enc$mh_ongoing_linkage))] <- 1
table(enc$mh_eligible_ltc)

table(enc$mh_eligible_ltc)
mh_eligible_ltc <- enc[which(enc$mh_eligible_ltc == 1), ]
dim(mh_eligible_ltc)
mh_eligible_ltc <- nrow(mh_eligible_ltc)
mh_eligible_ltc

mh_eligible_ltc_percent <- percent(mh_eligible_ltc/mh_ltc_cases, accuracy = 0.1)
mh_eligible_ltc_percent
mh_eligible_ltc_percent[is.na(mh_eligible_ltc_percent)] <- '0.0%'
mh_eligible_ltc_percent


# mh Open/Closed Cases
table(enc$ltc_mh_open_case_calc)
enc$mh_in_progress[enc$mh_eligible_ltc == 1 &
                     enc$ltc_mh_open_case_calc == 1] <- 1
table(enc$mh_in_progress)

table(enc$mh_in_progress)
mh_in_progress <- enc[which(enc$mh_in_progress == 1), ]
dim(mh_in_progress)
mh_in_progress <- nrow(mh_in_progress)
mh_in_progress

mh_in_progress_percent <- percent(mh_in_progress/mh_eligible_ltc, accuracy = 0.1)
mh_in_progress_percent
mh_in_progress_percent[is.na(mh_in_progress_percent)] <- '0.0%'
mh_in_progress_percent



table(enc$mh_in_progress)
enc$mh_ltc_cases_days_open <- difftime(Sys.Date(), enc$enc_date, units="days")
table(enc$mh_ltc_cases_days_open)
enc$mh_in_progress_90days[enc$mh_in_progress == 1 &
                            (enc$mh_ltc_cases_days_open > 90)] <- 1
table(enc$mh_in_progress_90days)

table(enc$mh_in_progress_90days)
mh_in_progress_90days <- enc[which(enc$mh_in_progress_90days == 1), ]
dim(mh_in_progress_90days)
mh_in_progress_90days <- nrow(mh_in_progress_90days)
mh_in_progress_90days

mh_in_progress_90days_percent <- percent(mh_in_progress_90days/mh_in_progress, accuracy = 0.1)
mh_in_progress_90days_percent
mh_in_progress_90days_percent[is.na(mh_in_progress_90days_percent)] <- '0.0%'
mh_in_progress_90days_percent



table(enc$mh_eligible_ltc, enc$mh_in_progress)
enc$mh_closed_case[enc$mh_eligible_ltc == 1 &
                     is.na(enc$mh_in_progress)] <- 1
table(enc$mh_closed_case)

table(enc$mh_closed_case)
mh_closed_case <- enc[which(enc$mh_closed_case == 1), ]
dim(mh_closed_case)
mh_closed_case <- nrow(mh_closed_case)
mh_closed_case

mh_closed_case_percent <- percent(mh_closed_case/mh_eligible_ltc, accuracy = 0.1)
mh_closed_case_percent
mh_closed_case_percent[is.na(mh_closed_case_percent)] <- '0.0%'
mh_closed_case_percent


# mh Cases Linked to Care
table(enc$mh_closed_case, enc$ltc_mh_final_ltc_status)
enc$mh_linked[enc$mh_closed_case == 1 &
                enc$ltc_mh_final_ltc_status == 1] <- 1
table(enc$mh_linked)

table(enc$mh_linked)
mh_linked <- enc[which(enc$mh_linked == 1), ]
dim(mh_linked)
mh_linked <- nrow(mh_linked)
mh_linked

mh_linked_percent <- percent(mh_linked/mh_closed_case, accuracy = 0.1)
mh_linked_percent
mh_linked_percent[is.na(mh_linked_percent)] <- '0.0%'
mh_linked_percent



enc$mh_not_linked[enc$mh_eligible_ltc == 1 & is.na(enc$mh_in_progress) & is.na(enc$mh_linked)] <- 1
table(enc$mh_not_linked)

table(enc$mh_not_linked)
mh_not_linked <- enc[which(enc$mh_not_linked == 1), ]
dim(mh_not_linked)
mh_not_linked <- nrow(mh_not_linked)
mh_not_linked

mh_not_linked_percent <- percent(mh_not_linked/mh_closed_case, accuracy = 0.1)
mh_not_linked_percent
mh_not_linked_percent[is.na(mh_not_linked_percent)] <- '0.0%'
mh_not_linked_percent



# mh Reasons Not Linked to Care
enc$mh_not_linked_med_staff[(enc$mh_closed_case == 1 & is.na(enc$mh_linked)) &
                              (enc$ltc_mh_prevented_rsn___1 == 1 |
                                 enc$ltc_mh_prevented_rsn___2 == 1 |
                                 enc$ltc_mh_prevented_rsn___11 == 1)] <- 1
table(enc$mh_not_linked_med_staff)

table(enc$mh_not_linked_med_staff)
mh_not_linked_med_staff <- enc[which(enc$mh_not_linked_med_staff == 1), ]
dim(mh_not_linked_med_staff)
mh_not_linked_med_staff <- nrow(mh_not_linked_med_staff)
mh_not_linked_med_staff

mh_not_linked_med_staff_percent <- percent(mh_not_linked_med_staff/mh_not_linked, accuracy = 0.1)
mh_not_linked_med_staff_percent
mh_not_linked_med_staff_percent[is.na(mh_not_linked_med_staff_percent)] <- '0.0%'
mh_not_linked_med_staff_percent



enc$mh_not_linked_family[(enc$mh_closed_case == 1 & is.na(enc$mh_linked)) &
                           (enc$ltc_mh_prevented_rsn___3 == 1)] <- 1
table(enc$mh_not_linked_family)

table(enc$mh_not_linked_family)
mh_not_linked_family <- enc[which(enc$mh_not_linked_family == 1), ]
dim(mh_not_linked_family)
mh_not_linked_family <- nrow(mh_not_linked_family)
mh_not_linked_family

mh_not_linked_family_percent <- percent(mh_not_linked_family/mh_not_linked, accuracy = 0.1)
mh_not_linked_family_percent
mh_not_linked_family_percent[is.na(mh_not_linked_family_percent)] <- '0.0%'
mh_not_linked_family_percent



enc$mh_not_linked_not_talking[(enc$mh_closed_case == 1 & is.na(enc$mh_linked)) &
                                (enc$ltc_mh_prevented_rsn___4 == 1)] <- 1
table(enc$mh_not_linked_not_talking)

table(enc$mh_not_linked_not_talking)
mh_not_linked_not_talking <- enc[which(enc$mh_not_linked_not_talking == 1), ]
dim(mh_not_linked_not_talking)
mh_not_linked_not_talking <- nrow(mh_not_linked_not_talking)
mh_not_linked_not_talking

mh_not_linked_not_talking_percent <- percent(mh_not_linked_not_talking/mh_not_linked, accuracy = 0.1)
mh_not_linked_not_talking_percent
mh_not_linked_not_talking_percent[is.na(mh_not_linked_not_talking_percent)] <- '0.0%'
mh_not_linked_not_talking_percent



enc$mh_not_linked_safety[(enc$mh_closed_case == 1 & is.na(enc$mh_linked)) &
                           (enc$ltc_mh_prevented_rsn___5 == 1)] <- 1
table(enc$mh_not_linked_safety)

table(enc$mh_not_linked_safety)
mh_not_linked_safety <- enc[which(enc$mh_not_linked_safety == 1), ]
dim(mh_not_linked_safety)
mh_not_linked_safety <- nrow(mh_not_linked_safety)
mh_not_linked_safety

mh_not_linked_safety_percent <- percent(mh_not_linked_safety/mh_not_linked, accuracy = 0.1)
mh_not_linked_safety_percent
mh_not_linked_safety_percent[is.na(mh_not_linked_safety_percent)] <- '0.0%'
mh_not_linked_safety_percent



enc$mh_not_linked_medical[(enc$mh_closed_case == 1 & is.na(enc$mh_linked)) &
                            (enc$ltc_mh_prevented_rsn___6 == 1 |
                               enc$ltc_mh_prevented_rsn___8)] <- 1
table(enc$mh_not_linked_medical)

table(enc$mh_not_linked_medical)
mh_not_linked_medical <- enc[which(enc$mh_not_linked_medical == 1), ]
dim(mh_not_linked_medical)
mh_not_linked_medical <- nrow(mh_not_linked_medical)
mh_not_linked_medical

mh_not_linked_medical_percent <- percent(mh_not_linked_medical/mh_not_linked, accuracy = 0.1)
mh_not_linked_medical_percent
mh_not_linked_medical_percent[is.na(mh_not_linked_medical_percent)] <- '0.0%'
mh_not_linked_medical_percent



enc$mh_not_linked_contact[(enc$mh_closed_case == 1 & is.na(enc$mh_linked)) &
                            (enc$ltc_mh_prevented_rsn___20 == 1)] <- 1
table(enc$mh_not_linked_contact)

table(enc$mh_not_linked_contact)
mh_not_linked_contact <- enc[which(enc$mh_not_linked_contact == 1), ]
dim(mh_not_linked_contact)
mh_not_linked_contact <- nrow(mh_not_linked_contact)
mh_not_linked_contact

mh_not_linked_contact_percent <- percent(mh_not_linked_contact/mh_not_linked, accuracy = 0.1)
mh_not_linked_contact_percent
mh_not_linked_contact_percent[is.na(mh_not_linked_contact_percent)] <- '0.0%'
mh_not_linked_contact_percent



enc$mh_not_linked_language[(enc$mh_closed_case == 1 & is.na(enc$mh_linked)) &
                             (enc$ltc_mh_prevented_rsn___9 == 1)] <- 1
table(enc$mh_not_linked_language)

table(enc$mh_not_linked_language)
mh_not_linked_language <- enc[which(enc$mh_not_linked_language == 1), ]
dim(mh_not_linked_language)
mh_not_linked_language <- nrow(mh_not_linked_language)
mh_not_linked_language

mh_not_linked_language_percent <- percent(mh_not_linked_language/mh_not_linked, accuracy = 0.1)
mh_not_linked_language_percent
mh_not_linked_language_percent[is.na(mh_not_linked_language_percent)] <- '0.0%'
mh_not_linked_language_percent



enc$mh_not_linked_other[(enc$mh_closed_case == 1 & is.na(enc$mh_linked)) &
                          (enc$ltc_mh_prevented_rsn___0 == 1)] <- 1
table(enc$mh_not_linked_other)

table(enc$mh_not_linked_other)
mh_not_linked_other <- enc[which(enc$mh_not_linked_other == 1), ]
dim(mh_not_linked_other)
mh_not_linked_other <- nrow(mh_not_linked_other)
mh_not_linked_other

mh_not_linked_other_percent <- percent(mh_not_linked_other/mh_not_linked, accuracy = 0.1)
mh_not_linked_other_percent
mh_not_linked_other_percent[is.na(mh_not_linked_other_percent)] <- '0.0%'
mh_not_linked_other_percent


###############  housing Linkage  ###############

enc$housing_ltc_cases[enc$ltc_coordinator_per_case___71 == 1 &
                        enc$additional_services___2 == 1] <- 1
table(enc$housing_ltc_cases)
housing_ltc_cases <- enc[which(enc$housing_ltc_cases == 1), ]
housing_ltc_cases <- nrow(housing_ltc_cases)
housing_ltc_cases

housing_ltc_cases_percent <- percent(housing_ltc_cases/ltc_cases, accuracy = 0.1)
housing_ltc_cases_percent
housing_ltc_cases_percent[is.na(housing_ltc_cases_percent)] <- '0.0%'
housing_ltc_cases_percent


# Ineligible housing Linkage - Already Linked
table(enc$ltc_housing_declined_rsn___23)
enc$housing_already_linked[enc$housing_ltc_cases == 1 &
                             (enc$ltc_housing_declined_rsn___23 == 1)] <- 1
table(enc$housing_already_linked)

table(enc$housing_already_linked)
housing_already_linked <- enc[which(enc$housing_already_linked == 1), ]
dim(housing_already_linked)
housing_already_linked <- nrow(housing_already_linked)
housing_already_linked


# Ineligible housing Linkage - Deceased
table(enc$ltc_housing_declined_rsn___35)
table(enc$ltc_housing_prevented_rsn___17)
enc$housing_deceased[enc$housing_ltc_cases == 1 &
                       (enc$ltc_housing_declined_rsn___35 == 1 |
                          enc$ltc_housing_prevented_rsn___17 == 1)] <- 1
table(enc$housing_deceased)

table(enc$housing_deceased)
housing_deceased <- enc[which(enc$housing_deceased == 1), ]
dim(housing_deceased)
housing_deceased <- nrow(housing_deceased)
housing_deceased


# Ineligible housing Linkage - Incarcerated
table(enc$ltc_housing_prevented_rsn___12)
enc$housing_incarcerated[enc$housing_ltc_cases == 1 &
                           enc$ltc_housing_prevented_rsn___12 == 1] <- 1
table(enc$housing_incarcerated)

table(enc$housing_incarcerated)
housing_incarcerated <- enc[which(enc$housing_incarcerated == 1), ]
dim(housing_incarcerated)
housing_incarcerated <- nrow(housing_incarcerated)
housing_incarcerated


# Ineligible housing Linkage - Declined Linkage Service
table(enc$ltc_housing_final_ltc_status)
enc$housing_linkage_declined[(enc$housing_ltc_cases == 1 &
                                enc$ltc_housing_final_ltc_status == 2) &
                               (is.na(enc$housing_already_linked) &
                                  is.na(enc$housing_deceased) &
                                  is.na(enc$housing_incarcerated))] <- 1
table(enc$housing_linkage_declined)

table(enc$housing_linkage_declined)
housing_linkage_declined <- enc[which(enc$housing_linkage_declined == 1), ]
dim(housing_linkage_declined)
housing_linkage_declined <- nrow(housing_linkage_declined)
housing_linkage_declined


# Ineligible housing Linkage - Linkage in Progress
table(enc$ltc_housing_prevented_rsn___18)
enc$housing_ongoing_linkage[enc$housing_ltc_cases == 1 &
                              enc$ltc_housing_prevented_rsn___18 == 1] <- 1
table(enc$housing_ongoing_linkage)

table(enc$housing_ongoing_linkage)
housing_ongoing_linkage <- enc[which(enc$housing_ongoing_linkage == 1), ]
dim(housing_ongoing_linkage)
housing_ongoing_linkage <- nrow(housing_ongoing_linkage)
housing_ongoing_linkage


# housing Ineligible Cases
enc$housing_ineligible_ltc[enc$housing_already_linked == 1 |
                             enc$housing_deceased == 1 |
                             enc$housing_incarcerated == 1 |
                             enc$housing_linkage_declined == 1 |
                             enc$housing_ongoing_linkage == 1] <- 1
table(enc$housing_ineligible_ltc)

table(enc$housing_ineligible_ltc)
housing_ineligible_ltc <- enc[which(enc$housing_ineligible_ltc == 1), ]
dim(housing_ineligible_ltc)
housing_ineligible_ltc <- nrow(housing_ineligible_ltc)
housing_ineligible_ltc

housing_ineligible_ltc_percent <- percent(housing_ineligible_ltc/housing_ltc_cases, accuracy = 0.1)
housing_ineligible_ltc_percent
housing_ineligible_ltc_percent[is.na(housing_ineligible_ltc_percent)] <- '0.0%'
housing_ineligible_ltc_percent

housing_already_linked_percent <- percent(housing_already_linked/housing_ineligible_ltc, accuracy = 0.1)
housing_already_linked_percent
housing_already_linked_percent[is.na(housing_already_linked_percent)] <- '0.0%'
housing_already_linked_percent

housing_deceased_percent <- percent(housing_deceased/housing_ineligible_ltc, accuracy = 0.1)
housing_deceased_percent
housing_deceased_percent[is.na(housing_deceased_percent)] <- '0.0%'
housing_deceased_percent

housing_incarcerated_percent <- percent(housing_incarcerated/housing_ineligible_ltc, accuracy = 0.1)
housing_incarcerated_percent
housing_incarcerated_percent[is.na(housing_incarcerated_percent)] <- '0.0%'
housing_incarcerated_percent

housing_linkage_declined_percent <- percent(housing_linkage_declined/housing_ineligible_ltc, accuracy = 0.1)
housing_linkage_declined_percent
housing_linkage_declined_percent[is.na(housing_linkage_declined_percent)] <- '0.0%'
housing_linkage_declined_percent

housing_ongoing_linkage_percent <- percent(housing_ongoing_linkage/housing_ineligible_ltc, accuracy = 0.1)
housing_ongoing_linkage_percent
housing_ongoing_linkage_percent[is.na(housing_ongoing_linkage_percent)] <- '0.0%'
housing_ongoing_linkage_percent


# housing Eligibility to be Linked
enc$housing_eligible_ltc[enc$housing_ltc_cases == 1 &
                           (is.na(enc$housing_already_linked) &
                              is.na(enc$housing_deceased) &
                              is.na(enc$housing_incarcerated) &
                              is.na(enc$housing_linkage_declined) &
                              is.na(enc$housing_ongoing_linkage))] <- 1
table(enc$housing_eligible_ltc)

table(enc$housing_eligible_ltc)
housing_eligible_ltc <- enc[which(enc$housing_eligible_ltc == 1), ]
dim(housing_eligible_ltc)
housing_eligible_ltc <- nrow(housing_eligible_ltc)
housing_eligible_ltc

housing_eligible_ltc_percent <- percent(housing_eligible_ltc/housing_ltc_cases, accuracy = 0.1)
housing_eligible_ltc_percent
housing_eligible_ltc_percent[is.na(housing_eligible_ltc_percent)] <- '0.0%'
housing_eligible_ltc_percent


# housing Open/Closed Cases
table(enc$ltc_housing_open_case_calc)
enc$housing_in_progress[enc$housing_eligible_ltc == 1 &
                          enc$ltc_housing_open_case_calc == 1] <- 1
table(enc$housing_in_progress)

table(enc$housing_in_progress)
housing_in_progress <- enc[which(enc$housing_in_progress == 1), ]
dim(housing_in_progress)
housing_in_progress <- nrow(housing_in_progress)
housing_in_progress

housing_in_progress_percent <- percent(housing_in_progress/housing_eligible_ltc, accuracy = 0.1)
housing_in_progress_percent
housing_in_progress_percent[is.na(housing_in_progress_percent)] <- '0.0%'
housing_in_progress_percent



table(enc$housing_in_progress)
enc$housing_ltc_cases_days_open <- difftime(Sys.Date(), enc$enc_date, units="days")
table(enc$housing_ltc_cases_days_open)
enc$housing_in_progress_90days[enc$housing_in_progress == 1 &
                                 (enc$housing_ltc_cases_days_open > 90)] <- 1
table(enc$housing_in_progress_90days)

table(enc$housing_in_progress_90days)
housing_in_progress_90days <- enc[which(enc$housing_in_progress_90days == 1), ]
dim(housing_in_progress_90days)
housing_in_progress_90days <- nrow(housing_in_progress_90days)
housing_in_progress_90days

housing_in_progress_90days_percent <- percent(housing_in_progress_90days/housing_in_progress, accuracy = 0.1)
housing_in_progress_90days_percent
housing_in_progress_90days_percent[is.na(housing_in_progress_90days_percent)] <- '0.0%'
housing_in_progress_90days_percent



table(enc$housing_eligible_ltc, enc$housing_in_progress)
enc$housing_closed_case[enc$housing_eligible_ltc == 1 &
                          is.na(enc$housing_in_progress)] <- 1
table(enc$housing_closed_case)

table(enc$housing_closed_case)
housing_closed_case <- enc[which(enc$housing_closed_case == 1), ]
dim(housing_closed_case)
housing_closed_case <- nrow(housing_closed_case)
housing_closed_case

housing_closed_case_percent <- percent(housing_closed_case/housing_eligible_ltc, accuracy = 0.1)
housing_closed_case_percent
housing_closed_case_percent[is.na(housing_closed_case_percent)] <- '0.0%'
housing_closed_case_percent


# housing Cases Linked to Care
table(enc$housing_closed_case, enc$ltc_housing_final_ltc_status)
enc$housing_linked[enc$housing_closed_case == 1 &
                     enc$ltc_housing_final_ltc_status == 1] <- 1
table(enc$housing_linked)

table(enc$housing_linked)
housing_linked <- enc[which(enc$housing_linked == 1), ]
dim(housing_linked)
housing_linked <- nrow(housing_linked)
housing_linked

housing_linked_percent <- percent(housing_linked/housing_closed_case, accuracy = 0.1)
housing_linked_percent
housing_linked_percent[is.na(housing_linked_percent)] <- '0.0%'
housing_linked_percent



enc$housing_not_linked[enc$housing_eligible_ltc == 1 & is.na(enc$housing_in_progress) & is.na(enc$housing_linked)] <- 1
table(enc$housing_not_linked)

table(enc$housing_not_linked)
housing_not_linked <- enc[which(enc$housing_not_linked == 1), ]
dim(housing_not_linked)
housing_not_linked <- nrow(housing_not_linked)
housing_not_linked

housing_not_linked_percent <- percent(housing_not_linked/housing_closed_case, accuracy = 0.1)
housing_not_linked_percent
housing_not_linked_percent[is.na(housing_not_linked_percent)] <- '0.0%'
housing_not_linked_percent



# housing Reasons Not Linked to Care
enc$housing_not_linked_med_staff[(enc$housing_closed_case == 1 & is.na(enc$housing_linked)) &
                                   (enc$ltc_housing_prevented_rsn___1 == 1 |
                                      enc$ltc_housing_prevented_rsn___2 == 1 |
                                      enc$ltc_housing_prevented_rsn___11 == 1)] <- 1
table(enc$housing_not_linked_med_staff)

table(enc$housing_not_linked_med_staff)
housing_not_linked_med_staff <- enc[which(enc$housing_not_linked_med_staff == 1), ]
dim(housing_not_linked_med_staff)
housing_not_linked_med_staff <- nrow(housing_not_linked_med_staff)
housing_not_linked_med_staff

housing_not_linked_med_staff_percent <- percent(housing_not_linked_med_staff/housing_not_linked, accuracy = 0.1)
housing_not_linked_med_staff_percent
housing_not_linked_med_staff_percent[is.na(housing_not_linked_med_staff_percent)] <- '0.0%'
housing_not_linked_med_staff_percent



enc$housing_not_linked_family[(enc$housing_closed_case == 1 & is.na(enc$housing_linked)) &
                                (enc$ltc_housing_prevented_rsn___3 == 1)] <- 1
table(enc$housing_not_linked_family)

table(enc$housing_not_linked_family)
housing_not_linked_family <- enc[which(enc$housing_not_linked_family == 1), ]
dim(housing_not_linked_family)
housing_not_linked_family <- nrow(housing_not_linked_family)
housing_not_linked_family

housing_not_linked_family_percent <- percent(housing_not_linked_family/housing_not_linked, accuracy = 0.1)
housing_not_linked_family_percent
housing_not_linked_family_percent[is.na(housing_not_linked_family_percent)] <- '0.0%'
housing_not_linked_family_percent



enc$housing_not_linked_not_talking[(enc$housing_closed_case == 1 & is.na(enc$housing_linked)) &
                                     (enc$ltc_housing_prevented_rsn___4 == 1)] <- 1
table(enc$housing_not_linked_not_talking)

table(enc$housing_not_linked_not_talking)
housing_not_linked_not_talking <- enc[which(enc$housing_not_linked_not_talking == 1), ]
dim(housing_not_linked_not_talking)
housing_not_linked_not_talking <- nrow(housing_not_linked_not_talking)
housing_not_linked_not_talking

housing_not_linked_not_talking_percent <- percent(housing_not_linked_not_talking/housing_not_linked, accuracy = 0.1)
housing_not_linked_not_talking_percent
housing_not_linked_not_talking_percent[is.na(housing_not_linked_not_talking_percent)] <- '0.0%'
housing_not_linked_not_talking_percent



enc$housing_not_linked_safety[(enc$housing_closed_case == 1 & is.na(enc$housing_linked)) &
                                (enc$ltc_housing_prevented_rsn___5 == 1)] <- 1
table(enc$housing_not_linked_safety)

table(enc$housing_not_linked_safety)
housing_not_linked_safety <- enc[which(enc$housing_not_linked_safety == 1), ]
dim(housing_not_linked_safety)
housing_not_linked_safety <- nrow(housing_not_linked_safety)
housing_not_linked_safety

housing_not_linked_safety_percent <- percent(housing_not_linked_safety/housing_not_linked, accuracy = 0.1)
housing_not_linked_safety_percent
housing_not_linked_safety_percent[is.na(housing_not_linked_safety_percent)] <- '0.0%'
housing_not_linked_safety_percent



enc$housing_not_linked_medical[(enc$housing_closed_case == 1 & is.na(enc$housing_linked)) &
                                 (enc$ltc_housing_prevented_rsn___6 == 1 |
                                    enc$ltc_housing_prevented_rsn___8)] <- 1
table(enc$housing_not_linked_medical)

table(enc$housing_not_linked_medical)
housing_not_linked_medical <- enc[which(enc$housing_not_linked_medical == 1), ]
dim(housing_not_linked_medical)
housing_not_linked_medical <- nrow(housing_not_linked_medical)
housing_not_linked_medical

housing_not_linked_medical_percent <- percent(housing_not_linked_medical/housing_not_linked, accuracy = 0.1)
housing_not_linked_medical_percent
housing_not_linked_medical_percent[is.na(housing_not_linked_medical_percent)] <- '0.0%'
housing_not_linked_medical_percent



enc$housing_not_linked_contact[(enc$housing_closed_case == 1 & is.na(enc$housing_linked)) &
                                 (enc$ltc_housing_prevented_rsn___20 == 1)] <- 1
table(enc$housing_not_linked_contact)

table(enc$housing_not_linked_contact)
housing_not_linked_contact <- enc[which(enc$housing_not_linked_contact == 1), ]
dim(housing_not_linked_contact)
housing_not_linked_contact <- nrow(housing_not_linked_contact)
housing_not_linked_contact

housing_not_linked_contact_percent <- percent(housing_not_linked_contact/housing_not_linked, accuracy = 0.1)
housing_not_linked_contact_percent
housing_not_linked_contact_percent[is.na(housing_not_linked_contact_percent)] <- '0.0%'
housing_not_linked_contact_percent



enc$housing_not_linked_language[(enc$housing_closed_case == 1 & is.na(enc$housing_linked)) &
                                  (enc$ltc_housing_prevented_rsn___9 == 1)] <- 1
table(enc$housing_not_linked_language)

table(enc$housing_not_linked_language)
housing_not_linked_language <- enc[which(enc$housing_not_linked_language == 1), ]
dim(housing_not_linked_language)
housing_not_linked_language <- nrow(housing_not_linked_language)
housing_not_linked_language

housing_not_linked_language_percent <- percent(housing_not_linked_language/housing_not_linked, accuracy = 0.1)
housing_not_linked_language_percent
housing_not_linked_language_percent[is.na(housing_not_linked_language_percent)] <- '0.0%'
housing_not_linked_language_percent



enc$housing_not_linked_other[(enc$housing_closed_case == 1 & is.na(enc$housing_linked)) &
                               (enc$ltc_housing_prevented_rsn___0 == 1)] <- 1
table(enc$housing_not_linked_other)

table(enc$housing_not_linked_other)
housing_not_linked_other <- enc[which(enc$housing_not_linked_other == 1), ]
dim(housing_not_linked_other)
housing_not_linked_other <- nrow(housing_not_linked_other)
housing_not_linked_other

housing_not_linked_other_percent <- percent(housing_not_linked_other/housing_not_linked, accuracy = 0.1)
housing_not_linked_other_percent
housing_not_linked_other_percent[is.na(housing_not_linked_other_percent)] <- '0.0%'
housing_not_linked_other_percent


###############  prep Linkage  ###############

enc$prep_ltc_cases[enc$ltc_coordinator_per_case___71 == 1 &
                     (enc$ltc_services___5 == 1 |
                        enc$additional_services___3 == 1)] <- 1
table(enc$prep_ltc_cases)
prep_ltc_cases <- enc[which(enc$prep_ltc_cases == 1), ]
prep_ltc_cases <- nrow(prep_ltc_cases)
prep_ltc_cases

prep_ltc_cases_percent <- percent(prep_ltc_cases/ltc_cases, accuracy = 0.1)
prep_ltc_cases_percent
prep_ltc_cases_percent[is.na(prep_ltc_cases_percent)] <- '0.0%'
prep_ltc_cases_percent




# Ineligible prep Linkage - Already Linked
table(enc$ltc_prep_declined_rsn___23)
enc$prep_already_linked[enc$prep_ltc_cases == 1 &
                          (enc$ltc_prep_declined_rsn___23 == 1)] <- 1
table(enc$prep_already_linked)

table(enc$prep_already_linked)
prep_already_linked <- enc[which(enc$prep_already_linked == 1), ]
dim(prep_already_linked)
prep_already_linked <- nrow(prep_already_linked)
prep_already_linked


# Ineligible prep Linkage - Deceased
table(enc$ltc_prep_declined_rsn___35)
table(enc$ltc_prep_prevented_rsn___17)
enc$prep_deceased[enc$prep_ltc_cases == 1 &
                    (enc$ltc_prep_declined_rsn___35 == 1 |
                       enc$ltc_prep_prevented_rsn___17 == 1)] <- 1
table(enc$prep_deceased)

table(enc$prep_deceased)
prep_deceased <- enc[which(enc$prep_deceased == 1), ]
dim(prep_deceased)
prep_deceased <- nrow(prep_deceased)
prep_deceased


# Ineligible prep Linkage - Incarcerated
table(enc$ltc_prep_prevented_rsn___12)
enc$prep_incarcerated[enc$prep_ltc_cases == 1 &
                        enc$ltc_prep_prevented_rsn___12 == 1] <- 1
table(enc$prep_incarcerated)

table(enc$prep_incarcerated)
prep_incarcerated <- enc[which(enc$prep_incarcerated == 1), ]
dim(prep_incarcerated)
prep_incarcerated <- nrow(prep_incarcerated)
prep_incarcerated


# Ineligible prep Linkage - Declined Linkage Service
table(enc$ltc_prep_final_ltc_status)
enc$prep_linkage_declined[(enc$prep_ltc_cases == 1 &
                             enc$ltc_prep_final_ltc_status == 2) &
                            (is.na(enc$prep_already_linked) &
                               is.na(enc$prep_deceased) &
                               is.na(enc$prep_incarcerated))] <- 1
table(enc$prep_linkage_declined)

table(enc$prep_linkage_declined)
prep_linkage_declined <- enc[which(enc$prep_linkage_declined == 1), ]
dim(prep_linkage_declined)
prep_linkage_declined <- nrow(prep_linkage_declined)
prep_linkage_declined


# Ineligible prep Linkage - Linkage in Progress
table(enc$ltc_prep_prevented_rsn___18)
enc$prep_ongoing_linkage[enc$prep_ltc_cases == 1 &
                           enc$ltc_prep_prevented_rsn___18 == 1] <- 1
table(enc$prep_ongoing_linkage)

table(enc$prep_ongoing_linkage)
prep_ongoing_linkage <- enc[which(enc$prep_ongoing_linkage == 1), ]
dim(prep_ongoing_linkage)
prep_ongoing_linkage <- nrow(prep_ongoing_linkage)
prep_ongoing_linkage


# prep Ineligible Cases
enc$prep_ineligible_ltc[enc$prep_already_linked == 1 |
                          enc$prep_deceased == 1 |
                          enc$prep_incarcerated == 1 |
                          enc$prep_linkage_declined == 1 |
                          enc$prep_ongoing_linkage == 1] <- 1
table(enc$prep_ineligible_ltc)

table(enc$prep_ineligible_ltc)
prep_ineligible_ltc <- enc[which(enc$prep_ineligible_ltc == 1), ]
dim(prep_ineligible_ltc)
prep_ineligible_ltc <- nrow(prep_ineligible_ltc)
prep_ineligible_ltc

prep_ineligible_ltc_percent <- percent(prep_ineligible_ltc/prep_ltc_cases, accuracy = 0.1)
prep_ineligible_ltc_percent
prep_ineligible_ltc_percent[is.na(prep_ineligible_ltc_percent)] <- '0.0%'
prep_ineligible_ltc_percent

prep_already_linked_percent <- percent(prep_already_linked/prep_ineligible_ltc, accuracy = 0.1)
prep_already_linked_percent
prep_already_linked_percent[is.na(prep_already_linked_percent)] <- '0.0%'
prep_already_linked_percent

prep_deceased_percent <- percent(prep_deceased/prep_ineligible_ltc, accuracy = 0.1)
prep_deceased_percent
prep_deceased_percent[is.na(prep_deceased_percent)] <- '0.0%'
prep_deceased_percent

prep_incarcerated_percent <- percent(prep_incarcerated/prep_ineligible_ltc, accuracy = 0.1)
prep_incarcerated_percent
prep_incarcerated_percent[is.na(prep_incarcerated_percent)] <- '0.0%'
prep_incarcerated_percent

prep_linkage_declined_percent <- percent(prep_linkage_declined/prep_ineligible_ltc, accuracy = 0.1)
prep_linkage_declined_percent
prep_linkage_declined_percent[is.na(prep_linkage_declined_percent)] <- '0.0%'
prep_linkage_declined_percent

prep_ongoing_linkage_percent <- percent(prep_ongoing_linkage/prep_ineligible_ltc, accuracy = 0.1)
prep_ongoing_linkage_percent
prep_ongoing_linkage_percent[is.na(prep_ongoing_linkage_percent)] <- '0.0%'
prep_ongoing_linkage_percent


# prep Eligibility to be Linked
enc$prep_eligible_ltc[enc$prep_ltc_cases == 1 &
                        (is.na(enc$prep_already_linked) &
                           is.na(enc$prep_deceased) &
                           is.na(enc$prep_incarcerated) &
                           is.na(enc$prep_linkage_declined) &
                           is.na(enc$prep_ongoing_linkage))] <- 1
table(enc$prep_eligible_ltc)

table(enc$prep_eligible_ltc)
prep_eligible_ltc <- enc[which(enc$prep_eligible_ltc == 1), ]
dim(prep_eligible_ltc)
prep_eligible_ltc <- nrow(prep_eligible_ltc)
prep_eligible_ltc

prep_eligible_ltc_percent <- percent(prep_eligible_ltc/prep_ltc_cases, accuracy = 0.1)
prep_eligible_ltc_percent
prep_eligible_ltc_percent[is.na(prep_eligible_ltc_percent)] <- '0.0%'
prep_eligible_ltc_percent


# prep Open/Closed Cases
table(enc$ltc_prep_open_case_calc)
enc$prep_in_progress[enc$prep_eligible_ltc == 1 &
                       enc$ltc_prep_open_case_calc == 1] <- 1
table(enc$prep_in_progress)

table(enc$prep_in_progress)
prep_in_progress <- enc[which(enc$prep_in_progress == 1), ]
dim(prep_in_progress)
prep_in_progress <- nrow(prep_in_progress)
prep_in_progress

prep_in_progress_percent <- percent(prep_in_progress/prep_eligible_ltc, accuracy = 0.1)
prep_in_progress_percent
prep_in_progress_percent[is.na(prep_in_progress_percent)] <- '0.0%'
prep_in_progress_percent



table(enc$prep_in_progress)
enc$prep_ltc_cases_days_open <- difftime(Sys.Date(), enc$enc_date, units="days")
table(enc$prep_ltc_cases_days_open)
enc$prep_in_progress_90days[enc$prep_in_progress == 1 &
                              (enc$prep_ltc_cases_days_open > 90)] <- 1
table(enc$prep_in_progress_90days)

table(enc$prep_in_progress_90days)
prep_in_progress_90days <- enc[which(enc$prep_in_progress_90days == 1), ]
dim(prep_in_progress_90days)
prep_in_progress_90days <- nrow(prep_in_progress_90days)
prep_in_progress_90days

prep_in_progress_90days_percent <- percent(prep_in_progress_90days/prep_in_progress, accuracy = 0.1)
prep_in_progress_90days_percent
prep_in_progress_90days_percent[is.na(prep_in_progress_90days_percent)] <- '0.0%'
prep_in_progress_90days_percent



table(enc$prep_eligible_ltc, enc$prep_in_progress)
enc$prep_closed_case[enc$prep_eligible_ltc == 1 &
                       is.na(enc$prep_in_progress)] <- 1
table(enc$prep_closed_case)

table(enc$prep_closed_case)
prep_closed_case <- enc[which(enc$prep_closed_case == 1), ]
dim(prep_closed_case)
prep_closed_case <- nrow(prep_closed_case)
prep_closed_case

prep_closed_case_percent <- percent(prep_closed_case/prep_eligible_ltc, accuracy = 0.1)
prep_closed_case_percent
prep_closed_case_percent[is.na(prep_closed_case_percent)] <- '0.0%'
prep_closed_case_percent


# prep Cases Linked to Care
table(enc$prep_closed_case, enc$ltc_prep_final_ltc_status)
enc$prep_linked[enc$prep_closed_case == 1 &
                  enc$ltc_prep_final_ltc_status == 1] <- 1
table(enc$prep_linked)

table(enc$prep_linked)
prep_linked <- enc[which(enc$prep_linked == 1), ]
dim(prep_linked)
prep_linked <- nrow(prep_linked)
prep_linked

prep_linked_percent <- percent(prep_linked/prep_closed_case, accuracy = 0.1)
prep_linked_percent
prep_linked_percent[is.na(prep_linked_percent)] <- '0.0%'
prep_linked_percent



enc$prep_not_linked[enc$prep_eligible_ltc == 1 & is.na(enc$prep_in_progress) & is.na(enc$prep_linked)] <- 1
table(enc$prep_not_linked)

table(enc$prep_not_linked)
prep_not_linked <- enc[which(enc$prep_not_linked == 1), ]
dim(prep_not_linked)
prep_not_linked <- nrow(prep_not_linked)
prep_not_linked

prep_not_linked_percent <- percent(prep_not_linked/prep_closed_case, accuracy = 0.1)
prep_not_linked_percent
prep_not_linked_percent[is.na(prep_not_linked_percent)] <- '0.0%'
prep_not_linked_percent



# prep Reasons Not Linked to Care
enc$prep_not_linked_med_staff[(enc$prep_closed_case == 1 & is.na(enc$prep_linked)) &
                                (enc$ltc_prep_prevented_rsn___1 == 1 |
                                   enc$ltc_prep_prevented_rsn___2 == 1 |
                                   enc$ltc_prep_prevented_rsn___11 == 1)] <- 1
table(enc$prep_not_linked_med_staff)

table(enc$prep_not_linked_med_staff)
prep_not_linked_med_staff <- enc[which(enc$prep_not_linked_med_staff == 1), ]
dim(prep_not_linked_med_staff)
prep_not_linked_med_staff <- nrow(prep_not_linked_med_staff)
prep_not_linked_med_staff

prep_not_linked_med_staff_percent <- percent(prep_not_linked_med_staff/prep_not_linked, accuracy = 0.1)
prep_not_linked_med_staff_percent
prep_not_linked_med_staff_percent[is.na(prep_not_linked_med_staff_percent)] <- '0.0%'
prep_not_linked_med_staff_percent



enc$prep_not_linked_family[(enc$prep_closed_case == 1 & is.na(enc$prep_linked)) &
                             (enc$ltc_prep_prevented_rsn___3 == 1)] <- 1
table(enc$prep_not_linked_family)

table(enc$prep_not_linked_family)
prep_not_linked_family <- enc[which(enc$prep_not_linked_family == 1), ]
dim(prep_not_linked_family)
prep_not_linked_family <- nrow(prep_not_linked_family)
prep_not_linked_family

prep_not_linked_family_percent <- percent(prep_not_linked_family/prep_not_linked, accuracy = 0.1)
prep_not_linked_family_percent
prep_not_linked_family_percent[is.na(prep_not_linked_family_percent)] <- '0.0%'
prep_not_linked_family_percent



enc$prep_not_linked_not_talking[(enc$prep_closed_case == 1 & is.na(enc$prep_linked)) &
                                  (enc$ltc_prep_prevented_rsn___4 == 1)] <- 1
table(enc$prep_not_linked_not_talking)

table(enc$prep_not_linked_not_talking)
prep_not_linked_not_talking <- enc[which(enc$prep_not_linked_not_talking == 1), ]
dim(prep_not_linked_not_talking)
prep_not_linked_not_talking <- nrow(prep_not_linked_not_talking)
prep_not_linked_not_talking

prep_not_linked_not_talking_percent <- percent(prep_not_linked_not_talking/prep_not_linked, accuracy = 0.1)
prep_not_linked_not_talking_percent
prep_not_linked_not_talking_percent[is.na(prep_not_linked_not_talking_percent)] <- '0.0%'
prep_not_linked_not_talking_percent



enc$prep_not_linked_safety[(enc$prep_closed_case == 1 & is.na(enc$prep_linked)) &
                             (enc$ltc_prep_prevented_rsn___5 == 1)] <- 1
table(enc$prep_not_linked_safety)

table(enc$prep_not_linked_safety)
prep_not_linked_safety <- enc[which(enc$prep_not_linked_safety == 1), ]
dim(prep_not_linked_safety)
prep_not_linked_safety <- nrow(prep_not_linked_safety)
prep_not_linked_safety

prep_not_linked_safety_percent <- percent(prep_not_linked_safety/prep_not_linked, accuracy = 0.1)
prep_not_linked_safety_percent
prep_not_linked_safety_percent[is.na(prep_not_linked_safety_percent)] <- '0.0%'
prep_not_linked_safety_percent



enc$prep_not_linked_medical[(enc$prep_closed_case == 1 & is.na(enc$prep_linked)) &
                              (enc$ltc_prep_prevented_rsn___6 == 1 |
                                 enc$ltc_prep_prevented_rsn___8)] <- 1
table(enc$prep_not_linked_medical)

table(enc$prep_not_linked_medical)
prep_not_linked_medical <- enc[which(enc$prep_not_linked_medical == 1), ]
dim(prep_not_linked_medical)
prep_not_linked_medical <- nrow(prep_not_linked_medical)
prep_not_linked_medical

prep_not_linked_medical_percent <- percent(prep_not_linked_medical/prep_not_linked, accuracy = 0.1)
prep_not_linked_medical_percent
prep_not_linked_medical_percent[is.na(prep_not_linked_medical_percent)] <- '0.0%'
prep_not_linked_medical_percent



enc$prep_not_linked_contact[(enc$prep_closed_case == 1 & is.na(enc$prep_linked)) &
                              (enc$ltc_prep_prevented_rsn___20 == 1)] <- 1
table(enc$prep_not_linked_contact)

table(enc$prep_not_linked_contact)
prep_not_linked_contact <- enc[which(enc$prep_not_linked_contact == 1), ]
dim(prep_not_linked_contact)
prep_not_linked_contact <- nrow(prep_not_linked_contact)
prep_not_linked_contact

prep_not_linked_contact_percent <- percent(prep_not_linked_contact/prep_not_linked, accuracy = 0.1)
prep_not_linked_contact_percent
prep_not_linked_contact_percent[is.na(prep_not_linked_contact_percent)] <- '0.0%'
prep_not_linked_contact_percent



enc$prep_not_linked_language[(enc$prep_closed_case == 1 & is.na(enc$prep_linked)) &
                               (enc$ltc_prep_prevented_rsn___9 == 1)] <- 1
table(enc$prep_not_linked_language)

table(enc$prep_not_linked_language)
prep_not_linked_language <- enc[which(enc$prep_not_linked_language == 1), ]
dim(prep_not_linked_language)
prep_not_linked_language <- nrow(prep_not_linked_language)
prep_not_linked_language

prep_not_linked_language_percent <- percent(prep_not_linked_language/prep_not_linked, accuracy = 0.1)
prep_not_linked_language_percent
prep_not_linked_language_percent[is.na(prep_not_linked_language_percent)] <- '0.0%'
prep_not_linked_language_percent



enc$prep_not_linked_other[(enc$prep_closed_case == 1 & is.na(enc$prep_linked)) &
                            (enc$ltc_prep_prevented_rsn___0 == 1)] <- 1
table(enc$prep_not_linked_other)

table(enc$prep_not_linked_other)
prep_not_linked_other <- enc[which(enc$prep_not_linked_other == 1), ]
dim(prep_not_linked_other)
prep_not_linked_other <- nrow(prep_not_linked_other)
prep_not_linked_other

prep_not_linked_other_percent <- percent(prep_not_linked_other/prep_not_linked, accuracy = 0.1)
prep_not_linked_other_percent
prep_not_linked_other_percent[is.na(prep_not_linked_other_percent)] <- '0.0%'
prep_not_linked_other_percent


###############  sti Linkage  ###############

enc$sti_ltc_cases[enc$ltc_coordinator_per_case___71 == 1 &
                    enc$additional_services___8 == 1] <- 1
table(enc$sti_ltc_cases)
sti_ltc_cases <- enc[which(enc$sti_ltc_cases == 1), ]
sti_ltc_cases <- nrow(sti_ltc_cases)
sti_ltc_cases

sti_ltc_cases_percent <- percent(sti_ltc_cases/ltc_cases, accuracy = 0.1)
sti_ltc_cases_percent
sti_ltc_cases_percent[is.na(sti_ltc_cases_percent)] <- '0.0%'
sti_ltc_cases_percent


# Ineligible sti Linkage - Already Linked
table(enc$ltc_sti_declined_rsn___23)
enc$sti_already_linked[enc$sti_ltc_cases == 1 &
                         (enc$ltc_sti_declined_rsn___23 == 1)] <- 1
table(enc$sti_already_linked)

table(enc$sti_already_linked)
sti_already_linked <- enc[which(enc$sti_already_linked == 1), ]
dim(sti_already_linked)
sti_already_linked <- nrow(sti_already_linked)
sti_already_linked


# Ineligible sti Linkage - Deceased
table(enc$ltc_sti_declined_rsn___35)
table(enc$ltc_sti_prevented_rsn___17)
enc$sti_deceased[enc$sti_ltc_cases == 1 &
                   (enc$ltc_sti_declined_rsn___35 == 1 |
                      enc$ltc_sti_prevented_rsn___17 == 1)] <- 1
table(enc$sti_deceased)

table(enc$sti_deceased)
sti_deceased <- enc[which(enc$sti_deceased == 1), ]
dim(sti_deceased)
sti_deceased <- nrow(sti_deceased)
sti_deceased


# Ineligible sti Linkage - Incarcerated
table(enc$ltc_sti_prevented_rsn___12)
enc$sti_incarcerated[enc$sti_ltc_cases == 1 &
                       enc$ltc_sti_prevented_rsn___12 == 1] <- 1
table(enc$sti_incarcerated)

table(enc$sti_incarcerated)
sti_incarcerated <- enc[which(enc$sti_incarcerated == 1), ]
dim(sti_incarcerated)
sti_incarcerated <- nrow(sti_incarcerated)
sti_incarcerated


# Ineligible sti Linkage - Declined Linkage Service
table(enc$ltc_sti_final_ltc_status)
enc$sti_linkage_declined[(enc$sti_ltc_cases == 1 &
                            enc$ltc_sti_final_ltc_status == 2) &
                           (is.na(enc$sti_already_linked) &
                              is.na(enc$sti_deceased) &
                              is.na(enc$sti_incarcerated))] <- 1
table(enc$sti_linkage_declined)

table(enc$sti_linkage_declined)
sti_linkage_declined <- enc[which(enc$sti_linkage_declined == 1), ]
dim(sti_linkage_declined)
sti_linkage_declined <- nrow(sti_linkage_declined)
sti_linkage_declined


# Ineligible sti Linkage - Linkage in Progress
table(enc$ltc_sti_prevented_rsn___18)
enc$sti_ongoing_linkage[enc$sti_ltc_cases == 1 &
                          enc$ltc_sti_prevented_rsn___18 == 1] <- 1
table(enc$sti_ongoing_linkage)

table(enc$sti_ongoing_linkage)
sti_ongoing_linkage <- enc[which(enc$sti_ongoing_linkage == 1), ]
dim(sti_ongoing_linkage)
sti_ongoing_linkage <- nrow(sti_ongoing_linkage)
sti_ongoing_linkage


# sti Ineligible Cases
enc$sti_ineligible_ltc[enc$sti_already_linked == 1 |
                         enc$sti_deceased == 1 |
                         enc$sti_incarcerated == 1 |
                         enc$sti_linkage_declined == 1 |
                         enc$sti_ongoing_linkage == 1] <- 1
table(enc$sti_ineligible_ltc)

table(enc$sti_ineligible_ltc)
sti_ineligible_ltc <- enc[which(enc$sti_ineligible_ltc == 1), ]
dim(sti_ineligible_ltc)
sti_ineligible_ltc <- nrow(sti_ineligible_ltc)
sti_ineligible_ltc

sti_ineligible_ltc_percent <- percent(sti_ineligible_ltc/sti_ltc_cases, accuracy = 0.1)
sti_ineligible_ltc_percent
sti_ineligible_ltc_percent[is.na(sti_ineligible_ltc_percent)] <- '0.0%'
sti_ineligible_ltc_percent

sti_already_linked_percent <- percent(sti_already_linked/sti_ineligible_ltc, accuracy = 0.1)
sti_already_linked_percent
sti_already_linked_percent[is.na(sti_already_linked_percent)] <- '0.0%'
sti_already_linked_percent

sti_deceased_percent <- percent(sti_deceased/sti_ineligible_ltc, accuracy = 0.1)
sti_deceased_percent
sti_deceased_percent[is.na(sti_deceased_percent)] <- '0.0%'
sti_deceased_percent

sti_incarcerated_percent <- percent(sti_incarcerated/sti_ineligible_ltc, accuracy = 0.1)
sti_incarcerated_percent
sti_incarcerated_percent[is.na(sti_incarcerated_percent)] <- '0.0%'
sti_incarcerated_percent

sti_linkage_declined_percent <- percent(sti_linkage_declined/sti_ineligible_ltc, accuracy = 0.1)
sti_linkage_declined_percent
sti_linkage_declined_percent[is.na(sti_linkage_declined_percent)] <- '0.0%'
sti_linkage_declined_percent

sti_ongoing_linkage_percent <- percent(sti_ongoing_linkage/sti_ineligible_ltc, accuracy = 0.1)
sti_ongoing_linkage_percent
sti_ongoing_linkage_percent[is.na(sti_ongoing_linkage_percent)] <- '0.0%'
sti_ongoing_linkage_percent


# sti Eligibility to be Linked
enc$sti_eligible_ltc[enc$sti_ltc_cases == 1 &
                       (is.na(enc$sti_already_linked) &
                          is.na(enc$sti_deceased) &
                          is.na(enc$sti_incarcerated) &
                          is.na(enc$sti_linkage_declined) &
                          is.na(enc$sti_ongoing_linkage))] <- 1
table(enc$sti_eligible_ltc)

table(enc$sti_eligible_ltc)
sti_eligible_ltc <- enc[which(enc$sti_eligible_ltc == 1), ]
dim(sti_eligible_ltc)
sti_eligible_ltc <- nrow(sti_eligible_ltc)
sti_eligible_ltc

sti_eligible_ltc_percent <- percent(sti_eligible_ltc/sti_ltc_cases, accuracy = 0.1)
sti_eligible_ltc_percent
sti_eligible_ltc_percent[is.na(sti_eligible_ltc_percent)] <- '0.0%'
sti_eligible_ltc_percent


# sti Open/Closed Cases
table(enc$ltc_sti_open_case_calc)
enc$sti_in_progress[enc$sti_eligible_ltc == 1 &
                      enc$ltc_sti_open_case_calc == 1] <- 1
table(enc$sti_in_progress)

table(enc$sti_in_progress)
sti_in_progress <- enc[which(enc$sti_in_progress == 1), ]
dim(sti_in_progress)
sti_in_progress <- nrow(sti_in_progress)
sti_in_progress

sti_in_progress_percent <- percent(sti_in_progress/sti_eligible_ltc, accuracy = 0.1)
sti_in_progress_percent
sti_in_progress_percent[is.na(sti_in_progress_percent)] <- '0.0%'
sti_in_progress_percent



table(enc$sti_in_progress)
enc$sti_ltc_cases_days_open <- difftime(Sys.Date(), enc$enc_date, units="days")
table(enc$sti_ltc_cases_days_open)
enc$sti_in_progress_90days[enc$sti_in_progress == 1 &
                             (enc$sti_ltc_cases_days_open > 90)] <- 1
table(enc$sti_in_progress_90days)

table(enc$sti_in_progress_90days)
sti_in_progress_90days <- enc[which(enc$sti_in_progress_90days == 1), ]
dim(sti_in_progress_90days)
sti_in_progress_90days <- nrow(sti_in_progress_90days)
sti_in_progress_90days

sti_in_progress_90days_percent <- percent(sti_in_progress_90days/sti_in_progress, accuracy = 0.1)
sti_in_progress_90days_percent
sti_in_progress_90days_percent[is.na(sti_in_progress_90days_percent)] <- '0.0%'
sti_in_progress_90days_percent



table(enc$sti_eligible_ltc, enc$sti_in_progress)
enc$sti_closed_case[enc$sti_eligible_ltc == 1 &
                      is.na(enc$sti_in_progress)] <- 1
table(enc$sti_closed_case)

table(enc$sti_closed_case)
sti_closed_case <- enc[which(enc$sti_closed_case == 1), ]
dim(sti_closed_case)
sti_closed_case <- nrow(sti_closed_case)
sti_closed_case

sti_closed_case_percent <- percent(sti_closed_case/sti_eligible_ltc, accuracy = 0.1)
sti_closed_case_percent
sti_closed_case_percent[is.na(sti_closed_case_percent)] <- '0.0%'
sti_closed_case_percent


# sti Cases Linked to Care
table(enc$sti_closed_case, enc$ltc_sti_final_ltc_status)
enc$sti_linked[enc$sti_closed_case == 1 &
                 enc$ltc_sti_final_ltc_status == 1] <- 1
table(enc$sti_linked)

table(enc$sti_linked)
sti_linked <- enc[which(enc$sti_linked == 1), ]
dim(sti_linked)
sti_linked <- nrow(sti_linked)
sti_linked

sti_linked_percent <- percent(sti_linked/sti_closed_case, accuracy = 0.1)
sti_linked_percent
sti_linked_percent[is.na(sti_linked_percent)] <- '0.0%'
sti_linked_percent



enc$sti_not_linked[enc$sti_eligible_ltc == 1 & is.na(enc$sti_in_progress) & is.na(enc$sti_linked)] <- 1
table(enc$sti_not_linked)

table(enc$sti_not_linked)
sti_not_linked <- enc[which(enc$sti_not_linked == 1), ]
dim(sti_not_linked)
sti_not_linked <- nrow(sti_not_linked)
sti_not_linked

sti_not_linked_percent <- percent(sti_not_linked/sti_closed_case, accuracy = 0.1)
sti_not_linked_percent
sti_not_linked_percent[is.na(sti_not_linked_percent)] <- '0.0%'
sti_not_linked_percent



# sti Reasons Not Linked to Care
enc$sti_not_linked_med_staff[(enc$sti_closed_case == 1 & is.na(enc$sti_linked)) &
                               (enc$ltc_sti_prevented_rsn___1 == 1 |
                                  enc$ltc_sti_prevented_rsn___2 == 1 |
                                  enc$ltc_sti_prevented_rsn___11 == 1)] <- 1
table(enc$sti_not_linked_med_staff)

table(enc$sti_not_linked_med_staff)
sti_not_linked_med_staff <- enc[which(enc$sti_not_linked_med_staff == 1), ]
dim(sti_not_linked_med_staff)
sti_not_linked_med_staff <- nrow(sti_not_linked_med_staff)
sti_not_linked_med_staff

sti_not_linked_med_staff_percent <- percent(sti_not_linked_med_staff/sti_not_linked, accuracy = 0.1)
sti_not_linked_med_staff_percent
sti_not_linked_med_staff_percent[is.na(sti_not_linked_med_staff_percent)] <- '0.0%'
sti_not_linked_med_staff_percent
sti_not_linked_med_staff_percent[is.na(sti_not_linked_med_staff_percent)] <- '0.0%'
sti_not_linked_med_staff_percent



enc$sti_not_linked_family[(enc$sti_closed_case == 1 & is.na(enc$sti_linked)) &
                            (enc$ltc_sti_prevented_rsn___3 == 1)] <- 1
table(enc$sti_not_linked_family)

table(enc$sti_not_linked_family)
sti_not_linked_family <- enc[which(enc$sti_not_linked_family == 1), ]
dim(sti_not_linked_family)
sti_not_linked_family <- nrow(sti_not_linked_family)
sti_not_linked_family

sti_not_linked_family_percent <- percent(sti_not_linked_family/sti_not_linked, accuracy = 0.1)
sti_not_linked_family_percent
sti_not_linked_family_percent[is.na(sti_not_linked_family_percent)] <- '0.0%'
sti_not_linked_family_percent



enc$sti_not_linked_not_talking[(enc$sti_closed_case == 1 & is.na(enc$sti_linked)) &
                                 (enc$ltc_sti_prevented_rsn___4 == 1)] <- 1
table(enc$sti_not_linked_not_talking)

table(enc$sti_not_linked_not_talking)
sti_not_linked_not_talking <- enc[which(enc$sti_not_linked_not_talking == 1), ]
dim(sti_not_linked_not_talking)
sti_not_linked_not_talking <- nrow(sti_not_linked_not_talking)
sti_not_linked_not_talking

sti_not_linked_not_talking_percent <- percent(sti_not_linked_not_talking/sti_not_linked, accuracy = 0.1)
sti_not_linked_not_talking_percent
sti_not_linked_not_talking_percent[is.na(sti_not_linked_not_talking_percent)] <- '0.0%'
sti_not_linked_not_talking_percent



enc$sti_not_linked_safety[(enc$sti_closed_case == 1 & is.na(enc$sti_linked)) &
                            (enc$ltc_sti_prevented_rsn___5 == 1)] <- 1
table(enc$sti_not_linked_safety)

table(enc$sti_not_linked_safety)
sti_not_linked_safety <- enc[which(enc$sti_not_linked_safety == 1), ]
dim(sti_not_linked_safety)
sti_not_linked_safety <- nrow(sti_not_linked_safety)
sti_not_linked_safety

sti_not_linked_safety_percent <- percent(sti_not_linked_safety/sti_not_linked, accuracy = 0.1)
sti_not_linked_safety_percent
sti_not_linked_safety_percent[is.na(sti_not_linked_safety_percent)] <- '0.0%'
sti_not_linked_safety_percent



enc$sti_not_linked_medical[(enc$sti_closed_case == 1 & is.na(enc$sti_linked)) &
                             (enc$ltc_sti_prevented_rsn___6 == 1 |
                                enc$ltc_sti_prevented_rsn___8)] <- 1
table(enc$sti_not_linked_medical)

table(enc$sti_not_linked_medical)
sti_not_linked_medical <- enc[which(enc$sti_not_linked_medical == 1), ]
dim(sti_not_linked_medical)
sti_not_linked_medical <- nrow(sti_not_linked_medical)
sti_not_linked_medical

sti_not_linked_medical_percent <- percent(sti_not_linked_medical/sti_not_linked, accuracy = 0.1)
sti_not_linked_medical_percent
sti_not_linked_medical_percent[is.na(sti_not_linked_medical_percent)] <- '0.0%'
sti_not_linked_medical_percent



enc$sti_not_linked_contact[(enc$sti_closed_case == 1 & is.na(enc$sti_linked)) &
                             (enc$ltc_sti_prevented_rsn___20 == 1)] <- 1
table(enc$sti_not_linked_contact)

table(enc$sti_not_linked_contact)
sti_not_linked_contact <- enc[which(enc$sti_not_linked_contact == 1), ]
dim(sti_not_linked_contact)
sti_not_linked_contact <- nrow(sti_not_linked_contact)
sti_not_linked_contact

sti_not_linked_contact_percent <- percent(sti_not_linked_contact/sti_not_linked, accuracy = 0.1)
sti_not_linked_contact_percent
sti_not_linked_contact_percent[is.na(sti_not_linked_contact_percent)] <- '0.0%'
sti_not_linked_contact_percent



enc$sti_not_linked_language[(enc$sti_closed_case == 1 & is.na(enc$sti_linked)) &
                              (enc$ltc_sti_prevented_rsn___9 == 1)] <- 1
table(enc$sti_not_linked_language)

table(enc$sti_not_linked_language)
sti_not_linked_language <- enc[which(enc$sti_not_linked_language == 1), ]
dim(sti_not_linked_language)
sti_not_linked_language <- nrow(sti_not_linked_language)
sti_not_linked_language

sti_not_linked_language_percent <- percent(sti_not_linked_language/sti_not_linked, accuracy = 0.1)
sti_not_linked_language_percent
sti_not_linked_language_percent[is.na(sti_not_linked_language_percent)] <- '0.0%'
sti_not_linked_language_percent



enc$sti_not_linked_other[(enc$sti_closed_case == 1 & is.na(enc$sti_linked)) &
                           (enc$ltc_sti_prevented_rsn___0 == 1)] <- 1
table(enc$sti_not_linked_other)

table(enc$sti_not_linked_other)
sti_not_linked_other <- enc[which(enc$sti_not_linked_other == 1), ]
dim(sti_not_linked_other)
sti_not_linked_other <- nrow(sti_not_linked_other)
sti_not_linked_other

sti_not_linked_other_percent <- percent(sti_not_linked_other/sti_not_linked, accuracy = 0.1)
sti_not_linked_other_percent
sti_not_linked_other_percent[is.na(sti_not_linked_other_percent)] <- '0.0%'
sti_not_linked_other_percent


###############  food Linkage  ###############

enc$food_ltc_cases[enc$ltc_coordinator_per_case___71 == 1 &
                     enc$additional_services___4 == 1] <- 1
table(enc$food_ltc_cases)
food_ltc_cases <- enc[which(enc$food_ltc_cases == 1), ]
food_ltc_cases <- nrow(food_ltc_cases)
food_ltc_cases

food_ltc_cases_percent <- percent(food_ltc_cases/ltc_cases, accuracy = 0.1)
food_ltc_cases_percent
food_ltc_cases_percent[is.na(food_ltc_cases_percent)] <- '0.0%'
food_ltc_cases_percent


# Ineligible food Linkage - Already Linked
table(enc$ltc_food_declined_rsn___23)
enc$food_already_linked[enc$food_ltc_cases == 1 &
                          (enc$ltc_food_declined_rsn___23 == 1)] <- 1
table(enc$food_already_linked)

table(enc$food_already_linked)
food_already_linked <- enc[which(enc$food_already_linked == 1), ]
dim(food_already_linked)
food_already_linked <- nrow(food_already_linked)
food_already_linked


# Ineligible food Linkage - Deceased
table(enc$ltc_food_declined_rsn___35)
table(enc$ltc_food_prevented_rsn___17)
enc$food_deceased[enc$food_ltc_cases == 1 &
                    (enc$ltc_food_declined_rsn___35 == 1 |
                       enc$ltc_food_prevented_rsn___17 == 1)] <- 1
table(enc$food_deceased)

table(enc$food_deceased)
food_deceased <- enc[which(enc$food_deceased == 1), ]
dim(food_deceased)
food_deceased <- nrow(food_deceased)
food_deceased


# Ineligible food Linkage - Incarcerated
table(enc$ltc_food_prevented_rsn___12)
enc$food_incarcerated[enc$food_ltc_cases == 1 &
                        enc$ltc_food_prevented_rsn___12 == 1] <- 1
table(enc$food_incarcerated)

table(enc$food_incarcerated)
food_incarcerated <- enc[which(enc$food_incarcerated == 1), ]
dim(food_incarcerated)
food_incarcerated <- nrow(food_incarcerated)
food_incarcerated


# Ineligible food Linkage - Declined Linkage Service
table(enc$ltc_food_final_ltc_status)
enc$food_linkage_declined[(enc$food_ltc_cases == 1 &
                             enc$ltc_food_final_ltc_status == 2) &
                            (is.na(enc$food_already_linked) &
                               is.na(enc$food_deceased) &
                               is.na(enc$food_incarcerated))] <- 1
table(enc$food_linkage_declined)

table(enc$food_linkage_declined)
food_linkage_declined <- enc[which(enc$food_linkage_declined == 1), ]
dim(food_linkage_declined)
food_linkage_declined <- nrow(food_linkage_declined)
food_linkage_declined


# Ineligible food Linkage - Linkage in Progress
table(enc$ltc_food_prevented_rsn___18)
enc$food_ongoing_linkage[enc$food_ltc_cases == 1 &
                           enc$ltc_food_prevented_rsn___18 == 1] <- 1
table(enc$food_ongoing_linkage)

table(enc$food_ongoing_linkage)
food_ongoing_linkage <- enc[which(enc$food_ongoing_linkage == 1), ]
dim(food_ongoing_linkage)
food_ongoing_linkage <- nrow(food_ongoing_linkage)
food_ongoing_linkage


# food Ineligible Cases
enc$food_ineligible_ltc[enc$food_already_linked == 1 |
                          enc$food_deceased == 1 |
                          enc$food_incarcerated == 1 |
                          enc$food_linkage_declined == 1 |
                          enc$food_ongoing_linkage == 1] <- 1
table(enc$food_ineligible_ltc)

table(enc$food_ineligible_ltc)
food_ineligible_ltc <- enc[which(enc$food_ineligible_ltc == 1), ]
dim(food_ineligible_ltc)
food_ineligible_ltc <- nrow(food_ineligible_ltc)
food_ineligible_ltc

food_ineligible_ltc_percent <- percent(food_ineligible_ltc/food_ltc_cases, accuracy = 0.1)
food_ineligible_ltc_percent
food_ineligible_ltc_percent[is.na(food_ineligible_ltc_percent)] <- '0.0%'
food_ineligible_ltc_percent

food_already_linked_percent <- percent(food_already_linked/food_ineligible_ltc, accuracy = 0.1)
food_already_linked_percent
food_already_linked_percent[is.na(food_already_linked_percent)] <- '0.0%'
food_already_linked_percent

food_deceased_percent <- percent(food_deceased/food_ineligible_ltc, accuracy = 0.1)
food_deceased_percent

food_incarcerated_percent <- percent(food_incarcerated/food_ineligible_ltc, accuracy = 0.1)
food_incarcerated_percent
food_incarcerated_percent[is.na(food_incarcerated_percent)] <- '0.0%'
food_incarcerated_percent

food_linkage_declined_percent <- percent(food_linkage_declined/food_ineligible_ltc, accuracy = 0.1)
food_linkage_declined_percent
food_linkage_declined_percent[is.na(food_linkage_declined_percent)] <- '0.0%'
food_linkage_declined_percent

food_ongoing_linkage_percent <- percent(food_ongoing_linkage/food_ineligible_ltc, accuracy = 0.1)
food_ongoing_linkage_percent
food_ongoing_linkage_percent[is.na(food_ongoing_linkage_percent)] <- '0.0%'
food_ongoing_linkage_percent


# food Eligibility to be Linked
enc$food_eligible_ltc[enc$food_ltc_cases == 1 &
                        (is.na(enc$food_already_linked) &
                           is.na(enc$food_deceased) &
                           is.na(enc$food_incarcerated) &
                           is.na(enc$food_linkage_declined) &
                           is.na(enc$food_ongoing_linkage))] <- 1
table(enc$food_eligible_ltc)

table(enc$food_eligible_ltc)
food_eligible_ltc <- enc[which(enc$food_eligible_ltc == 1), ]
dim(food_eligible_ltc)
food_eligible_ltc <- nrow(food_eligible_ltc)
food_eligible_ltc

food_eligible_ltc_percent <- percent(food_eligible_ltc/food_ltc_cases, accuracy = 0.1)
food_eligible_ltc_percent
food_eligible_ltc_percent[is.na(food_eligible_ltc_percent)] <- '0.0%'
food_eligible_ltc_percent


# food Open/Closed Cases
table(enc$ltc_food_open_case_calc)
enc$food_in_progress[enc$food_eligible_ltc == 1 &
                       enc$ltc_food_open_case_calc == 1] <- 1
table(enc$food_in_progress)

table(enc$food_in_progress)
food_in_progress <- enc[which(enc$food_in_progress == 1), ]
dim(food_in_progress)
food_in_progress <- nrow(food_in_progress)
food_in_progress

food_in_progress_percent <- percent(food_in_progress/food_eligible_ltc, accuracy = 0.1)
food_in_progress_percent
food_in_progress_percent[is.na(food_in_progress_percent)] <- '0.0%'
food_in_progress_percent



table(enc$food_in_progress)
enc$food_ltc_cases_days_open <- difftime(Sys.Date(), enc$enc_date, units="days")
table(enc$food_ltc_cases_days_open)
enc$food_in_progress_90days[enc$food_in_progress == 1 &
                              (enc$food_ltc_cases_days_open > 90)] <- 1
table(enc$food_in_progress_90days)

table(enc$food_in_progress_90days)
food_in_progress_90days <- enc[which(enc$food_in_progress_90days == 1), ]
dim(food_in_progress_90days)
food_in_progress_90days <- nrow(food_in_progress_90days)
food_in_progress_90days

food_in_progress_90days_percent <- percent(food_in_progress_90days/food_in_progress, accuracy = 0.1)
food_in_progress_90days_percent
food_in_progress_90days_percent[is.na(food_in_progress_90days_percent)] <- '0.0%'
food_in_progress_90days_percent



table(enc$food_eligible_ltc, enc$food_in_progress)
enc$food_closed_case[enc$food_eligible_ltc == 1 &
                       is.na(enc$food_in_progress)] <- 1
table(enc$food_closed_case)

table(enc$food_closed_case)
food_closed_case <- enc[which(enc$food_closed_case == 1), ]
dim(food_closed_case)
food_closed_case <- nrow(food_closed_case)
food_closed_case

food_closed_case_percent <- percent(food_closed_case/food_eligible_ltc, accuracy = 0.1)
food_closed_case_percent
food_closed_case_percent[is.na(food_closed_case_percent)] <- '0.0%'
food_closed_case_percent


# food Cases Linked to Care
table(enc$food_closed_case, enc$ltc_food_final_ltc_status)
enc$food_linked[enc$food_closed_case == 1 &
                  enc$ltc_food_final_ltc_status == 1] <- 1
table(enc$food_linked)

table(enc$food_linked)
food_linked <- enc[which(enc$food_linked == 1), ]
dim(food_linked)
food_linked <- nrow(food_linked)
food_linked

food_linked_percent <- percent(food_linked/food_closed_case, accuracy = 0.1)
food_linked_percent
food_linked_percent[is.na(food_linked_percent)] <- '0.0%'
food_linked_percent



enc$food_not_linked[enc$food_eligible_ltc == 1 & is.na(enc$food_in_progress) & is.na(enc$food_linked)] <- 1
table(enc$food_not_linked)

table(enc$food_not_linked)
food_not_linked <- enc[which(enc$food_not_linked == 1), ]
dim(food_not_linked)
food_not_linked <- nrow(food_not_linked)
food_not_linked

food_not_linked_percent <- percent(food_not_linked/food_closed_case, accuracy = 0.1)
food_not_linked_percent
food_not_linked_percent[is.na(food_not_linked_percent)] <- '0.0%'
food_not_linked_percent



# food Reasons Not Linked to Care
enc$food_not_linked_med_staff[(enc$food_closed_case == 1 & is.na(enc$food_linked)) &
                                (enc$ltc_food_prevented_rsn___1 == 1 |
                                   enc$ltc_food_prevented_rsn___2 == 1 |
                                   enc$ltc_food_prevented_rsn___11 == 1)] <- 1
table(enc$food_not_linked_med_staff)

table(enc$food_not_linked_med_staff)
food_not_linked_med_staff <- enc[which(enc$food_not_linked_med_staff == 1), ]
dim(food_not_linked_med_staff)
food_not_linked_med_staff <- nrow(food_not_linked_med_staff)
food_not_linked_med_staff

food_not_linked_med_staff_percent <- percent(food_not_linked_med_staff/food_not_linked, accuracy = 0.1)
food_not_linked_med_staff_percent
food_not_linked_med_staff_percent[is.na(food_not_linked_med_staff_percent)] <- '0.0%'
food_not_linked_med_staff_percent



enc$food_not_linked_family[(enc$food_closed_case == 1 & is.na(enc$food_linked)) &
                             (enc$ltc_food_prevented_rsn___3 == 1)] <- 1
table(enc$food_not_linked_family)

table(enc$food_not_linked_family)
food_not_linked_family <- enc[which(enc$food_not_linked_family == 1), ]
dim(food_not_linked_family)
food_not_linked_family <- nrow(food_not_linked_family)
food_not_linked_family

food_not_linked_family_percent <- percent(food_not_linked_family/food_not_linked, accuracy = 0.1)
food_not_linked_family_percent
food_not_linked_family_percent[is.na(food_not_linked_family_percent)] <- '0.0%'
food_not_linked_family_percent



enc$food_not_linked_not_talking[(enc$food_closed_case == 1 & is.na(enc$food_linked)) &
                                  (enc$ltc_food_prevented_rsn___4 == 1)] <- 1
table(enc$food_not_linked_not_talking)

table(enc$food_not_linked_not_talking)
food_not_linked_not_talking <- enc[which(enc$food_not_linked_not_talking == 1), ]
dim(food_not_linked_not_talking)
food_not_linked_not_talking <- nrow(food_not_linked_not_talking)
food_not_linked_not_talking

food_not_linked_not_talking_percent <- percent(food_not_linked_not_talking/food_not_linked, accuracy = 0.1)
food_not_linked_not_talking_percent
food_not_linked_not_talking_percent[is.na(food_not_linked_not_talking_percent)] <- '0.0%'
food_not_linked_not_talking_percent



enc$food_not_linked_safety[(enc$food_closed_case == 1 & is.na(enc$food_linked)) &
                             (enc$ltc_food_prevented_rsn___5 == 1)] <- 1
table(enc$food_not_linked_safety)

table(enc$food_not_linked_safety)
food_not_linked_safety <- enc[which(enc$food_not_linked_safety == 1), ]
dim(food_not_linked_safety)
food_not_linked_safety <- nrow(food_not_linked_safety)
food_not_linked_safety

food_not_linked_safety_percent <- percent(food_not_linked_safety/food_not_linked, accuracy = 0.1)
food_not_linked_safety_percent
food_not_linked_safety_percent[is.na(food_not_linked_safety_percent)] <- '0.0%'
food_not_linked_safety_percent



enc$food_not_linked_medical[(enc$food_closed_case == 1 & is.na(enc$food_linked)) &
                              (enc$ltc_food_prevented_rsn___6 == 1 |
                                 enc$ltc_food_prevented_rsn___8)] <- 1
table(enc$food_not_linked_medical)

table(enc$food_not_linked_medical)
food_not_linked_medical <- enc[which(enc$food_not_linked_medical == 1), ]
dim(food_not_linked_medical)
food_not_linked_medical <- nrow(food_not_linked_medical)
food_not_linked_medical

food_not_linked_medical_percent <- percent(food_not_linked_medical/food_not_linked, accuracy = 0.1)
food_not_linked_medical_percent
food_not_linked_medical_percent[is.na(food_not_linked_medical_percent)] <- '0.0%'
food_not_linked_medical_percent



enc$food_not_linked_contact[(enc$food_closed_case == 1 & is.na(enc$food_linked)) &
                              (enc$ltc_food_prevented_rsn___20 == 1)] <- 1
table(enc$food_not_linked_contact)

table(enc$food_not_linked_contact)
food_not_linked_contact <- enc[which(enc$food_not_linked_contact == 1), ]
dim(food_not_linked_contact)
food_not_linked_contact <- nrow(food_not_linked_contact)
food_not_linked_contact

food_not_linked_contact_percent <- percent(food_not_linked_contact/food_not_linked, accuracy = 0.1)
food_not_linked_contact_percent
food_not_linked_contact_percent[is.na(food_not_linked_contact_percent)] <- '0.0%'
food_not_linked_contact_percent



enc$food_not_linked_language[(enc$food_closed_case == 1 & is.na(enc$food_linked)) &
                               (enc$ltc_food_prevented_rsn___9 == 1)] <- 1
table(enc$food_not_linked_language)

table(enc$food_not_linked_language)
food_not_linked_language <- enc[which(enc$food_not_linked_language == 1), ]
dim(food_not_linked_language)
food_not_linked_language <- nrow(food_not_linked_language)
food_not_linked_language

food_not_linked_language_percent <- percent(food_not_linked_language/food_not_linked, accuracy = 0.1)
food_not_linked_language_percent
food_not_linked_language_percent[is.na(food_not_linked_language_percent)] <- '0.0%'
food_not_linked_language_percent



enc$food_not_linked_other[(enc$food_closed_case == 1 & is.na(enc$food_linked)) &
                            (enc$ltc_food_prevented_rsn___0 == 1)] <- 1
table(enc$food_not_linked_other)

table(enc$food_not_linked_other)
food_not_linked_other <- enc[which(enc$food_not_linked_other == 1), ]
dim(food_not_linked_other)
food_not_linked_other <- nrow(food_not_linked_other)
food_not_linked_other

food_not_linked_other_percent <- percent(food_not_linked_other/food_not_linked, accuracy = 0.1)
food_not_linked_other_percent
food_not_linked_other_percent[is.na(food_not_linked_other_percent)] <- '0.0%'
food_not_linked_other_percent


###############  financial Linkage  ###############

enc$financial_ltc_cases[enc$ltc_coordinator_per_case___71 == 1 &
                          enc$additional_services___5 == 1] <- 1
table(enc$financial_ltc_cases)
financial_ltc_cases <- enc[which(enc$financial_ltc_cases == 1), ]
financial_ltc_cases <- nrow(financial_ltc_cases)
financial_ltc_cases

financial_ltc_cases_percent <- percent(financial_ltc_cases/ltc_cases, accuracy = 0.1)
financial_ltc_cases_percent
financial_ltc_cases_percent[is.na(financial_ltc_cases_percent)] <- '0.0%'
financial_ltc_cases_percent


# Ineligible financial Linkage - Already Linked
table(enc$ltc_financial_declined_rsn___23)
enc$financial_already_linked[enc$financial_ltc_cases == 1 &
                               (enc$ltc_financial_declined_rsn___23 == 1)] <- 1
table(enc$financial_already_linked)

table(enc$financial_already_linked)
financial_already_linked <- enc[which(enc$financial_already_linked == 1), ]
dim(financial_already_linked)
financial_already_linked <- nrow(financial_already_linked)
financial_already_linked


# Ineligible financial Linkage - Deceased
table(enc$ltc_financial_declined_rsn___35)
table(enc$ltc_financial_prevented_rsn___17)
enc$financial_deceased[enc$financial_ltc_cases == 1 &
                         (enc$ltc_financial_declined_rsn___35 == 1 |
                            enc$ltc_financial_prevented_rsn___17 == 1)] <- 1
table(enc$financial_deceased)

table(enc$financial_deceased)
financial_deceased <- enc[which(enc$financial_deceased == 1), ]
dim(financial_deceased)
financial_deceased <- nrow(financial_deceased)
financial_deceased


# Ineligible financial Linkage - Incarcerated
table(enc$ltc_financial_prevented_rsn___12)
enc$financial_incarcerated[enc$financial_ltc_cases == 1 &
                             enc$ltc_financial_prevented_rsn___12 == 1] <- 1
table(enc$financial_incarcerated)

table(enc$financial_incarcerated)
financial_incarcerated <- enc[which(enc$financial_incarcerated == 1), ]
dim(financial_incarcerated)
financial_incarcerated <- nrow(financial_incarcerated)
financial_incarcerated


# Ineligible financial Linkage - Declined Linkage Service
table(enc$ltc_financial_final_ltc_status)
enc$financial_linkage_declined[(enc$financial_ltc_cases == 1 &
                                  enc$ltc_financial_final_ltc_status == 2) &
                                 (is.na(enc$financial_already_linked) &
                                    is.na(enc$financial_deceased) &
                                    is.na(enc$financial_incarcerated))] <- 1
table(enc$financial_linkage_declined)

table(enc$financial_linkage_declined)
financial_linkage_declined <- enc[which(enc$financial_linkage_declined == 1), ]
dim(financial_linkage_declined)
financial_linkage_declined <- nrow(financial_linkage_declined)
financial_linkage_declined


# Ineligible financial Linkage - Linkage in Progress
table(enc$ltc_financial_prevented_rsn___18)
enc$financial_ongoing_linkage[enc$financial_ltc_cases == 1 &
                                enc$ltc_financial_prevented_rsn___18 == 1] <- 1
table(enc$financial_ongoing_linkage)

table(enc$financial_ongoing_linkage)
financial_ongoing_linkage <- enc[which(enc$financial_ongoing_linkage == 1), ]
dim(financial_ongoing_linkage)
financial_ongoing_linkage <- nrow(financial_ongoing_linkage)
financial_ongoing_linkage


# financial Ineligible Cases
enc$financial_ineligible_ltc[enc$financial_already_linked == 1 |
                               enc$financial_deceased == 1 |
                               enc$financial_incarcerated == 1 |
                               enc$financial_linkage_declined == 1 |
                               enc$financial_ongoing_linkage == 1] <- 1
table(enc$financial_ineligible_ltc)

table(enc$financial_ineligible_ltc)
financial_ineligible_ltc <- enc[which(enc$financial_ineligible_ltc == 1), ]
dim(financial_ineligible_ltc)
financial_ineligible_ltc <- nrow(financial_ineligible_ltc)
financial_ineligible_ltc

financial_ineligible_ltc_percent <- percent(financial_ineligible_ltc/financial_ltc_cases, accuracy = 0.1)
financial_ineligible_ltc_percent
financial_ineligible_ltc_percent[is.na(financial_ineligible_ltc_percent)] <- '0.0%'
financial_ineligible_ltc_percent

financial_already_linked_percent <- percent(financial_already_linked/financial_ineligible_ltc, accuracy = 0.1)
financial_already_linked_percent
financial_already_linked_percent[is.na(financial_already_linked_percent)] <- '0.0%'
financial_already_linked_percent

financial_deceased_percent <- percent(financial_deceased/financial_ineligible_ltc, accuracy = 0.1)
financial_deceased_percent
financial_deceased_percent[is.na(financial_deceased_percent)] <- '0.0%'
financial_deceased_percent

financial_incarcerated_percent <- percent(financial_incarcerated/financial_ineligible_ltc, accuracy = 0.1)
financial_incarcerated_percent
financial_incarcerated_percent[is.na(financial_incarcerated_percent)] <- '0.0%'
financial_incarcerated_percent

financial_linkage_declined_percent <- percent(financial_linkage_declined/financial_ineligible_ltc, accuracy = 0.1)
financial_linkage_declined_percent
financial_linkage_declined_percent[is.na(financial_linkage_declined_percent)] <- '0.0%'
financial_linkage_declined_percent

financial_ongoing_linkage_percent <- percent(financial_ongoing_linkage/financial_ineligible_ltc, accuracy = 0.1)
financial_ongoing_linkage_percent
financial_ongoing_linkage_percent[is.na(financial_ongoing_linkage_percent)] <- '0.0%'
financial_ongoing_linkage_percent


# financial Eligibility to be Linked
enc$financial_eligible_ltc[enc$financial_ltc_cases == 1 &
                             (is.na(enc$financial_already_linked) &
                                is.na(enc$financial_deceased) &
                                is.na(enc$financial_incarcerated) &
                                is.na(enc$financial_linkage_declined) &
                                is.na(enc$financial_ongoing_linkage))] <- 1
table(enc$financial_eligible_ltc)

table(enc$financial_eligible_ltc)
financial_eligible_ltc <- enc[which(enc$financial_eligible_ltc == 1), ]
dim(financial_eligible_ltc)
financial_eligible_ltc <- nrow(financial_eligible_ltc)
financial_eligible_ltc

financial_eligible_ltc_percent <- percent(financial_eligible_ltc/financial_ltc_cases, accuracy = 0.1)
financial_eligible_ltc_percent
financial_eligible_ltc_percent[is.na(financial_eligible_ltc_percent)] <- '0.0%'
financial_eligible_ltc_percent


# financial Open/Closed Cases
table(enc$ltc_financial_open_case_calc)
enc$financial_in_progress[enc$financial_eligible_ltc == 1 &
                            enc$ltc_financial_open_case_calc == 1] <- 1
table(enc$financial_in_progress)

table(enc$financial_in_progress)
financial_in_progress <- enc[which(enc$financial_in_progress == 1), ]
dim(financial_in_progress)
financial_in_progress <- nrow(financial_in_progress)
financial_in_progress

financial_in_progress_percent <- percent(financial_in_progress/financial_eligible_ltc, accuracy = 0.1)
financial_in_progress_percent
financial_in_progress_percent[is.na(financial_in_progress_percent)] <- '0.0%'
financial_in_progress_percent



table(enc$financial_in_progress)
enc$financial_ltc_cases_days_open <- difftime(Sys.Date(), enc$enc_date, units="days")
table(enc$financial_ltc_cases_days_open)
enc$financial_in_progress_90days[enc$financial_in_progress == 1 &
                                   (enc$financial_ltc_cases_days_open > 90)] <- 1
table(enc$financial_in_progress_90days)

table(enc$financial_in_progress_90days)
financial_in_progress_90days <- enc[which(enc$financial_in_progress_90days == 1), ]
dim(financial_in_progress_90days)
financial_in_progress_90days <- nrow(financial_in_progress_90days)
financial_in_progress_90days

financial_in_progress_90days_percent <- percent(financial_in_progress_90days/financial_in_progress, accuracy = 0.1)
financial_in_progress_90days_percent
financial_in_progress_90days_percent[is.na(financial_in_progress_90days_percent)] <- '0.0%'
financial_in_progress_90days_percent



table(enc$financial_eligible_ltc, enc$financial_in_progress)
enc$financial_closed_case[enc$financial_eligible_ltc == 1 &
                            is.na(enc$financial_in_progress)] <- 1
table(enc$financial_closed_case)

table(enc$financial_closed_case)
financial_closed_case <- enc[which(enc$financial_closed_case == 1), ]
dim(financial_closed_case)
financial_closed_case <- nrow(financial_closed_case)
financial_closed_case

financial_closed_case_percent <- percent(financial_closed_case/financial_eligible_ltc, accuracy = 0.1)
financial_closed_case_percent
financial_closed_case_percent[is.na(financial_closed_case_percent)] <- '0.0%'
financial_closed_case_percent


# financial Cases Linked to Care
table(enc$financial_closed_case, enc$ltc_financial_final_ltc_status)
enc$financial_linked[enc$financial_closed_case == 1 &
                       enc$ltc_financial_final_ltc_status == 1] <- 1
table(enc$financial_linked)

table(enc$financial_linked)
financial_linked <- enc[which(enc$financial_linked == 1), ]
dim(financial_linked)
financial_linked <- nrow(financial_linked)
financial_linked

financial_linked_percent <- percent(financial_linked/financial_closed_case, accuracy = 0.1)
financial_linked_percent
financial_linked_percent[is.na(financial_linked_percent)] <- '0.0%'
financial_linked_percent



enc$financial_not_linked[enc$financial_eligible_ltc == 1 & is.na(enc$financial_in_progress) & is.na(enc$financial_linked)] <- 1
table(enc$financial_not_linked)

table(enc$financial_not_linked)
financial_not_linked <- enc[which(enc$financial_not_linked == 1), ]
dim(financial_not_linked)
financial_not_linked <- nrow(financial_not_linked)
financial_not_linked

financial_not_linked_percent <- percent(financial_not_linked/financial_closed_case, accuracy = 0.1)
financial_not_linked_percent
financial_not_linked_percent[is.na(financial_not_linked_percent)] <- '0.0%'
financial_not_linked_percent



# financial Reasons Not Linked to Care
enc$financial_not_linked_med_staff[(enc$financial_closed_case == 1 & is.na(enc$financial_linked)) &
                                     (enc$ltc_financial_prevented_rsn___1 == 1 |
                                        enc$ltc_financial_prevented_rsn___2 == 1 |
                                        enc$ltc_financial_prevented_rsn___11 == 1)] <- 1
table(enc$financial_not_linked_med_staff)

table(enc$financial_not_linked_med_staff)
financial_not_linked_med_staff <- enc[which(enc$financial_not_linked_med_staff == 1), ]
dim(financial_not_linked_med_staff)
financial_not_linked_med_staff <- nrow(financial_not_linked_med_staff)
financial_not_linked_med_staff

financial_not_linked_med_staff_percent <- percent(financial_not_linked_med_staff/financial_not_linked, accuracy = 0.1)
financial_not_linked_med_staff_percent
financial_not_linked_med_staff_percent[is.na(financial_not_linked_med_staff_percent)] <- '0.0%'
financial_not_linked_med_staff_percent



enc$financial_not_linked_family[(enc$financial_closed_case == 1 & is.na(enc$financial_linked)) &
                                  (enc$ltc_financial_prevented_rsn___3 == 1)] <- 1
table(enc$financial_not_linked_family)

table(enc$financial_not_linked_family)
financial_not_linked_family <- enc[which(enc$financial_not_linked_family == 1), ]
dim(financial_not_linked_family)
financial_not_linked_family <- nrow(financial_not_linked_family)
financial_not_linked_family

financial_not_linked_family_percent <- percent(financial_not_linked_family/financial_not_linked, accuracy = 0.1)
financial_not_linked_family_percent
financial_not_linked_family_percent[is.na(financial_not_linked_family_percent)] <- '0.0%'
financial_not_linked_family_percent



enc$financial_not_linked_not_talking[(enc$financial_closed_case == 1 & is.na(enc$financial_linked)) &
                                       (enc$ltc_financial_prevented_rsn___4 == 1)] <- 1
table(enc$financial_not_linked_not_talking)

table(enc$financial_not_linked_not_talking)
financial_not_linked_not_talking <- enc[which(enc$financial_not_linked_not_talking == 1), ]
dim(financial_not_linked_not_talking)
financial_not_linked_not_talking <- nrow(financial_not_linked_not_talking)
financial_not_linked_not_talking

financial_not_linked_not_talking_percent <- percent(financial_not_linked_not_talking/financial_not_linked, accuracy = 0.1)
financial_not_linked_not_talking_percent
financial_not_linked_not_talking_percent[is.na(financial_not_linked_not_talking_percent)] <- '0.0%'
financial_not_linked_not_talking_percent



enc$financial_not_linked_safety[(enc$financial_closed_case == 1 & is.na(enc$financial_linked)) &
                                  (enc$ltc_financial_prevented_rsn___5 == 1)] <- 1
table(enc$financial_not_linked_safety)

table(enc$financial_not_linked_safety)
financial_not_linked_safety <- enc[which(enc$financial_not_linked_safety == 1), ]
dim(financial_not_linked_safety)
financial_not_linked_safety <- nrow(financial_not_linked_safety)
financial_not_linked_safety

financial_not_linked_safety_percent <- percent(financial_not_linked_safety/financial_not_linked, accuracy = 0.1)
financial_not_linked_safety_percent
financial_not_linked_safety_percent[is.na(financial_not_linked_safety_percent)] <- '0.0%'
financial_not_linked_safety_percent



enc$financial_not_linked_medical[(enc$financial_closed_case == 1 & is.na(enc$financial_linked)) &
                                   (enc$ltc_financial_prevented_rsn___6 == 1 |
                                      enc$ltc_financial_prevented_rsn___8)] <- 1
table(enc$financial_not_linked_medical)

table(enc$financial_not_linked_medical)
financial_not_linked_medical <- enc[which(enc$financial_not_linked_medical == 1), ]
dim(financial_not_linked_medical)
financial_not_linked_medical <- nrow(financial_not_linked_medical)
financial_not_linked_medical

financial_not_linked_medical_percent <- percent(financial_not_linked_medical/financial_not_linked, accuracy = 0.1)
financial_not_linked_medical_percent
financial_not_linked_medical_percent[is.na(financial_not_linked_medical_percent)] <- '0.0%'
financial_not_linked_medical_percent



enc$financial_not_linked_contact[(enc$financial_closed_case == 1 & is.na(enc$financial_linked)) &
                                   (enc$ltc_financial_prevented_rsn___20 == 1)] <- 1
table(enc$financial_not_linked_contact)

table(enc$financial_not_linked_contact)
financial_not_linked_contact <- enc[which(enc$financial_not_linked_contact == 1), ]
dim(financial_not_linked_contact)
financial_not_linked_contact <- nrow(financial_not_linked_contact)
financial_not_linked_contact

financial_not_linked_contact_percent <- percent(financial_not_linked_contact/financial_not_linked, accuracy = 0.1)
financial_not_linked_contact_percent
financial_not_linked_contact_percent[is.na(financial_not_linked_contact_percent)] <- '0.0%'
financial_not_linked_contact_percent



enc$financial_not_linked_language[(enc$financial_closed_case == 1 & is.na(enc$financial_linked)) &
                                    (enc$ltc_financial_prevented_rsn___9 == 1)] <- 1
table(enc$financial_not_linked_language)

table(enc$financial_not_linked_language)
financial_not_linked_language <- enc[which(enc$financial_not_linked_language == 1), ]
dim(financial_not_linked_language)
financial_not_linked_language <- nrow(financial_not_linked_language)
financial_not_linked_language

financial_not_linked_language_percent <- percent(financial_not_linked_language/financial_not_linked, accuracy = 0.1)
financial_not_linked_language_percent
financial_not_linked_language_percent[is.na(financial_not_linked_language_percent)] <- '0.0%'
financial_not_linked_language_percent



enc$financial_not_linked_other[(enc$financial_closed_case == 1 & is.na(enc$financial_linked)) &
                                 (enc$ltc_financial_prevented_rsn___0 == 1)] <- 1
table(enc$financial_not_linked_other)

table(enc$financial_not_linked_other)
financial_not_linked_other <- enc[which(enc$financial_not_linked_other == 1), ]
dim(financial_not_linked_other)
financial_not_linked_other <- nrow(financial_not_linked_other)
financial_not_linked_other

financial_not_linked_other_percent <- percent(financial_not_linked_other/financial_not_linked, accuracy = 0.1)
financial_not_linked_other_percent
financial_not_linked_other_percent[is.na(financial_not_linked_other_percent)] <- '0.0%'
financial_not_linked_other_percent


###############  personabuse Linkage  ###############

enc$personabuse_ltc_cases[enc$ltc_coordinator_per_case___71 == 1 &
                            enc$additional_services___6 == 1] <- 1
table(enc$personabuse_ltc_cases)
personabuse_ltc_cases <- enc[which(enc$personabuse_ltc_cases == 1), ]
personabuse_ltc_cases <- nrow(personabuse_ltc_cases)
personabuse_ltc_cases

personabuse_ltc_cases_percent <- percent(personabuse_ltc_cases/ltc_cases, accuracy = 0.1)
personabuse_ltc_cases_percent
personabuse_ltc_cases_percent[is.na(personabuse_ltc_cases_percent)] <- '0.0%'
personabuse_ltc_cases_percent


# Ineligible personabuse Linkage - Already Linked
table(enc$ltc_personabuse_declined_rsn___23)
enc$personabuse_already_linked[enc$personabuse_ltc_cases == 1 &
                                 (enc$ltc_abuse_declined_rsn___23 == 1)] <- 1
table(enc$personabuse_already_linked)

table(enc$personabuse_already_linked)
personabuse_already_linked <- enc[which(enc$personabuse_already_linked == 1), ]
dim(personabuse_already_linked)
personabuse_already_linked <- nrow(personabuse_already_linked)
personabuse_already_linked


# Ineligible personabuse Linkage - Deceased
table(enc$ltc_personabuse_declined_rsn___35)
table(enc$ltc_personabuse_prevented_rsn___17)
enc$personabuse_deceased[enc$personabuse_ltc_cases == 1 &
                           (enc$ltc_abuse_declined_rsn___35 == 1 |
                              enc$ltc_abuse_prevented_rsn___17 == 1)] <- 1
table(enc$personabuse_deceased)

table(enc$personabuse_deceased)
personabuse_deceased <- enc[which(enc$personabuse_deceased == 1), ]
dim(personabuse_deceased)
personabuse_deceased <- nrow(personabuse_deceased)
personabuse_deceased


# Ineligible personabuse Linkage - Incarcerated
table(enc$ltc_personabuse_prevented_rsn___12)
enc$personabuse_incarcerated[enc$personabuse_ltc_cases == 1 &
                               enc$ltc_abuse_prevented_rsn___12 == 1] <- 1
table(enc$personabuse_incarcerated)

table(enc$personabuse_incarcerated)
personabuse_incarcerated <- enc[which(enc$personabuse_incarcerated == 1), ]
dim(personabuse_incarcerated)
personabuse_incarcerated <- nrow(personabuse_incarcerated)
personabuse_incarcerated


# Ineligible personabuse Linkage - Declined Linkage Service
table(enc$ltc_abuse_final_ltc_status)
enc$personabuse_linkage_declined[(enc$personabuse_ltc_cases == 1 &
                                    enc$ltc_abuse_final_ltc_status == 2) &
                                   (is.na(enc$personabuse_already_linked) &
                                      is.na(enc$personabuse_deceased) &
                                      is.na(enc$personabuse_incarcerated))] <- 1
table(enc$personabuse_linkage_declined)

table(enc$personabuse_linkage_declined)
personabuse_linkage_declined <- enc[which(enc$personabuse_linkage_declined == 1), ]
dim(personabuse_linkage_declined)
personabuse_linkage_declined <- nrow(personabuse_linkage_declined)
personabuse_linkage_declined


# Ineligible personabuse Linkage - Linkage in Progress
table(enc$ltc_personabuse_prevented_rsn___18)
enc$personabuse_ongoing_linkage[enc$personabuse_ltc_cases == 1 &
                                  enc$ltc_abuse_prevented_rsn___18 == 1] <- 1
table(enc$personabuse_ongoing_linkage)

table(enc$personabuse_ongoing_linkage)
personabuse_ongoing_linkage <- enc[which(enc$personabuse_ongoing_linkage == 1), ]
dim(personabuse_ongoing_linkage)
personabuse_ongoing_linkage <- nrow(personabuse_ongoing_linkage)
personabuse_ongoing_linkage


# personabuse Ineligible Cases
enc$personabuse_ineligible_ltc[enc$personabuse_already_linked == 1 |
                                 enc$personabuse_deceased == 1 |
                                 enc$personabuse_incarcerated == 1 |
                                 enc$personabuse_linkage_declined == 1 |
                                 enc$personabuse_ongoing_linkage == 1] <- 1
table(enc$personabuse_ineligible_ltc)

table(enc$personabuse_ineligible_ltc)
personabuse_ineligible_ltc <- enc[which(enc$personabuse_ineligible_ltc == 1), ]
dim(personabuse_ineligible_ltc)
personabuse_ineligible_ltc <- nrow(personabuse_ineligible_ltc)
personabuse_ineligible_ltc

personabuse_ineligible_ltc_percent <- percent(personabuse_ineligible_ltc/personabuse_ltc_cases, accuracy = 0.1)
personabuse_ineligible_ltc_percent
personabuse_ineligible_ltc_percent[is.na(personabuse_ineligible_ltc_percent)] <- '0.0%'
personabuse_ineligible_ltc_percent

personabuse_already_linked_percent <- percent(personabuse_already_linked/personabuse_ineligible_ltc, accuracy = 0.1)
personabuse_already_linked_percent
personabuse_already_linked_percent[is.na(personabuse_already_linked_percent)] <- '0.0%'
personabuse_already_linked_percent

personabuse_deceased_percent <- percent(personabuse_deceased/personabuse_ineligible_ltc, accuracy = 0.1)
personabuse_deceased_percent
personabuse_deceased_percent[is.na(personabuse_deceased_percent)] <- '0.0%'
personabuse_deceased_percent

personabuse_incarcerated_percent <- percent(personabuse_incarcerated/personabuse_ineligible_ltc, accuracy = 0.1)
personabuse_incarcerated_percent
personabuse_incarcerated_percent[is.na(personabuse_incarcerated_percent)] <- '0.0%'
personabuse_incarcerated_percent

personabuse_linkage_declined_percent <- percent(personabuse_linkage_declined/personabuse_ineligible_ltc, accuracy = 0.1)
personabuse_linkage_declined_percent
personabuse_linkage_declined_percent[is.na(personabuse_linkage_declined_percent)] <- '0.0%'
personabuse_linkage_declined_percent

personabuse_ongoing_linkage_percent <- percent(personabuse_ongoing_linkage/personabuse_ineligible_ltc, accuracy = 0.1)
personabuse_ongoing_linkage_percent
personabuse_ongoing_linkage_percent[is.na(personabuse_ongoing_linkage_percent)] <- '0.0%'
personabuse_ongoing_linkage_percent


# personabuse Eligibility to be Linked
enc$personabuse_eligible_ltc[enc$personabuse_ltc_cases == 1 &
                               (is.na(enc$personabuse_already_linked) &
                                  is.na(enc$personabuse_deceased) &
                                  is.na(enc$personabuse_incarcerated) &
                                  is.na(enc$personabuse_linkage_declined) &
                                  is.na(enc$personabuse_ongoing_linkage))] <- 1
table(enc$personabuse_eligible_ltc)

table(enc$personabuse_eligible_ltc)
personabuse_eligible_ltc <- enc[which(enc$personabuse_eligible_ltc == 1), ]
dim(personabuse_eligible_ltc)
personabuse_eligible_ltc <- nrow(personabuse_eligible_ltc)
personabuse_eligible_ltc

personabuse_eligible_ltc_percent <- percent(personabuse_eligible_ltc/personabuse_ltc_cases, accuracy = 0.1)
personabuse_eligible_ltc_percent
personabuse_eligible_ltc_percent[is.na(personabuse_eligible_ltc_percent)] <- '0.0%'
personabuse_eligible_ltc_percent


# personabuse Open/Closed Cases
table(enc$ltc_personabuse_open_case_calc)
enc$personabuse_in_progress[enc$personabuse_eligible_ltc == 1 &
                              enc$ltc_abuse_open_case_calc == 1] <- 1
table(enc$personabuse_in_progress)

table(enc$personabuse_in_progress)
personabuse_in_progress <- enc[which(enc$personabuse_in_progress == 1), ]
dim(personabuse_in_progress)
personabuse_in_progress <- nrow(personabuse_in_progress)
personabuse_in_progress

personabuse_in_progress_percent <- percent(personabuse_in_progress/personabuse_eligible_ltc, accuracy = 0.1)
personabuse_in_progress_percent
personabuse_in_progress_percent[is.na(personabuse_in_progress_percent)] <- '0.0%'
personabuse_in_progress_percent



table(enc$personabuse_in_progress)
enc$personabuse_ltc_cases_days_open <- difftime(Sys.Date(), enc$enc_date, units="days")
table(enc$personabuse_ltc_cases_days_open)
enc$personabuse_in_progress_90days[enc$personabuse_in_progress == 1 &
                                     (enc$personabuse_ltc_cases_days_open > 90)] <- 1
table(enc$personabuse_in_progress_90days)

table(enc$personabuse_in_progress_90days)
personabuse_in_progress_90days <- enc[which(enc$personabuse_in_progress_90days == 1), ]
dim(personabuse_in_progress_90days)
personabuse_in_progress_90days <- nrow(personabuse_in_progress_90days)
personabuse_in_progress_90days

personabuse_in_progress_90days_percent <- percent(personabuse_in_progress_90days/personabuse_in_progress, accuracy = 0.1)
personabuse_in_progress_90days_percent
personabuse_in_progress_90days_percent[is.na(personabuse_in_progress_90days_percent)] <- '0.0%'
personabuse_in_progress_90days_percent



table(enc$personabuse_eligible_ltc, enc$personabuse_in_progress)
enc$personabuse_closed_case[enc$personabuse_eligible_ltc == 1 &
                              is.na(enc$personabuse_in_progress)] <- 1
table(enc$personabuse_closed_case)

table(enc$personabuse_closed_case)
personabuse_closed_case <- enc[which(enc$personabuse_closed_case == 1), ]
dim(personabuse_closed_case)
personabuse_closed_case <- nrow(personabuse_closed_case)
personabuse_closed_case

personabuse_closed_case_percent <- percent(personabuse_closed_case/personabuse_eligible_ltc, accuracy = 0.1)
personabuse_closed_case_percent
personabuse_closed_case_percent[is.na(personabuse_closed_case_percent)] <- '0.0%'
personabuse_closed_case_percent


# personabuse Cases Linked to Care
table(enc$personabuse_closed_case, enc$ltc_abuse_final_ltc_status)
enc$personabuse_linked[enc$personabuse_closed_case == 1 &
                         enc$ltc_abuse_final_ltc_status == 1] <- 1
table(enc$personabuse_linked)

table(enc$personabuse_linked)
personabuse_linked <- enc[which(enc$personabuse_linked == 1), ]
dim(personabuse_linked)
personabuse_linked <- nrow(personabuse_linked)
personabuse_linked

personabuse_linked_percent <- percent(personabuse_linked/personabuse_closed_case, accuracy = 0.1)
personabuse_linked_percent
personabuse_linked_percent[is.na(personabuse_linked_percent)] <- '0.0%'
personabuse_linked_percent



enc$personabuse_not_linked[enc$personabuse_eligible_ltc == 1 & is.na(enc$personabuse_in_progress) & is.na(enc$personabuse_linked)] <- 1
table(enc$personabuse_not_linked)

table(enc$personabuse_not_linked)
personabuse_not_linked <- enc[which(enc$personabuse_not_linked == 1), ]
dim(personabuse_not_linked)
personabuse_not_linked <- nrow(personabuse_not_linked)
personabuse_not_linked

personabuse_not_linked_percent <- percent(personabuse_not_linked/personabuse_closed_case, accuracy = 0.1)
personabuse_not_linked_percent
personabuse_not_linked_percent[is.na(personabuse_not_linked_percent)] <- '0.0%'
personabuse_not_linked_percent



# personabuse Reasons Not Linked to Care
enc$personabuse_not_linked_med_staff[(enc$personabuse_closed_case == 1 & is.na(enc$personabuse_linked)) &
                                       (enc$ltc_abuse_prevented_rsn___1 == 1 |
                                          enc$ltc_abuse_prevented_rsn___2 == 1 |
                                          enc$ltc_abuse_prevented_rsn___11 == 1)] <- 1
table(enc$personabuse_not_linked_med_staff)

table(enc$personabuse_not_linked_med_staff)
personabuse_not_linked_med_staff <- enc[which(enc$personabuse_not_linked_med_staff == 1), ]
dim(personabuse_not_linked_med_staff)
personabuse_not_linked_med_staff <- nrow(personabuse_not_linked_med_staff)
personabuse_not_linked_med_staff

personabuse_not_linked_med_staff_percent <- percent(personabuse_not_linked_med_staff/personabuse_not_linked, accuracy = 0.1)
personabuse_not_linked_med_staff_percent
personabuse_not_linked_med_staff_percent[is.na(personabuse_not_linked_med_staff_percent)] <- '0.0%'
personabuse_not_linked_med_staff_percent



enc$personabuse_not_linked_family[(enc$personabuse_closed_case == 1 & is.na(enc$personabuse_linked)) &
                                    (enc$ltc_abuse_prevented_rsn___3 == 1)] <- 1
table(enc$personabuse_not_linked_family)

table(enc$personabuse_not_linked_family)
personabuse_not_linked_family <- enc[which(enc$personabuse_not_linked_family == 1), ]
dim(personabuse_not_linked_family)
personabuse_not_linked_family <- nrow(personabuse_not_linked_family)
personabuse_not_linked_family

personabuse_not_linked_family_percent <- percent(personabuse_not_linked_family/personabuse_not_linked, accuracy = 0.1)
personabuse_not_linked_family_percent
personabuse_not_linked_family_percent[is.na(personabuse_not_linked_family_percent)] <- '0.0%'
personabuse_not_linked_family_percent



enc$personabuse_not_linked_not_talking[(enc$personabuse_closed_case == 1 & is.na(enc$personabuse_linked)) &
                                         (enc$ltc_abuse_prevented_rsn___4 == 1)] <- 1
table(enc$personabuse_not_linked_not_talking)

table(enc$personabuse_not_linked_not_talking)
personabuse_not_linked_not_talking <- enc[which(enc$personabuse_not_linked_not_talking == 1), ]
dim(personabuse_not_linked_not_talking)
personabuse_not_linked_not_talking <- nrow(personabuse_not_linked_not_talking)
personabuse_not_linked_not_talking

personabuse_not_linked_not_talking_percent <- percent(personabuse_not_linked_not_talking/personabuse_not_linked, accuracy = 0.1)
personabuse_not_linked_not_talking_percent
personabuse_not_linked_not_talking_percent[is.na(personabuse_not_linked_not_talking_percent)] <- '0.0%'
personabuse_not_linked_not_talking_percent



enc$personabuse_not_linked_safety[(enc$personabuse_closed_case == 1 & is.na(enc$personabuse_linked)) &
                                    (enc$ltc_abuse_prevented_rsn___5 == 1)] <- 1
table(enc$personabuse_not_linked_safety)

table(enc$personabuse_not_linked_safety)
personabuse_not_linked_safety <- enc[which(enc$personabuse_not_linked_safety == 1), ]
dim(personabuse_not_linked_safety)
personabuse_not_linked_safety <- nrow(personabuse_not_linked_safety)
personabuse_not_linked_safety

personabuse_not_linked_safety_percent <- percent(personabuse_not_linked_safety/personabuse_not_linked, accuracy = 0.1)
personabuse_not_linked_safety_percent
personabuse_not_linked_safety_percent[is.na(personabuse_not_linked_safety_percent)] <- '0.0%'
personabuse_not_linked_safety_percent



enc$personabuse_not_linked_medical[(enc$personabuse_closed_case == 1 & is.na(enc$personabuse_linked)) &
                                     (enc$ltc_abuse_prevented_rsn___6 == 1 |
                                        enc$ltc_abuse_prevented_rsn___8)] <- 1
table(enc$personabuse_not_linked_medical)

table(enc$personabuse_not_linked_medical)
personabuse_not_linked_medical <- enc[which(enc$personabuse_not_linked_medical == 1), ]
dim(personabuse_not_linked_medical)
personabuse_not_linked_medical <- nrow(personabuse_not_linked_medical)
personabuse_not_linked_medical

personabuse_not_linked_medical_percent <- percent(personabuse_not_linked_medical/personabuse_not_linked, accuracy = 0.1)
personabuse_not_linked_medical_percent
personabuse_not_linked_medical_percent[is.na(personabuse_not_linked_medical_percent)] <- '0.0%'
personabuse_not_linked_medical_percent



enc$personabuse_not_linked_contact[(enc$personabuse_closed_case == 1 & is.na(enc$personabuse_linked)) &
                                     (enc$ltc_abuse_prevented_rsn___20 == 1)] <- 1
table(enc$personabuse_not_linked_contact)

table(enc$personabuse_not_linked_contact)
personabuse_not_linked_contact <- enc[which(enc$personabuse_not_linked_contact == 1), ]
dim(personabuse_not_linked_contact)
personabuse_not_linked_contact <- nrow(personabuse_not_linked_contact)
personabuse_not_linked_contact

personabuse_not_linked_contact_percent <- percent(personabuse_not_linked_contact/personabuse_not_linked, accuracy = 0.1)
personabuse_not_linked_contact_percent
personabuse_not_linked_contact_percent[is.na(personabuse_not_linked_contact_percent)] <- '0.0%'
personabuse_not_linked_contact_percent



enc$personabuse_not_linked_language[(enc$personabuse_closed_case == 1 & is.na(enc$personabuse_linked)) &
                                      (enc$ltc_abuse_prevented_rsn___9 == 1)] <- 1
table(enc$personabuse_not_linked_language)

table(enc$personabuse_not_linked_language)
personabuse_not_linked_language <- enc[which(enc$personabuse_not_linked_language == 1), ]
dim(personabuse_not_linked_language)
personabuse_not_linked_language <- nrow(personabuse_not_linked_language)
personabuse_not_linked_language

personabuse_not_linked_language_percent <- percent(personabuse_not_linked_language/personabuse_not_linked, accuracy = 0.1)
personabuse_not_linked_language_percent
personabuse_not_linked_language_percent[is.na(personabuse_not_linked_language_percent)] <- '0.0%'
personabuse_not_linked_language_percent



enc$personabuse_not_linked_other[(enc$personabuse_closed_case == 1 & is.na(enc$personabuse_linked)) &
                                   (enc$ltc_abuse_prevented_rsn___0 == 1)] <- 1
table(enc$personabuse_not_linked_other)

table(enc$personabuse_not_linked_other)
personabuse_not_linked_other <- enc[which(enc$personabuse_not_linked_other == 1), ]
dim(personabuse_not_linked_other)
personabuse_not_linked_other <- nrow(personabuse_not_linked_other)
personabuse_not_linked_other

personabuse_not_linked_other_percent <- percent(personabuse_not_linked_other/personabuse_not_linked, accuracy = 0.1)
personabuse_not_linked_other_percent
personabuse_not_linked_other_percent[is.na(personabuse_not_linked_other_percent)] <- '0.0%'
personabuse_not_linked_other_percent


###############  general Linkage  ###############

enc$general_ltc_cases[enc$ltc_coordinator_per_case___71 == 1 &
                        enc$additional_services___7 == 1] <- 1
table(enc$general_ltc_cases)
general_ltc_cases <- enc[which(enc$general_ltc_cases == 1), ]
general_ltc_cases <- nrow(general_ltc_cases)
general_ltc_cases

general_ltc_cases_percent <- percent(general_ltc_cases/ltc_cases, accuracy = 0.1)
general_ltc_cases_percent
general_ltc_cases_percent[is.na(general_ltc_cases_percent)] <- '0.0%'
general_ltc_cases_percent


# Ineligible general Linkage - Already Linked
table(enc$ltc_general_declined_rsn___23)
enc$general_already_linked[enc$general_ltc_cases == 1 &
                             (enc$ltc_general_declined_rsn___23 == 1)] <- 1
table(enc$general_already_linked)

table(enc$general_already_linked)
general_already_linked <- enc[which(enc$general_already_linked == 1), ]
dim(general_already_linked)
general_already_linked <- nrow(general_already_linked)
general_already_linked


# Ineligible general Linkage - Deceased
table(enc$ltc_general_declined_rsn___35)
table(enc$ltc_general_prevented_rsn___17)
enc$general_deceased[enc$general_ltc_cases == 1 &
                       (enc$ltc_general_declined_rsn___35 == 1 |
                          enc$ltc_general_prevented_rsn___17 == 1)] <- 1
table(enc$general_deceased)

table(enc$general_deceased)
general_deceased <- enc[which(enc$general_deceased == 1), ]
dim(general_deceased)
general_deceased <- nrow(general_deceased)
general_deceased


# Ineligible general Linkage - Incarcerated
table(enc$ltc_general_prevented_rsn___12)
enc$general_incarcerated[enc$general_ltc_cases == 1 &
                           enc$ltc_general_prevented_rsn___12 == 1] <- 1
table(enc$general_incarcerated)

table(enc$general_incarcerated)
general_incarcerated <- enc[which(enc$general_incarcerated == 1), ]
dim(general_incarcerated)
general_incarcerated <- nrow(general_incarcerated)
general_incarcerated


# Ineligible general Linkage - Declined Linkage Service
table(enc$ltc_general_final_ltc_status)
enc$general_linkage_declined[(enc$general_ltc_cases == 1 &
                                enc$ltc_general_final_ltc_status == 2) &
                               (is.na(enc$general_already_linked) &
                                  is.na(enc$general_deceased) &
                                  is.na(enc$general_incarcerated))] <- 1
table(enc$general_linkage_declined)

table(enc$general_linkage_declined)
general_linkage_declined <- enc[which(enc$general_linkage_declined == 1), ]
dim(general_linkage_declined)
general_linkage_declined <- nrow(general_linkage_declined)
general_linkage_declined


# Ineligible general Linkage - Linkage in Progress
table(enc$ltc_general_prevented_rsn___18)
enc$general_ongoing_linkage[enc$general_ltc_cases == 1 &
                              enc$ltc_general_prevented_rsn___18 == 1] <- 1
table(enc$general_ongoing_linkage)

table(enc$general_ongoing_linkage)
general_ongoing_linkage <- enc[which(enc$general_ongoing_linkage == 1), ]
dim(general_ongoing_linkage)
general_ongoing_linkage <- nrow(general_ongoing_linkage)
general_ongoing_linkage


# general Ineligible Cases
enc$general_ineligible_ltc[enc$general_already_linked == 1 |
                             enc$general_deceased == 1 |
                             enc$general_incarcerated == 1 |
                             enc$general_linkage_declined == 1 |
                             enc$general_ongoing_linkage == 1] <- 1
table(enc$general_ineligible_ltc)

table(enc$general_ineligible_ltc)
general_ineligible_ltc <- enc[which(enc$general_ineligible_ltc == 1), ]
dim(general_ineligible_ltc)
general_ineligible_ltc <- nrow(general_ineligible_ltc)
general_ineligible_ltc

general_ineligible_ltc_percent <- percent(general_ineligible_ltc/general_ltc_cases, accuracy = 0.1)
general_ineligible_ltc_percent
general_ineligible_ltc_percent[is.na(general_ineligible_ltc_percent)] <- '0.0%'
general_ineligible_ltc_percent

general_already_linked_percent <- percent(general_already_linked/general_ineligible_ltc, accuracy = 0.1)
general_already_linked_percent
general_already_linked_percent[is.na(general_already_linked_percent)] <- '0.0%'
general_already_linked_percent

general_deceased_percent <- percent(general_deceased/general_ineligible_ltc, accuracy = 0.1)
general_deceased_percent
general_deceased_percent[is.na(general_deceased_percent)] <- '0.0%'
general_deceased_percent

general_incarcerated_percent <- percent(general_incarcerated/general_ineligible_ltc, accuracy = 0.1)
general_incarcerated_percent
general_incarcerated_percent[is.na(general_incarcerated_percent)] <- '0.0%'
general_incarcerated_percent

general_linkage_declined_percent <- percent(general_linkage_declined/general_ineligible_ltc, accuracy = 0.1)
general_linkage_declined_percent
general_linkage_declined_percent[is.na(general_linkage_declined_percent)] <- '0.0%'
general_linkage_declined_percent

general_ongoing_linkage_percent <- percent(general_ongoing_linkage/general_ineligible_ltc, accuracy = 0.1)
general_ongoing_linkage_percent
general_ongoing_linkage_percent[is.na(general_ongoing_linkage_percent)] <- '0.0%'
general_ongoing_linkage_percent


# general Eligibility to be Linked
enc$general_eligible_ltc[enc$general_ltc_cases == 1 &
                           (is.na(enc$general_already_linked) &
                              is.na(enc$general_deceased) &
                              is.na(enc$general_incarcerated) &
                              is.na(enc$general_linkage_declined) &
                              is.na(enc$general_ongoing_linkage))] <- 1
table(enc$general_eligible_ltc)

table(enc$general_eligible_ltc)
general_eligible_ltc <- enc[which(enc$general_eligible_ltc == 1), ]
dim(general_eligible_ltc)
general_eligible_ltc <- nrow(general_eligible_ltc)
general_eligible_ltc

general_eligible_ltc_percent <- percent(general_eligible_ltc/general_ltc_cases, accuracy = 0.1)
general_eligible_ltc_percent
general_eligible_ltc_percent[is.na(general_eligible_ltc_percent)] <- '0.0%'
general_eligible_ltc_percent


# general Open/Closed Cases
table(enc$ltc_general_open_case_calc)
enc$general_in_progress[enc$general_eligible_ltc == 1 &
                          enc$ltc_general_open_case_calc == 1] <- 1
table(enc$general_in_progress)

table(enc$general_in_progress)
general_in_progress <- enc[which(enc$general_in_progress == 1), ]
dim(general_in_progress)
general_in_progress <- nrow(general_in_progress)
general_in_progress

general_in_progress_percent <- percent(general_in_progress/general_eligible_ltc, accuracy = 0.1)
general_in_progress_percent
general_in_progress_percent[is.na(general_in_progress_percent)] <- '0.0%'
general_in_progress_percent



table(enc$general_in_progress)
enc$general_ltc_cases_days_open <- difftime(Sys.Date(), enc$enc_date, units="days")
table(enc$general_ltc_cases_days_open)
enc$general_in_progress_90days[enc$general_in_progress == 1 &
                                 (enc$general_ltc_cases_days_open > 90)] <- 1
table(enc$general_in_progress_90days)

table(enc$general_in_progress_90days)
general_in_progress_90days <- enc[which(enc$general_in_progress_90days == 1), ]
dim(general_in_progress_90days)
general_in_progress_90days <- nrow(general_in_progress_90days)
general_in_progress_90days

general_in_progress_90days_percent <- percent(general_in_progress_90days/general_in_progress, accuracy = 0.1)
general_in_progress_90days_percent
general_in_progress_90days_percent[is.na(general_in_progress_90days_percent)] <- '0.0%'
general_in_progress_90days_percent



table(enc$general_eligible_ltc, enc$general_in_progress)
enc$general_closed_case[enc$general_eligible_ltc == 1 &
                          is.na(enc$general_in_progress)] <- 1
table(enc$general_closed_case)

table(enc$general_closed_case)
general_closed_case <- enc[which(enc$general_closed_case == 1), ]
dim(general_closed_case)
general_closed_case <- nrow(general_closed_case)
general_closed_case

general_closed_case_percent <- percent(general_closed_case/general_eligible_ltc, accuracy = 0.1)
general_closed_case_percent
general_closed_case_percent[is.na(general_closed_case_percent)] <- '0.0%'
general_closed_case_percent


# general Cases Linked to Care
table(enc$general_closed_case, enc$ltc_general_final_ltc_status)
enc$general_linked[enc$general_closed_case == 1 &
                     enc$ltc_general_final_ltc_status == 1] <- 1
table(enc$general_linked)

table(enc$general_linked)
general_linked <- enc[which(enc$general_linked == 1), ]
dim(general_linked)
general_linked <- nrow(general_linked)
general_linked

general_linked_percent <- percent(general_linked/general_closed_case, accuracy = 0.1)
general_linked_percent
general_linked_percent[is.na(general_linked_percent)] <- '0.0%'
general_linked_percent



enc$general_not_linked[enc$general_eligible_ltc == 1 & is.na(enc$general_in_progress) & is.na(enc$general_linked)] <- 1
table(enc$general_not_linked)

table(enc$general_not_linked)
general_not_linked <- enc[which(enc$general_not_linked == 1), ]
dim(general_not_linked)
general_not_linked <- nrow(general_not_linked)
general_not_linked

general_not_linked_percent <- percent(general_not_linked/general_closed_case, accuracy = 0.1)
general_not_linked_percent
general_not_linked_percent[is.na(general_not_linked_percent)] <- '0.0%'
general_not_linked_percent



# general Reasons Not Linked to Care
enc$general_not_linked_med_staff[(enc$general_closed_case == 1 & is.na(enc$general_linked)) &
                                   (enc$ltc_general_prevented_rsn___1 == 1 |
                                      enc$ltc_general_prevented_rsn___2 == 1 |
                                      enc$ltc_general_prevented_rsn___11 == 1)] <- 1
table(enc$general_not_linked_med_staff)

table(enc$general_not_linked_med_staff)
general_not_linked_med_staff <- enc[which(enc$general_not_linked_med_staff == 1), ]
dim(general_not_linked_med_staff)
general_not_linked_med_staff <- nrow(general_not_linked_med_staff)
general_not_linked_med_staff

general_not_linked_med_staff_percent <- percent(general_not_linked_med_staff/general_not_linked, accuracy = 0.1)
general_not_linked_med_staff_percent
general_not_linked_med_staff_percent[is.na(general_not_linked_med_staff_percent)] <- '0.0%'
general_not_linked_med_staff_percent



enc$general_not_linked_family[(enc$general_closed_case == 1 & is.na(enc$general_linked)) &
                                (enc$ltc_general_prevented_rsn___3 == 1)] <- 1
table(enc$general_not_linked_family)

table(enc$general_not_linked_family)
general_not_linked_family <- enc[which(enc$general_not_linked_family == 1), ]
dim(general_not_linked_family)
general_not_linked_family <- nrow(general_not_linked_family)
general_not_linked_family

general_not_linked_family_percent <- percent(general_not_linked_family/general_not_linked, accuracy = 0.1)
general_not_linked_family_percent
general_not_linked_family_percent[is.na(general_not_linked_family_percent)] <- '0.0%'
general_not_linked_family_percent



enc$general_not_linked_not_talking[(enc$general_closed_case == 1 & is.na(enc$general_linked)) &
                                     (enc$ltc_general_prevented_rsn___4 == 1)] <- 1
table(enc$general_not_linked_not_talking)

table(enc$general_not_linked_not_talking)
general_not_linked_not_talking <- enc[which(enc$general_not_linked_not_talking == 1), ]
dim(general_not_linked_not_talking)
general_not_linked_not_talking <- nrow(general_not_linked_not_talking)
general_not_linked_not_talking

general_not_linked_not_talking_percent <- percent(general_not_linked_not_talking/general_not_linked, accuracy = 0.1)
general_not_linked_not_talking_percent
general_not_linked_not_talking_percent[is.na(general_not_linked_not_talking_percent)] <- '0.0%'
general_not_linked_not_talking_percent



enc$general_not_linked_safety[(enc$general_closed_case == 1 & is.na(enc$general_linked)) &
                                (enc$ltc_general_prevented_rsn___5 == 1)] <- 1
table(enc$general_not_linked_safety)

table(enc$general_not_linked_safety)
general_not_linked_safety <- enc[which(enc$general_not_linked_safety == 1), ]
dim(general_not_linked_safety)
general_not_linked_safety <- nrow(general_not_linked_safety)
general_not_linked_safety

general_not_linked_safety_percent <- percent(general_not_linked_safety/general_not_linked, accuracy = 0.1)
general_not_linked_safety_percent
general_not_linked_safety_percent[is.na(general_not_linked_safety_percent)] <- '0.0%'
general_not_linked_safety_percent



enc$general_not_linked_medical[(enc$general_closed_case == 1 & is.na(enc$general_linked)) &
                                 (enc$ltc_general_prevented_rsn___6 == 1 |
                                    enc$ltc_general_prevented_rsn___8)] <- 1
table(enc$general_not_linked_medical)

table(enc$general_not_linked_medical)
general_not_linked_medical <- enc[which(enc$general_not_linked_medical == 1), ]
dim(general_not_linked_medical)
general_not_linked_medical <- nrow(general_not_linked_medical)
general_not_linked_medical

general_not_linked_medical_percent <- percent(general_not_linked_medical/general_not_linked, accuracy = 0.1)
general_not_linked_medical_percent
general_not_linked_medical_percent[is.na(general_not_linked_medical_percent)] <- '0.0%'
general_not_linked_medical_percent



enc$general_not_linked_contact[(enc$general_closed_case == 1 & is.na(enc$general_linked)) &
                                 (enc$ltc_general_prevented_rsn___20 == 1)] <- 1
table(enc$general_not_linked_contact)

table(enc$general_not_linked_contact)
general_not_linked_contact <- enc[which(enc$general_not_linked_contact == 1), ]
dim(general_not_linked_contact)
general_not_linked_contact <- nrow(general_not_linked_contact)
general_not_linked_contact

general_not_linked_contact_percent <- percent(general_not_linked_contact/general_not_linked, accuracy = 0.1)
general_not_linked_contact_percent
general_not_linked_contact_percent[is.na(general_not_linked_contact_percent)] <- '0.0%'
general_not_linked_contact_percent



enc$general_not_linked_language[(enc$general_closed_case == 1 & is.na(enc$general_linked)) &
                                  (enc$ltc_general_prevented_rsn___9 == 1)] <- 1
table(enc$general_not_linked_language)

table(enc$general_not_linked_language)
general_not_linked_language <- enc[which(enc$general_not_linked_language == 1), ]
dim(general_not_linked_language)
general_not_linked_language <- nrow(general_not_linked_language)
general_not_linked_language

general_not_linked_language_percent <- percent(general_not_linked_language/general_not_linked, accuracy = 0.1)
general_not_linked_language_percent
general_not_linked_language_percent[is.na(general_not_linked_language_percent)] <- '0.0%'
general_not_linked_language_percent



enc$general_not_linked_other[(enc$general_closed_case == 1 & is.na(enc$general_linked)) &
                               (enc$ltc_general_prevented_rsn___0 == 1)] <- 1
table(enc$general_not_linked_other)

table(enc$general_not_linked_other)
general_not_linked_other <- enc[which(enc$general_not_linked_other == 1), ]
dim(general_not_linked_other)
general_not_linked_other <- nrow(general_not_linked_other)
general_not_linked_other

general_not_linked_other_percent <- percent(general_not_linked_other/general_not_linked, accuracy = 0.1)
general_not_linked_other_percent
general_not_linked_other_percent[is.na(general_not_linked_other_percent)] <- '0.0%'
general_not_linked_other_percent


###############  other Linkage  ###############

enc$other_ltc_cases[enc$ltc_coordinator_per_case___71 == 1 &
                      enc$additional_services___0 == 1] <- 1
table(enc$other_ltc_cases)
other_ltc_cases <- enc[which(enc$other_ltc_cases == 1), ]
other_ltc_cases <- nrow(other_ltc_cases)
other_ltc_cases

other_ltc_cases_percent <- percent(other_ltc_cases/ltc_cases, accuracy = 0.1)
other_ltc_cases_percent
other_ltc_cases_percent[is.na(other_ltc_cases_percent)] <- '0.0%'
other_ltc_cases_percent


# Ineligible other Linkage - Already Linked
table(enc$ltc_other_declined_rsn___23)
enc$other_already_linked[enc$other_ltc_cases == 1 &
                           (enc$ltc_other_declined_rsn___23 == 1)] <- 1
table(enc$other_already_linked)

table(enc$other_already_linked)
other_already_linked <- enc[which(enc$other_already_linked == 1), ]
dim(other_already_linked)
other_already_linked <- nrow(other_already_linked)
other_already_linked


# Ineligible other Linkage - Deceased
table(enc$ltc_other_declined_rsn___35)
table(enc$ltc_other_prevented_rsn___17)
enc$other_deceased[enc$other_ltc_cases == 1 &
                     (enc$ltc_other_declined_rsn___35 == 1 |
                        enc$ltc_other_prevented_rsn___17 == 1)] <- 1
table(enc$other_deceased)

table(enc$other_deceased)
other_deceased <- enc[which(enc$other_deceased == 1), ]
dim(other_deceased)
other_deceased <- nrow(other_deceased)
other_deceased


# Ineligible other Linkage - Incarcerated
table(enc$ltc_other_prevented_rsn___12)
enc$other_incarcerated[enc$other_ltc_cases == 1 &
                         enc$ltc_other_prevented_rsn___12 == 1] <- 1
table(enc$other_incarcerated)

table(enc$other_incarcerated)
other_incarcerated <- enc[which(enc$other_incarcerated == 1), ]
dim(other_incarcerated)
other_incarcerated <- nrow(other_incarcerated)
other_incarcerated


# Ineligible other Linkage - Declined Linkage Service
table(enc$ltc_other_final_ltc_status)
enc$other_linkage_declined[(enc$other_ltc_cases == 1 &
                              enc$ltc_other_final_ltc_status == 2) &
                             (is.na(enc$other_already_linked) &
                                is.na(enc$other_deceased) &
                                is.na(enc$other_incarcerated))] <- 1
table(enc$other_linkage_declined)

table(enc$other_linkage_declined)
other_linkage_declined <- enc[which(enc$other_linkage_declined == 1), ]
dim(other_linkage_declined)
other_linkage_declined <- nrow(other_linkage_declined)
other_linkage_declined


# Ineligible other Linkage - Linkage in Progress
table(enc$ltc_other_prevented_rsn___18)
enc$other_ongoing_linkage[enc$other_ltc_cases == 1 &
                            enc$ltc_other_prevented_rsn___18 == 1] <- 1
table(enc$other_ongoing_linkage)

table(enc$other_ongoing_linkage)
other_ongoing_linkage <- enc[which(enc$other_ongoing_linkage == 1), ]
dim(other_ongoing_linkage)
other_ongoing_linkage <- nrow(other_ongoing_linkage)
other_ongoing_linkage


# other Ineligible Cases
enc$other_ineligible_ltc[enc$other_already_linked == 1 |
                           enc$other_deceased == 1 |
                           enc$other_incarcerated == 1 |
                           enc$other_linkage_declined == 1 |
                           enc$other_ongoing_linkage == 1] <- 1
table(enc$other_ineligible_ltc)

table(enc$other_ineligible_ltc)
other_ineligible_ltc <- enc[which(enc$other_ineligible_ltc == 1), ]
dim(other_ineligible_ltc)
other_ineligible_ltc <- nrow(other_ineligible_ltc)
other_ineligible_ltc

other_ineligible_ltc_percent <- percent(other_ineligible_ltc/other_ltc_cases, accuracy = 0.1)
other_ineligible_ltc_percent

other_already_linked_percent <- percent(other_already_linked/other_ineligible_ltc, accuracy = 0.1)
other_already_linked_percent
other_already_linked_percent[is.na(other_already_linked_percent)] <- '0.0%'
other_already_linked_percent

other_deceased_percent <- percent(other_deceased/other_ineligible_ltc, accuracy = 0.1)
other_deceased_percent
other_deceased_percent[is.na(other_deceased_percent)] <- '0.0%'
other_deceased_percent

other_incarcerated_percent <- percent(other_incarcerated/other_ineligible_ltc, accuracy = 0.1)
other_incarcerated_percent
other_incarcerated_percent[is.na(other_incarcerated_percent)] <- '0.0%'
other_incarcerated_percent

other_linkage_declined_percent <- percent(other_linkage_declined/other_ineligible_ltc, accuracy = 0.1)
other_linkage_declined_percent
other_linkage_declined_percent[is.na(other_linkage_declined_percent)] <- '0.0%'
other_linkage_declined_percent

other_ongoing_linkage_percent <- percent(other_ongoing_linkage/other_ineligible_ltc, accuracy = 0.1)
other_ongoing_linkage_percent
other_ongoing_linkage_percent[is.na(other_ongoing_linkage_percent)] <- '0.0%'
other_ongoing_linkage_percent


# other Eligibility to be Linked
enc$other_eligible_ltc[enc$other_ltc_cases == 1 &
                         (is.na(enc$other_already_linked) &
                            is.na(enc$other_deceased) &
                            is.na(enc$other_incarcerated) &
                            is.na(enc$other_linkage_declined) &
                            is.na(enc$other_ongoing_linkage))] <- 1
table(enc$other_eligible_ltc)

table(enc$other_eligible_ltc)
other_eligible_ltc <- enc[which(enc$other_eligible_ltc == 1), ]
dim(other_eligible_ltc)
other_eligible_ltc <- nrow(other_eligible_ltc)
other_eligible_ltc

other_eligible_ltc_percent <- percent(other_eligible_ltc/other_ltc_cases, accuracy = 0.1)
other_eligible_ltc_percent
other_eligible_ltc_percent[is.na(other_eligible_ltc_percent)] <- '0.0%'
other_eligible_ltc_percent


# other Open/Closed Cases
table(enc$ltc_other_open_case_calc)
enc$other_in_progress[enc$other_eligible_ltc == 1 &
                        enc$ltc_other_open_case_calc == 1] <- 1
table(enc$other_in_progress)

table(enc$other_in_progress)
other_in_progress <- enc[which(enc$other_in_progress == 1), ]
dim(other_in_progress)
other_in_progress <- nrow(other_in_progress)
other_in_progress

other_in_progress_percent <- percent(other_in_progress/other_eligible_ltc, accuracy = 0.1)
other_in_progress_percent
other_in_progress_percent[is.na(other_in_progress_percent)] <- '0.0%'
other_in_progress_percent



table(enc$other_in_progress)
enc$other_ltc_cases_days_open <- difftime(Sys.Date(), enc$enc_date, units="days")
table(enc$other_ltc_cases_days_open)
enc$other_in_progress_90days[enc$other_in_progress == 1 &
                               (enc$other_ltc_cases_days_open > 90)] <- 1
table(enc$other_in_progress_90days)

table(enc$other_in_progress_90days)
other_in_progress_90days <- enc[which(enc$other_in_progress_90days == 1), ]
dim(other_in_progress_90days)
other_in_progress_90days <- nrow(other_in_progress_90days)
other_in_progress_90days

other_in_progress_90days_percent <- percent(other_in_progress_90days/other_in_progress, accuracy = 0.1)
other_in_progress_90days_percent
other_in_progress_90days_percent[is.na(other_in_progress_90days_percent)] <- '0.0%'
other_in_progress_90days_percent



table(enc$other_eligible_ltc, enc$other_in_progress)
enc$other_closed_case[enc$other_eligible_ltc == 1 &
                        is.na(enc$other_in_progress)] <- 1
table(enc$other_closed_case)

table(enc$other_closed_case)
other_closed_case <- enc[which(enc$other_closed_case == 1), ]
dim(other_closed_case)
other_closed_case <- nrow(other_closed_case)
other_closed_case

other_closed_case_percent <- percent(other_closed_case/other_eligible_ltc, accuracy = 0.1)
other_closed_case_percent
other_closed_case_percent[is.na(other_closed_case_percent)] <- '0.0%'
other_closed_case_percent


# other Cases Linked to Care
table(enc$other_closed_case, enc$ltc_other_final_ltc_status)
enc$other_linked[enc$other_closed_case == 1 &
                   enc$ltc_other_final_ltc_status == 1] <- 1
table(enc$other_linked)

table(enc$other_linked)
other_linked <- enc[which(enc$other_linked == 1), ]
dim(other_linked)
other_linked <- nrow(other_linked)
other_linked

other_linked_percent <- percent(other_linked/other_closed_case, accuracy = 0.1)
other_linked_percent
other_linked_percent[is.na(other_linked_percent)] <- '0.0%'
other_linked_percent



enc$other_not_linked[enc$other_eligible_ltc == 1 & is.na(enc$other_in_progress) & is.na(enc$other_linked)] <- 1
table(enc$other_not_linked)

table(enc$other_not_linked)
other_not_linked <- enc[which(enc$other_not_linked == 1), ]
dim(other_not_linked)
other_not_linked <- nrow(other_not_linked)
other_not_linked

other_not_linked_percent <- percent(other_not_linked/other_closed_case, accuracy = 0.1)
other_not_linked_percent
other_not_linked_percent[is.na(other_not_linked_percent)] <- '0.0%'
other_not_linked_percent



# other Reasons Not Linked to Care
enc$other_not_linked_med_staff[(enc$other_closed_case == 1 & is.na(enc$other_linked)) &
                                 (enc$ltc_other_prevented_rsn___1 == 1 |
                                    enc$ltc_other_prevented_rsn___2 == 1 |
                                    enc$ltc_other_prevented_rsn___11 == 1)] <- 1
table(enc$other_not_linked_med_staff)

table(enc$other_not_linked_med_staff)
other_not_linked_med_staff <- enc[which(enc$other_not_linked_med_staff == 1), ]
dim(other_not_linked_med_staff)
other_not_linked_med_staff <- nrow(other_not_linked_med_staff)
other_not_linked_med_staff

other_not_linked_med_staff_percent <- percent(other_not_linked_med_staff/other_not_linked, accuracy = 0.1)
other_not_linked_med_staff_percent
other_not_linked_med_staff_percent[is.na(other_not_linked_med_staff_percent)] <- '0.0%'
other_not_linked_med_staff_percent



enc$other_not_linked_family[(enc$other_closed_case == 1 & is.na(enc$other_linked)) &
                              (enc$ltc_other_prevented_rsn___3 == 1)] <- 1
table(enc$other_not_linked_family)

table(enc$other_not_linked_family)
other_not_linked_family <- enc[which(enc$other_not_linked_family == 1), ]
dim(other_not_linked_family)
other_not_linked_family <- nrow(other_not_linked_family)
other_not_linked_family

other_not_linked_family_percent <- percent(other_not_linked_family/other_not_linked, accuracy = 0.1)
other_not_linked_family_percent
other_not_linked_family_percent[is.na(other_not_linked_family_percent)] <- '0.0%'
other_not_linked_family_percent



enc$other_not_linked_not_talking[(enc$other_closed_case == 1 & is.na(enc$other_linked)) &
                                   (enc$ltc_other_prevented_rsn___4 == 1)] <- 1
table(enc$other_not_linked_not_talking)

table(enc$other_not_linked_not_talking)
other_not_linked_not_talking <- enc[which(enc$other_not_linked_not_talking == 1), ]
dim(other_not_linked_not_talking)
other_not_linked_not_talking <- nrow(other_not_linked_not_talking)
other_not_linked_not_talking

other_not_linked_not_talking_percent <- percent(other_not_linked_not_talking/other_not_linked, accuracy = 0.1)
other_not_linked_not_talking_percent
other_not_linked_not_talking_percent[is.na(other_not_linked_not_talking_percent)] <- '0.0%'
other_not_linked_not_talking_percent



enc$other_not_linked_safety[(enc$other_closed_case == 1 & is.na(enc$other_linked)) &
                              (enc$ltc_other_prevented_rsn___5 == 1)] <- 1
table(enc$other_not_linked_safety)

table(enc$other_not_linked_safety)
other_not_linked_safety <- enc[which(enc$other_not_linked_safety == 1), ]
dim(other_not_linked_safety)
other_not_linked_safety <- nrow(other_not_linked_safety)
other_not_linked_safety

other_not_linked_safety_percent <- percent(other_not_linked_safety/other_not_linked, accuracy = 0.1)
other_not_linked_safety_percent
other_not_linked_safety_percent[is.na(other_not_linked_safety_percent)] <- '0.0%'
other_not_linked_safety_percent



enc$other_not_linked_medical[(enc$other_closed_case == 1 & is.na(enc$other_linked)) &
                               (enc$ltc_other_prevented_rsn___6 == 1 |
                                  enc$ltc_other_prevented_rsn___8)] <- 1
table(enc$other_not_linked_medical)

table(enc$other_not_linked_medical)
other_not_linked_medical <- enc[which(enc$other_not_linked_medical == 1), ]
dim(other_not_linked_medical)
other_not_linked_medical <- nrow(other_not_linked_medical)
other_not_linked_medical

other_not_linked_medical_percent <- percent(other_not_linked_medical/other_not_linked, accuracy = 0.1)
other_not_linked_medical_percent
other_not_linked_medical_percent[is.na(other_not_linked_medical_percent)] <- '0.0%'
other_not_linked_medical_percent



enc$other_not_linked_contact[(enc$other_closed_case == 1 & is.na(enc$other_linked)) &
                               (enc$ltc_other_prevented_rsn___20 == 1)] <- 1
table(enc$other_not_linked_contact)

table(enc$other_not_linked_contact)
other_not_linked_contact <- enc[which(enc$other_not_linked_contact == 1), ]
dim(other_not_linked_contact)
other_not_linked_contact <- nrow(other_not_linked_contact)
other_not_linked_contact

other_not_linked_contact_percent <- percent(other_not_linked_contact/other_not_linked, accuracy = 0.1)
other_not_linked_contact_percent
other_not_linked_contact_percent[is.na(other_not_linked_contact_percent)] <- '0.0%'
other_not_linked_contact_percent



enc$other_not_linked_language[(enc$other_closed_case == 1 & is.na(enc$other_linked)) &
                                (enc$ltc_other_prevented_rsn___9 == 1)] <- 1
table(enc$other_not_linked_language)

table(enc$other_not_linked_language)
other_not_linked_language <- enc[which(enc$other_not_linked_language == 1), ]
dim(other_not_linked_language)
other_not_linked_language <- nrow(other_not_linked_language)
other_not_linked_language

other_not_linked_language_percent <- percent(other_not_linked_language/other_not_linked, accuracy = 0.1)
other_not_linked_language_percent
other_not_linked_language_percent[is.na(other_not_linked_language_percent)] <- '0.0%'
other_not_linked_language_percent



enc$other_not_linked_other[(enc$other_closed_case == 1 & is.na(enc$other_linked)) &
                             (enc$ltc_other_prevented_rsn___0 == 1)] <- 1
table(enc$other_not_linked_other)

table(enc$other_not_linked_other)
other_not_linked_other <- enc[which(enc$other_not_linked_other == 1), ]
dim(other_not_linked_other)
other_not_linked_other <- nrow(other_not_linked_other)
other_not_linked_other

other_not_linked_other_percent <- percent(other_not_linked_other/other_not_linked, accuracy = 0.1)
other_not_linked_other_percent
other_not_linked_other_percent[is.na(other_not_linked_other_percent)] <- '0.0%'
other_not_linked_other_percent


###############  Linkage Summary  ###############

table(enc$ltc_cases)
enc$total_ltc_cases <- enc$ltc_cases
table(enc$total_ltc_cases)
total_ltc_cases <- enc[which(enc$total_ltc_cases == 1), ]
dim(total_ltc_cases)
total_ltc_cases <- nrow(total_ltc_cases)
total_ltc_cases



enc$total_ineligible_ltc[enc$hiv_ineligible_ltc == 1 |
                           enc$hcv_ineligible_ltc == 1 |
                           enc$sud_ineligible_ltc == 1 |
                           enc$ht_ineligible_ltc == 1 |
                           enc$mh_ineligible_ltc == 1 |
                           enc$housing_ineligible_ltc == 1 |
                           enc$prep_ineligible_ltc == 1 |
                           enc$sti_ineligible_ltc == 1 |
                           enc$food_ineligible_ltc == 1 |
                           enc$financial_ineligible_ltc == 1 |
                           enc$personabuse_ineligible_ltc == 1 |
                           enc$general_ineligible_ltc == 1 |
                           enc$other_ineligible_ltc == 1] <- 1
table(enc$total_ineligible_ltc)
total_ineligible_ltc <- enc[which(enc$total_ineligible_ltc == 1), ]
dim(total_ineligible_ltc)
total_ineligible_ltc <- nrow(total_ineligible_ltc)
total_ineligible_ltc
total_ineligible_ltc_percent <- percent(total_ineligible_ltc/total_ltc_cases, accuracy = 0.1)
total_ineligible_ltc_percent
total_ineligible_ltc_percent[is.na(total_ineligible_ltc_percent)] <- '0.0%'
total_ineligible_ltc_percent


enc$total_eligible_ltc[enc$hiv_eligible_ltc == 1 |
                         enc$hcv_eligible_ltc == 1 |
                         enc$sud_eligible_ltc == 1 |
                         enc$ht_eligible_ltc == 1 |
                         enc$mh_eligible_ltc == 1 |
                         enc$housing_eligible_ltc == 1 |
                         enc$prep_eligible_ltc == 1 |
                         enc$sti_eligible_ltc == 1 |
                         enc$food_eligible_ltc == 1 |
                         enc$financial_eligible_ltc == 1 |
                         enc$personabuse_eligible_ltc == 1 |
                         enc$general_eligible_ltc == 1 |
                         enc$other_eligible_ltc == 1] <- 1
table(enc$total_eligible_ltc)
total_eligible_ltc <- enc[which(enc$total_eligible_ltc == 1), ]
dim(total_eligible_ltc)
total_eligible_ltc <- nrow(total_eligible_ltc)
total_eligible_ltc
total_eligible_ltc_percent <- percent(total_eligible_ltc/total_ltc_cases, accuracy = 0.1)
total_eligible_ltc_percent
total_eligible_ltc_percent[is.na(total_eligible_ltc_percent)] <- '0.0%'
total_eligible_ltc_percent


enc$total_in_progress_ltc[enc$hiv_in_progress == 1 |
                            enc$hcv_in_progress == 1 |
                            enc$sud_in_progress == 1 |
                            enc$ht_in_progress == 1 |
                            enc$mh_in_progress == 1 |
                            enc$housing_in_progress == 1 |
                            enc$prep_in_progress == 1 |
                            enc$sti_in_progress == 1 |
                            enc$food_in_progress == 1 |
                            enc$financial_in_progress == 1 |
                            enc$personabuse_in_progress == 1 |
                            enc$general_in_progress == 1 |
                            enc$other_in_progress == 1] <- 1
table(enc$total_in_progress_ltc)
total_in_progress_ltc <- enc[which(enc$total_in_progress_ltc == 1), ]
dim(total_in_progress_ltc)
total_in_progress_ltc <- nrow(total_in_progress_ltc)
total_in_progress_ltc
total_in_progress_ltc_percent <- percent(total_in_progress_ltc/total_eligible_ltc, accuracy = 0.1)
total_in_progress_ltc_percent
total_in_progress_ltc_percent[is.na(total_in_progress_ltc_percent)] <- '0.0%'
total_in_progress_ltc_percent


enc$total_in_progress_90days[enc$hiv_in_progress_90days == 1 |
                               enc$hcv_in_progress_90days == 1 |
                               enc$sud_in_progress_90days == 1 |
                               enc$ht_in_progress_90days == 1 |
                               enc$mh_in_progress_90days == 1 |
                               enc$housing_in_progress_90days == 1 |
                               enc$prep_in_progress_90days == 1 |
                               enc$sti_in_progress_90days == 1 |
                               enc$food_in_progress_90days == 1 |
                               enc$financial_in_progress_90days == 1 |
                               enc$personabuse_in_progress_90days == 1 |
                               enc$general_in_progress_90days == 1 |
                               enc$other_in_progress_90days == 1] <- 1
table(enc$total_in_progress_90days)
total_in_progress_90days <- enc[which(enc$total_in_progress_90days == 1), ]
dim(total_in_progress_90days)
total_in_progress_90days <- nrow(total_in_progress_90days)
total_in_progress_90days
total_in_progress_90days_percent <- percent(total_in_progress_90days/total_in_progress_ltc, accuracy = 0.1)
total_in_progress_90days_percent
total_in_progress_90days_percent[is.na(total_in_progress_90days_percent)] <- '0.0%'
total_in_progress_90days_percent


enc$total_closed_ltc[enc$hiv_closed_case == 1 |
                       enc$hcv_closed_case == 1 |
                       enc$sud_closed_case == 1 |
                       enc$ht_closed_case == 1 |
                       enc$mh_closed_case == 1 |
                       enc$housing_closed_case == 1 |
                       enc$prep_closed_case == 1 |
                       enc$sti_closed_case == 1 |
                       enc$food_closed_case == 1 |
                       enc$financial_closed_case == 1 |
                       enc$personabuse_closed_case == 1 |
                       enc$general_closed_case == 1 |
                       enc$other_closed_case == 1] <- 1
table(enc$total_closed_ltc)
total_closed_ltc <- enc[which(enc$total_closed_ltc == 1), ]
dim(total_closed_ltc)
total_closed_ltc <- nrow(total_closed_ltc)
total_closed_ltc
total_closed_ltc_percent <- percent(total_closed_ltc/total_eligible_ltc, accuracy = 0.1)
total_closed_ltc_percent
total_closed_ltc_percent[is.na(total_closed_ltc_percent)] <- '0.0%'
total_closed_ltc_percent


enc$total_linked[enc$hiv_linked == 1 |
                   enc$hcv_linked == 1 |
                   enc$sud_linked == 1 |
                   enc$ht_linked == 1 |
                   enc$mh_linked == 1 |
                   enc$housing_linked == 1 |
                   enc$prep_linked == 1 |
                   enc$sti_linked == 1 |
                   enc$food_linked == 1 |
                   enc$financial_linked == 1 |
                   enc$personabuse_linked == 1 |
                   enc$general_linked == 1 |
                   enc$other_linked == 1] <- 1
table(enc$total_linked)
total_linked <- enc[which(enc$total_linked == 1), ]
dim(total_linked)
total_linked <- nrow(total_linked)
total_linked
total_linked_percent <- percent(total_linked/total_closed_ltc, accuracy = 0.1)
total_linked_percent
total_linked_percent[is.na(total_linked_percent)] <- '0.0%'
total_linked_percent


###########################################  Referrals  ##########################################

# HIV
enc$hiv_enc_referral[enc$referral_hiv_checklist___1 == 1 |
                       enc$referral_hiv_checklist___2 == 1 |
                       enc$referral_hiv_checklist___3 == 1] <- 1
table(enc$hiv_enc_referral)
hiv_enc_referral <- enc[which(enc$hiv_enc_referral == 1), ]
hiv_enc_referral <- nrow(hiv_enc_referral)
hiv_enc_referral

enc$hiv_ltc_referral[enc$ltc_hiv_referral_caracole___1 == 1 |
                       enc$ltc_hiv_referral_caracole___2 == 1 |
                       enc$ltc_hiv_referral_caracole___3 == 1 |
                       enc$ltc_hiv_referral_uc_idc___1 == 1 |
                       enc$ltc_hiv_referral_uc_idc___2 == 1 |
                       enc$ltc_hiv_referral_uc_idc___3 == 1 |
                       enc$ltc_hiv_referral_other_idc___1 == 1 |
                       enc$ltc_hiv_referral_other_idc___2 == 1 |
                       enc$ltc_hiv_referral_other_idc___3 == 1 |
                       enc$ltc_hiv_referral_hd___1 == 1 |
                       enc$ltc_hiv_referral_hd___2 == 1 |
                       enc$ltc_hiv_referral_hd___3 == 1 |
                       enc$ltc_hiv_referral_umadaop___1 == 1 |
                       enc$ltc_hiv_referral_umadaop___2 == 1 |
                       enc$ltc_hiv_referral_umadaop___3 == 1 |
                       enc$ltc_hiv_referral_other___1 == 1 |
                       enc$ltc_hiv_referral_other___2 == 1 |
                       enc$ltc_hiv_referral_other___3 == 1] <- 1
table(enc$hiv_ltc_referral)
hiv_ltc_referral <- enc[which(enc$hiv_ltc_referral == 1), ]
hiv_ltc_referral <- nrow(hiv_ltc_referral)
hiv_ltc_referral

enc$hiv_referral[enc$hiv_enc_referral == 1 | enc$hiv_ltc_referral == 1] <- 1
table(enc$hiv_referral)
hiv_referral <- enc[which(enc$hiv_referral == 1), ]
hiv_referral <- nrow(hiv_referral)
hiv_referral


# HCV
enc$hcv_enc_referral[enc$referral_hcv_checklist___1 == 1 |
                       enc$referral_hcv_checklist___2 == 1 |
                       enc$referral_hcv_checklist___3 == 1] <- 1
table(enc$hcv_enc_referral)
hcv_enc_referral <- enc[which(enc$hcv_enc_referral == 1), ]
hcv_enc_referral <- nrow(hcv_enc_referral)
hcv_enc_referral

enc$hcv_ltc_referral[enc$ltc_hcv_referral_uc_liver___1 == 1 |
                       enc$ltc_hcv_referral_uc_liver___2 == 1 |
                       enc$ltc_hcv_referral_uc_liver___3 == 1 |
                       enc$ltc_hcv_referral_uc_idc___1 == 1 |
                       enc$ltc_hcv_referral_uc_idc___2 == 1 |
                       enc$ltc_hcv_referral_uc_idc___3 == 1 |
                       enc$ltc_hcv_referral_other_liver___1 == 1 |
                       enc$ltc_hcv_referral_other_liver___2 == 1 |
                       enc$ltc_hcv_referral_other_liver___3 == 1 |
                       enc$ltc_hcv_referral_crossroads___1 == 1 |
                       enc$ltc_hcv_referral_crossroads___2 == 1 |
                       enc$ltc_hcv_referral_crossroads___3 == 1 |
                       enc$ltc_hcv_referral_other___1 == 1 |
                       enc$ltc_hcv_referral_other___2 == 1 |
                       enc$ltc_hcv_referral_other___3 == 1] <- 1
table(enc$hcv_ltc_referral)
hcv_ltc_referral <- enc[which(enc$hcv_ltc_referral == 1), ]
hcv_ltc_referral <- nrow(hcv_ltc_referral)
hcv_ltc_referral

enc$hcv_referral[enc$hcv_enc_referral == 1 | enc$hcv_ltc_referral == 1] <- 1
table(enc$hcv_referral)
hcv_referral <- enc[which(enc$hcv_referral == 1), ]
hcv_referral <- nrow(hcv_referral)
hcv_referral


# SUD
enc$sud_enc_referral[enc$referral_sud_checklist___1 == 1 |
                       enc$referral_sud_checklist___2 == 1 |
                       enc$referral_sud_checklist___3 == 1] <- 1
table(enc$sud_enc_referral)
sud_enc_referral <- enc[which(enc$sud_enc_referral == 1), ]
sud_enc_referral <- nrow(sud_enc_referral)
sud_enc_referral


enc$sud_ltc_referral[enc$ltc_sud_referral_access___1 == 1 |
                       enc$ltc_sud_referral_access___2 == 1 |
                       enc$ltc_sud_referral_access___3 == 1 |
                       enc$ltc_sud_referral_arc___1 == 1 |
                       enc$ltc_sud_referral_arc___2 == 1 |
                       enc$ltc_sud_referral_arc___3 == 1 |
                       enc$ltc_sud_referral_aim___1 == 1 |
                       enc$ltc_sud_referral_aim___2 == 1 |
                       enc$ltc_sud_referral_aim___3 == 1 |
                       enc$ltc_sud_referral_aa___1 == 1 |
                       enc$ltc_sud_referral_aa___2 == 1 |
                       enc$ltc_sud_referral_aa___3 == 1 |
                       enc$ltc_sud_referral_beckett___1 == 1 |
                       enc$ltc_sud_referral_beckett___2 == 1 |
                       enc$ltc_sud_referral_beckett___3 == 1 |
                       enc$ltc_sud_referral_bethesda___1 == 1 |
                       enc$ltc_sud_referral_bethesda___2 == 1 |
                       enc$ltc_sud_referral_bethesda___3 == 1 |
                       enc$ltc_sud_referral_brighton___1 == 1 |
                       enc$ltc_sud_referral_brighton___2 == 1 |
                       enc$ltc_sud_referral_brighton___3 == 1 |
                       enc$ltc_sud_referral_brightview___1 == 1 |
                       enc$ltc_sud_referral_brightview___2 == 1 |
                       enc$ltc_sud_referral_brightview___3 == 1 |
                       enc$ltc_sud_referral_cat___1 == 1 |
                       enc$ltc_sud_referral_cat___2 == 1 |
                       enc$ltc_sud_referral_cat___3 == 1 |
                       enc$ltc_sud_referral_cen_comm_health_board___1 == 1 |
                       enc$ltc_sud_referral_cen_comm_health_board___2 == 1 |
                       enc$ltc_sud_referral_cen_comm_health_board___3 == 1 |
                       enc$ltc_sud_referral_charlie_34___1 == 1 |
                       enc$ltc_sud_referral_charlie_34___2 == 1 |
                       enc$ltc_sud_referral_charlie_34___3 == 1 |
                       enc$ltc_sud_referral_cin_east_sub___1 == 1 |
                       enc$ltc_sud_referral_cin_east_sub___2 == 1 |
                       enc$ltc_sud_referral_cin_east_sub___3 == 1 |
                       enc$ltc_sud_referral_cin_teen___1 == 1 |
                       enc$ltc_sud_referral_cin_teen___2 == 1 |
                       enc$ltc_sud_referral_cin_teen___3 == 1 |
                       enc$ltc_sud_referral_crossroads___1 == 1 |
                       enc$ltc_sud_referral_crossroads___2 == 1 |
                       enc$ltc_sud_referral_crossroads___3 == 1 |
                       enc$ltc_sud_referral_healthy_newborn_house___1 == 1 |
                       enc$ltc_sud_referral_healthy_newborn_house___2 == 1 |
                       enc$ltc_sud_referral_healthy_newborn_house___3 == 1 |
                       enc$ltc_sud_referral_ethan_crossing___1 == 1 |
                       enc$ltc_sud_referral_ethan_crossing___2 == 1 |
                       enc$ltc_sud_referral_ethan_crossing___3 == 1 |
                       enc$ltc_sud_referral_falmouth___1 == 1 |
                       enc$ltc_sud_referral_falmouth___2 == 1 |
                       enc$ltc_sud_referral_falmouth___3 == 1 |
                       enc$ltc_sud_referral_first_step___1 == 1 |
                       enc$ltc_sud_referral_first_step___2 == 1 |
                       enc$ltc_sud_referral_first_step___3 == 1 |
                       enc$ltc_sud_referral_gateway_house___1 == 1 |
                       enc$ltc_sud_referral_gateway_house___2 == 1 |
                       enc$ltc_sud_referral_gateway_house___3 == 1 |
                       enc$ltc_sud_referral_gateways___1 == 1 |
                       enc$ltc_sud_referral_gateways___2 == 1 |
                       enc$ltc_sud_referral_gateways___3 == 1 |
                       enc$ltc_sud_referral_genesis___1 == 1 |
                       enc$ltc_sud_referral_genesis___2 == 1 |
                       enc$ltc_sud_referral_genesis___3 == 1 |
                       enc$ltc_sud_referral_gcbh___1 == 1 |
                       enc$ltc_sud_referral_gcbh___2 == 1 |
                       enc$ltc_sud_referral_gcbh___3 == 1 |
                       enc$ltc_sud_referral_qrt___1 == 1 |
                       enc$ltc_sud_referral_qrt___2 == 1 |
                       enc$ltc_sud_referral_qrt___3 == 1 |
                       enc$ltc_sud_referral_hope___1 == 1 |
                       enc$ltc_sud_referral_hope___2 == 1 |
                       enc$ltc_sud_referral_hope___3 == 1 |
                       enc$ltc_sud_referral_hotel_cal___1 == 1 |
                       enc$ltc_sud_referral_hotel_cal___2 == 1 |
                       enc$ltc_sud_referral_hotel_cal___3 == 1 |
                       enc$ltc_sud_referral_joseph___1 == 1 |
                       enc$ltc_sud_referral_joseph___2 == 1 |
                       enc$ltc_sud_referral_joseph___3 == 1 |
                       enc$ltc_sud_referral_juliettes___1 == 1 |
                       enc$ltc_sud_referral_juliettes___2 == 1 |
                       enc$ltc_sud_referral_juliettes___3 == 1 |
                       enc$ltc_sud_referral_lindner_north___1 == 1 |
                       enc$ltc_sud_referral_lindner_north___2 == 1 |
                       enc$ltc_sud_referral_lindner_north___3 == 1 |
                       enc$ltc_sud_referral_lumiere___1 == 1 |
                       enc$ltc_sud_referral_lumiere___2 == 1 |
                       enc$ltc_sud_referral_lumiere___3 == 1 |
                       enc$ltc_sud_referral_mercy___1 == 1 |
                       enc$ltc_sud_referral_mercy___2 == 1 |
                       enc$ltc_sud_referral_mercy___3 == 1 |
                       enc$ltc_sud_referral_methadone___1 == 1 |
                       enc$ltc_sud_referral_methadone___2 == 1 |
                       enc$ltc_sud_referral_methadone___3 == 1 |
                       enc$ltc_sud_referral_mrc___1 == 1 |
                       enc$ltc_sud_referral_mrc___2 == 1 |
                       enc$ltc_sud_referral_mrc___3 == 1 |
                       enc$ltc_sud_referral_na___1 == 1 |
                       enc$ltc_sud_referral_na___2 == 1 |
                       enc$ltc_sud_referral_na___3 == 1 |
                       enc$ltc_sud_referral_new_day___1 == 1 |
                       enc$ltc_sud_referral_new_day___2 == 1 |
                       enc$ltc_sud_referral_new_day___3 == 1 |
                       enc$ltc_sud_referral_new_foundations___1 == 1 |
                       enc$ltc_sud_referral_new_foundations___2 == 1 |
                       enc$ltc_sud_referral_new_foundations___3 == 1 |
                       enc$ltc_sud_referral_north_key___1 == 1 |
                       enc$ltc_sud_referral_north_key___2 == 1 |
                       enc$ltc_sud_referral_north_key___3 == 1 |
                       enc$ltc_sud_referral_pax_house___1 == 1 |
                       enc$ltc_sud_referral_pax_house___2 == 1 |
                       enc$ltc_sud_referral_pax_house___3 == 1 |
                       enc$ltc_sud_referral_pinnacle___1 == 1 |
                       enc$ltc_sud_referral_pinnacle___2 == 1 |
                       enc$ltc_sud_referral_pinnacle___3 == 1 |
                       enc$ltc_sud_referral_premier___1 == 1 |
                       enc$ltc_sud_referral_premier___2 == 1 |
                       enc$ltc_sud_referral_premier___3 == 1 |
                       enc$ltc_sud_referral_prospect___1 == 1 |
                       enc$ltc_sud_referral_prospect___2 == 1 |
                       enc$ltc_sud_referral_prospect___3 == 1 |
                       enc$ltc_sud_referral_ridge___1 == 1 |
                       enc$ltc_sud_referral_ridge___2 == 1 |
                       enc$ltc_sud_referral_ridge___3 == 1 |
                       enc$ltc_sud_referral_salvation_army___1 == 1 |
                       enc$ltc_sud_referral_salvation_army___2 == 1 |
                       enc$ltc_sud_referral_salvation_army___3 == 1 |
                       enc$ltc_sud_referral_st_elizabeth___1 == 1 |
                       enc$ltc_sud_referral_st_elizabeth___2 == 1 |
                       enc$ltc_sud_referral_st_elizabeth___3 == 1 |
                       enc$ltc_sud_referral_stateline___1 == 1 |
                       enc$ltc_sud_referral_stateline___2 == 1 |
                       enc$ltc_sud_referral_stateline___3 == 1 |
                       enc$ltc_sud_referral_summit___1 == 1 |
                       enc$ltc_sud_referral_summit___2 == 1 |
                       enc$ltc_sud_referral_summit___3 == 1 |
                       enc$ltc_sud_referral_sun___1 == 1 |
                       enc$ltc_sud_referral_sun___2 == 1 |
                       enc$ltc_sud_referral_sun___3 == 1 |
                       enc$ltc_sud_referral_sunrise___1 == 1 |
                       enc$ltc_sud_referral_sunrise___2 == 1 |
                       enc$ltc_sud_referral_sunrise___3 == 1 |
                       enc$ltc_sud_referral_talbert___1 == 1 |
                       enc$ltc_sud_referral_talbert___2 == 1 |
                       enc$ltc_sud_referral_talbert___3 == 1 |
                       enc$ltc_sud_referral_thrive_peer_support___1 == 1 |
                       enc$ltc_sud_referral_thrive_peer_support___2 == 1 |
                       enc$ltc_sud_referral_thrive_peer_support___3 == 1 |
                       enc$ltc_sud_referral_transitions___1 == 1 |
                       enc$ltc_sud_referral_transitions___2 == 1 |
                       enc$ltc_sud_referral_transitions___3 == 1 |
                       enc$ltc_sud_referral_asd___1 == 1 |
                       enc$ltc_sud_referral_asd___2 == 1 |
                       enc$ltc_sud_referral_asd___3 == 1 |
                       enc$ltc_sud_referral_umadaop___1 == 1 |
                       enc$ltc_sud_referral_umadaop___2 == 1 |
                       enc$ltc_sud_referral_umadaop___3 == 1 |
                       enc$ltc_sud_referral_va___1 == 1 |
                       enc$ltc_sud_referral_va___2 == 1 |
                       enc$ltc_sud_referral_va___3 == 1 |
                       enc$ltc_sud_referral_wilson_house___1 == 1 |
                       enc$ltc_sud_referral_wilson_house___2 == 1 |
                       enc$ltc_sud_referral_wilson_house___3 == 1 |
                       enc$ltc_sud_referral_woodhaven___1 == 1 |
                       enc$ltc_sud_referral_woodhaven___2 == 1 |
                       enc$ltc_sud_referral_woodhaven___3 == 1 |
                       enc$ltc_sud_referral_other___1 == 1 |
                       enc$ltc_sud_referral_other___2 == 1 |
                       enc$ltc_sud_referral_other___3 == 1] <- 1
table(enc$sud_ltc_referral)
sud_ltc_referral <- enc[which(enc$sud_ltc_referral == 1), ]
sud_ltc_referral <- nrow(sud_ltc_referral)
sud_ltc_referral

enc$sud_referral[enc$sud_enc_referral == 1 | enc$sud_ltc_referral == 1] <- 1
table(enc$sud_referral)
sud_referral <- enc[which(enc$sud_referral == 1), ]
sud_referral <- nrow(sud_referral)
sud_referral


# MH
enc$mh_enc_referral[enc$referral_mh_checklist___1 == 1 |
                      enc$referral_mh_checklist___2 == 1 |
                      enc$referral_mh_checklist___3 == 1] <- 1
table(enc$mh_enc_referral)
mh_enc_referral <- enc[which(enc$mh_enc_referral == 1), ]
mh_enc_referral <- nrow(mh_enc_referral)
mh_enc_referral

enc$mh_ltc_referral[enc$ltc_mh_referral_helpline___1 == 1 |
                      enc$ltc_mh_referral_helpline___2 == 1 |
                      enc$ltc_mh_referral_helpline___3 == 1 |
                      enc$ltc_mh_referral_gcb___1 == 1 |
                      enc$ltc_mh_referral_gcb___2 == 1 |
                      enc$ltc_mh_referral_gcb___3 == 1 |
                      enc$ltc_mh_referral_mhap___1 == 1 |
                      enc$ltc_mh_referral_mhap___2 == 1 |
                      enc$ltc_mh_referral_mhap___3 == 1 |
                      enc$ltc_mh_referral_sun___1 == 1 |
                      enc$ltc_mh_referral_sun___2 == 1 |
                      enc$ltc_mh_referral_sun___3 == 1 |
                      enc$ltc_mh_referral_other___1 == 1 |
                      enc$ltc_mh_referral_other___2 == 1 |
                      enc$ltc_mh_referral_other___3 == 1] <- 1
table(enc$mh_ltc_referral)
mh_ltc_referral <- enc[which(enc$mh_ltc_referral == 1), ]
mh_ltc_referral <- nrow(mh_ltc_referral)
mh_ltc_referral

enc$mh_referral[enc$mh_enc_referral == 1 | enc$mh_ltc_referral == 1] <- 1
table(enc$mh_referral)
mh_referral <- enc[which(enc$mh_referral == 1), ]
mh_referral <- nrow(mh_referral)
mh_referral


# PCP
## no LTC referrals
enc$pcp_enc_referral[enc$referral_pcp_checklist___1 == 1 |
                       enc$referral_pcp_checklist___2 == 1 |
                       enc$referral_pcp_checklist___3 == 1] <- 1
table(enc$pcp_enc_referral)
pcp_enc_referral <- enc[which(enc$pcp_enc_referral == 1), ]
pcp_enc_referral <- nrow(pcp_enc_referral)
pcp_enc_referral

enc$pcp_referral[enc$pcp_enc_referral == 1] <- 1
table(enc$pcp_referral)
pcp_referral <- enc[which(enc$pcp_referral == 1), ]
pcp_referral <- nrow(pcp_referral)
pcp_referral


# ED SW
## no LTC referrals
enc$ed_sw_enc_referral[enc$referral_ed_sw_checklist___1 == 1 |
                         enc$referral_ed_sw_checklist___2 == 1 |
                         enc$referral_ed_sw_checklist___3 == 1] <- 1
table(enc$ed_sw_enc_referral)
ed_sw_enc_referral <- enc[which(enc$ed_sw_enc_referral == 1), ]
ed_sw_enc_referral <- nrow(ed_sw_enc_referral)
ed_sw_enc_referral

enc$ed_sw_referral[enc$ed_sw_enc_referral == 1] <- 1
table(enc$ed_sw_referral)
ed_sw_referral <- enc[which(enc$ed_sw_referral == 1), ]
ed_sw_referral <- nrow(ed_sw_referral)
ed_sw_referral


# PrEP
enc$prep_enc_referral[enc$referral_prep_checklist___1 == 1 |
                        enc$referral_prep_checklist___2 == 1 |
                        enc$referral_prep_checklist___3 == 1] <- 1
table(enc$prep_enc_referral)
prep_enc_referral <- enc[which(enc$prep_enc_referral == 1), ]
prep_enc_referral <- nrow(prep_enc_referral)
prep_enc_referral

enc$prep_ltc_referral[enc$ltc_prep_referral_hd___1 == 1 |
                        enc$ltc_prep_referral_hd___2 == 1 |
                        enc$ltc_prep_referral_hd___3 == 1 |
                        enc$ltc_prep_referral_other___1 == 1 |
                        enc$ltc_prep_referral_other___2 == 1 |
                        enc$ltc_prep_referral_other___3 == 1] <- 1
table(enc$prep_ltc_referral)
prep_ltc_referral <- enc[which(enc$prep_ltc_referral == 1), ]
prep_ltc_referral <- nrow(prep_ltc_referral)
prep_ltc_referral

enc$prep_referral[enc$prep_enc_referral == 1 | enc$prep_ltc_referral == 1] <- 1
table(enc$prep_referral)
prep_referral <- enc[which(enc$prep_referral == 1), ]
prep_referral <- nrow(prep_referral)
prep_referral


# Peer
## no LTC referrals
enc$peer_enc_referral[enc$referral_peer_checklist___1 == 1 |
                        enc$referral_peer_checklist___2 == 1 |
                        enc$referral_peer_checklist___3 == 1] <- 1
table(enc$peer_enc_referral)
peer_enc_referral <- enc[which(enc$peer_enc_referral == 1), ]
peer_enc_referral <- nrow(peer_enc_referral)
peer_enc_referral

enc$peer_referral[enc$peer_enc_referral == 1] <- 1
table(enc$peer_referral)
peer_referral <- enc[which(enc$peer_referral == 1), ]
peer_referral <- nrow(peer_referral)
peer_referral


# STI
enc$sti_enc_referral[enc$referral_sti_checklist___1 == 1 |
                       enc$referral_sti_checklist___2 == 1 |
                       enc$referral_sti_checklist___3 == 1] <- 1
table(enc$sti_enc_referral)
sti_enc_referral <- enc[which(enc$sti_enc_referral == 1), ]
sti_enc_referral <- nrow(sti_enc_referral)
sti_enc_referral

enc$sti_ltc_referral[enc$ltc_sti_referral_hd___1 == 1 |
                       enc$ltc_sti_referral_hd___2 == 1 |
                       enc$ltc_sti_referral_hd___3 == 1 |
                       enc$ltc_sti_referral_plan_parenthood___1 == 1 |
                       enc$ltc_sti_referral_plan_parenthood___2 == 1 |
                       enc$ltc_sti_referral_plan_parenthood___3 == 1 |
                       enc$ltc_sti_referral_clinic___1 == 1 |
                       enc$ltc_sti_referral_clinic___2 == 1 |
                       enc$ltc_sti_referral_clinic___3 == 1 |
                       enc$ltc_sti_referral_hotline___1 == 1 |
                       enc$ltc_sti_referral_hotline___2 == 1 |
                       enc$ltc_sti_referral_hotline___3 == 1 |
                       enc$ltc_sti_referral_other___1 == 1 |
                       enc$ltc_sti_referral_other___2 == 1 |
                       enc$ltc_sti_referral_other___3 == 1] <- 1
table(enc$sti_ltc_referral)
sti_ltc_referral <- enc[which(enc$sti_ltc_referral == 1), ]
sti_ltc_referral <- nrow(sti_ltc_referral)
sti_ltc_referral

enc$sti_referral[enc$sti_enc_referral == 1 | enc$sti_ltc_referral == 1] <- 1
table(enc$sti_referral)
sti_referral <- enc[which(enc$sti_referral == 1), ]
sti_referral <- nrow(sti_referral)
sti_referral


# Housing
enc$housing_enc_referral[enc$referral_housing_checklist___1 == 1 |
                           enc$referral_housing_checklist___2 == 1 |
                           enc$referral_housing_checklist___3 == 1] <- 1
table(enc$housing_enc_referral)
housing_enc_referral <- enc[which(enc$housing_enc_referral == 1), ]
housing_enc_referral <- nrow(housing_enc_referral)
housing_enc_referral

enc$housing_ltc_referral[enc$ltc_housing_referral_anna_louise___1 == 1 |
                           enc$ltc_housing_referral_anna_louise___2 == 1 |
                           enc$ltc_housing_referral_anna_louise___3 == 1 |
                           enc$ltc_housing_referral_cin_bar___1 == 1 |
                           enc$ltc_housing_referral_cin_bar___2 == 1 |
                           enc$ltc_housing_referral_cin_bar___3 == 1 |
                           enc$ltc_housing_referral_city_gospel___1 == 1 |
                           enc$ltc_housing_referral_city_gospel___2 == 1 |
                           enc$ltc_housing_referral_city_gospel___3 == 1 |
                           enc$ltc_housing_referral_habitat___1 == 1 |
                           enc$ltc_housing_referral_habitat___2 == 1 |
                           enc$ltc_housing_referral_habitat___3 == 1 |
                           enc$ltc_housing_referral_hc_hip___1 == 1 |
                           enc$ltc_housing_referral_hc_hip___2 == 1 |
                           enc$ltc_housing_referral_hc_hip___3 == 1 |
                           enc$ltc_housing_referral_hoc___1 == 1 |
                           enc$ltc_housing_referral_hoc___2 == 1 |
                           enc$ltc_housing_referral_hoc___3 == 1 |
                           enc$ltc_housing_referral_home___1 == 1 |
                           enc$ltc_housing_referral_home___2 == 1 |
                           enc$ltc_housing_referral_home___3 == 1 |
                           enc$ltc_housing_referral_legal_aid_society___1 == 1 |
                           enc$ltc_housing_referral_legal_aid_society___2 == 1 |
                           enc$ltc_housing_referral_legal_aid_society___3 == 1 |
                           enc$ltc_housing_referral_metro_sewer___1 == 1 |
                           enc$ltc_housing_referral_metro_sewer___2 == 1 |
                           enc$ltc_housing_referral_metro_sewer___3 == 1 |
                           enc$ltc_housing_referral_mt_airy___1 == 1 |
                           enc$ltc_housing_referral_mt_airy___2 == 1 |
                           enc$ltc_housing_referral_mt_airy___3 == 1 |
                           enc$ltc_housing_referral_pwc___1 == 1 |
                           enc$ltc_housing_referral_pwc___2 == 1 |
                           enc$ltc_housing_referral_pwc___3 == 1 |
                           enc$ltc_housing_referral_salv_army___1 == 1 |
                           enc$ltc_housing_referral_salv_army___2 == 1 |
                           enc$ltc_housing_referral_salv_army___3 == 1 |
                           enc$ltc_housing_referral_shelterhouse___1 == 1 |
                           enc$ltc_housing_referral_shelterhouse___2 == 1 |
                           enc$ltc_housing_referral_shelterhouse___3 == 1 |
                           enc$ltc_housing_referral_st_john___1 == 1 |
                           enc$ltc_housing_referral_st_john___2 == 1 |
                           enc$ltc_housing_referral_st_john___3 == 1 |
                           enc$ltc_housing_referral_svdp___1 == 1 |
                           enc$ltc_housing_referral_svdp___2 == 1 |
                           enc$ltc_housing_referral_svdp___3 == 1 |
                           enc$ltc_housing_referral_su_casa___1 == 1 |
                           enc$ltc_housing_referral_su_casa___2 == 1 |
                           enc$ltc_housing_referral_su_casa___3 == 1 |
                           enc$ltc_housing_referral_win___1 == 1 |
                           enc$ltc_housing_referral_win___2 == 1 |
                           enc$ltc_housing_referral_win___3 == 1 |
                           enc$ltc_housing_referral_other___1 == 1 |
                           enc$ltc_housing_referral_other___2 == 1 |
                           enc$ltc_housing_referral_other___3 == 1] <- 1
table(enc$housing_ltc_referral)
housing_ltc_referral <- enc[which(enc$housing_ltc_referral == 1), ]
housing_ltc_referral <- nrow(housing_ltc_referral)
housing_ltc_referral

enc$housing_referral[enc$housing_enc_referral == 1 | enc$housing_ltc_referral == 1] <- 1
table(enc$housing_referral)
housing_referral <- enc[which(enc$housing_referral == 1), ]
housing_referral <- nrow(housing_referral)
housing_referral


# HT
enc$ht_enc_referral[enc$referral_ht_checklist___1 == 1 |
                      enc$referral_ht_checklist___2 == 1 |
                      enc$referral_ht_checklist___3 == 1] <- 1
table(enc$ht_enc_referral)
ht_enc_referral <- enc[which(enc$ht_enc_referral == 1), ]
ht_enc_referral <- nrow(ht_enc_referral)
ht_enc_referral

enc$ht_ltc_referral[enc$ltc_ht_referral_josephines___1 == 1 |
                      enc$ltc_ht_referral_josephines___2 == 1 |
                      enc$ltc_ht_referral_josephines___3 == 1 |
                      enc$ltc_ht_referral_juliettes___1 == 1 |
                      enc$ltc_ht_referral_juliettes___2 == 1 |
                      enc$ltc_ht_referral_juliettes___3 == 1 |
                      enc$ltc_ht_referral_lighthouse___1 == 1 |
                      enc$ltc_ht_referral_lighthouse___2 == 1 |
                      enc$ltc_ht_referral_lighthouse___3 == 1 |
                      enc$ltc_ht_referral_hotline___1 == 1 |
                      enc$ltc_ht_referral_hotline___2 == 1 |
                      enc$ltc_ht_referral_hotline___3 == 1 |
                      enc$ltc_ht_referral_off_streets___1 == 1 |
                      enc$ltc_ht_referral_off_streets___2 == 1 |
                      enc$ltc_ht_referral_off_streets___3 == 1 |
                      enc$ltc_ht_referral_redeemed_home___1 == 1 |
                      enc$ltc_ht_referral_redeemed_home___2 == 1 |
                      enc$ltc_ht_referral_redeemed_home___3 == 1 |
                      enc$ltc_ht_referral_salvation_army___1 == 1 |
                      enc$ltc_ht_referral_salvation_army___2 == 1 |
                      enc$ltc_ht_referral_salvation_army___3 == 1 |
                      enc$ltc_ht_referral_tamar___1 == 1 |
                      enc$ltc_ht_referral_tamar___2 == 1 |
                      enc$ltc_ht_referral_tamar___3 == 1 |
                      enc$ltc_ht_referral_valley_interfaith___1 == 1 |
                      enc$ltc_ht_referral_valley_interfaith___2 == 1 |
                      enc$ltc_ht_referral_valley_interfaith___3 == 1 |
                      enc$ltc_ht_referral_weightless___1 == 1 |
                      enc$ltc_ht_referral_weightless___2 == 1 |
                      enc$ltc_ht_referral_weightless___3 == 1 |
                      enc$ltc_ht_referral_alabaster___1 == 1 |
                      enc$ltc_ht_referral_alabaster___2 == 1 |
                      enc$ltc_ht_referral_alabaster___3 == 1 |
                      enc$ltc_ht_referral_whw___1 == 1 |
                      enc$ltc_ht_referral_whw___2 == 1 |
                      enc$ltc_ht_referral_whw___3 == 1 |
                      enc$ltc_ht_referral_other___1 == 1 |
                      enc$ltc_ht_referral_other___2 == 1 |
                      enc$ltc_ht_referral_other___3 == 1] <- 1
table(enc$ht_ltc_referral)
ht_ltc_referral <- enc[which(enc$ht_ltc_referral == 1), ]
ht_ltc_referral <- nrow(ht_ltc_referral)
ht_ltc_referral

enc$ht_referral[enc$ht_enc_referral == 1 | enc$ht_ltc_referral == 1] <- 1
table(enc$ht_referral)
ht_referral <- enc[which(enc$ht_referral == 1), ]
ht_referral <- nrow(ht_referral)
ht_referral


# Person Abuse
enc$personabuse_enc_referral[enc$referral_personabuse_checklist___1 == 1 |
                               enc$referral_personabuse_checklist___2 == 1 |
                               enc$referral_personabuse_checklist___3 == 1] <- 1
table(enc$personabuse_enc_referral)
personabuse_enc_referral <- enc[which(enc$personabuse_enc_referral == 1), ]
personabuse_enc_referral <- nrow(personabuse_enc_referral)
personabuse_enc_referral

enc$personabuse_ltc_referral[enc$ltc_abuse_referral_child_hotline___1 == 1 |
                               enc$ltc_abuse_referral_child_hotline___2 == 1 |
                               enc$ltc_abuse_referral_child_hotline___3 == 1 |
                               enc$ltc_abuse_referral_elder_hotline___1 == 1 |
                               enc$ltc_abuse_referral_elder_hotline___2 == 1 |
                               enc$ltc_abuse_referral_elder_hotline___3 == 1 |
                               enc$ltc_abuse_referral_hcph___1 == 1 |
                               enc$ltc_abuse_referral_hcph___2 == 1 |
                               enc$ltc_abuse_referral_hcph___3 == 1 |
                               enc$ltc_abuse_referral_whw___1 == 1 |
                               enc$ltc_abuse_referral_whw___2 == 1 |
                               enc$ltc_abuse_referral_whw___3 == 1 |
                               enc$ltc_abuse_referral_other___1 == 1 |
                               enc$ltc_abuse_referral_other___2 == 1 |
                               enc$ltc_abuse_referral_other___3 == 1] <- 1
table(enc$personabuse_ltc_referral)
personabuse_ltc_referral <- enc[which(enc$personabuse_ltc_referral == 1), ]
personabuse_ltc_referral <- nrow(personabuse_ltc_referral)
personabuse_ltc_referral

enc$personabuse_referral[enc$personabuse_enc_referral == 1 | enc$personabuse_ltc_referral == 1] <- 1
table(enc$personabuse_referral)
personabuse_referral <- enc[which(enc$personabuse_referral == 1), ]
personabuse_referral <- nrow(personabuse_referral)
personabuse_referral


# General
enc$general_enc_referral[enc$referral_general_checklist___1 == 1 |
                           enc$referral_general_checklist___2 == 1 |
                           enc$referral_general_checklist___3 == 1] <- 1
table(enc$general_enc_referral)
general_enc_referral <- enc[which(enc$general_enc_referral == 1), ]
general_enc_referral <- nrow(general_enc_referral)
general_enc_referral

enc$general_ltc_referral[enc$ltc_general_referral_womens_center___1 == 1 |
                           enc$ltc_general_referral_womens_center___2 == 1 |
                           enc$ltc_general_referral_womens_center___3 == 1 |
                           enc$ltc_general_referral_freestore___1 == 1 |
                           enc$ltc_general_referral_freestore___2 == 1 |
                           enc$ltc_general_referral_freestore___3 == 1 |
                           enc$ltc_general_referral_healthy_beginnings___1 == 1 |
                           enc$ltc_general_referral_healthy_beginnings___2 == 1 |
                           enc$ltc_general_referral_healthy_beginnings___3 == 1 |
                           enc$ltc_general_referral_hd___1 == 1 |
                           enc$ltc_general_referral_hd___2 == 1 |
                           enc$ltc_general_referral_hd___3 == 1 |
                           enc$ltc_general_referral_plan_parenthood___1 == 1 |
                           enc$ltc_general_referral_plan_parenthood___2 == 1 |
                           enc$ltc_general_referral_plan_parenthood___3 == 1 |
                           enc$ltc_general_referral_other___1 == 1 |
                           enc$ltc_general_referral_other___2 == 1 |
                           enc$ltc_general_referral_other___3 == 1] <- 1
table(enc$general_ltc_referral)
general_ltc_referral <- enc[which(enc$general_ltc_referral == 1), ]
general_ltc_referral <- nrow(general_ltc_referral)
general_ltc_referral

enc$general_referral[enc$general_enc_referral == 1 | enc$general_ltc_referral == 1] <- 1
table(enc$general_referral)
general_referral <- enc[which(enc$general_referral == 1), ]
general_referral <- nrow(general_referral)
general_referral


# Food
enc$food_enc_referral[enc$referral_food_checklist___1 == 1 |
                        enc$referral_food_checklist___2 == 1 |
                        enc$referral_food_checklist___3 == 1] <- 1
table(enc$food_enc_referral)
food_enc_referral <- enc[which(enc$food_enc_referral == 1), ]
food_enc_referral <- nrow(food_enc_referral)
food_enc_referral

enc$food_ltc_referral[enc$ltc_food_referral_freestore___1 == 1 |
                        enc$ltc_food_referral_freestore___2 == 1 |
                        enc$ltc_food_referral_freestore___3 == 1 |
                        enc$ltc_food_referral_odjfs___1 == 1 |
                        enc$ltc_food_referral_odjfs___2 == 1 |
                        enc$ltc_food_referral_odjfs___3 == 1 |
                        enc$ltc_food_referral_daily_bread___1 == 1 |
                        enc$ltc_food_referral_daily_bread___2 == 1 |
                        enc$ltc_food_referral_daily_bread___3 == 1 |
                        enc$ltc_food_referral_other___1 == 1 |
                        enc$ltc_food_referral_other___2 == 1 |
                        enc$ltc_food_referral_other___3 == 1] <- 1
table(enc$food_ltc_referral)
food_ltc_referral <- enc[which(enc$food_ltc_referral == 1), ]
food_ltc_referral <- nrow(food_ltc_referral)
food_ltc_referral

enc$food_referral[enc$food_enc_referral == 1 | enc$food_ltc_referral == 1] <- 1
table(enc$food_referral)
food_referral <- enc[which(enc$food_referral == 1), ]
food_referral <- nrow(food_referral)
food_referral


# Financial
enc$financial_enc_referral[enc$referral_financial_checklist___1 == 1 |
                             enc$referral_financial_checklist___2 == 1 |
                             enc$referral_financial_checklist___3 == 1] <- 1
table(enc$financial_enc_referral)
financial_enc_referral <- enc[which(enc$financial_enc_referral == 1), ]
financial_enc_referral <- nrow(financial_enc_referral)
financial_enc_referral

enc$financial_ltc_referral[enc$ltc_financial_referral_odjfs___1 == 1 |
                             enc$ltc_financial_referral_odjfs___2 == 1 |
                             enc$ltc_financial_referral_odjfs___3 == 1 |
                             enc$ltc_financial_referral_other___1 == 1 |
                             enc$ltc_financial_referral_other___2 == 1 |
                             enc$ltc_financial_referral_other___3 == 1] <- 1
table(enc$financial_ltc_referral)
financial_ltc_referral <- enc[which(enc$financial_ltc_referral == 1), ]
financial_ltc_referral <- nrow(financial_ltc_referral)
financial_ltc_referral

enc$financial_referral[enc$financial_enc_referral == 1 | enc$financial_ltc_referral == 1] <- 1
table(enc$financial_referral)
financial_referral <- enc[which(enc$financial_referral == 1), ]
financial_referral <- nrow(financial_referral)
financial_referral


# Other
enc$other_enc_referral[enc$referral_other_checklist___1 == 1 |
                         enc$referral_other_checklist___2 == 1 |
                         enc$referral_other_checklist___3 == 1] <- 1
table(enc$other_enc_referral)
other_enc_referral <- enc[which(enc$other_enc_referral == 1), ]
other_enc_referral <- nrow(other_enc_referral)
other_enc_referral

enc$other_ltc_referral[enc$ltc_other_referral_other___1 == 1 |
                         enc$ltc_other_referral_other___2 == 1 |
                         enc$ltc_other_referral_other___3 == 1] <- 1
table(enc$other_ltc_referral)
other_ltc_referral <- enc[which(enc$other_ltc_referral == 1), ]
other_ltc_referral <- nrow(other_ltc_referral)
other_ltc_referral

enc$other_referral[enc$other_enc_referral == 1 | enc$other_ltc_referral == 1] <- 1
table(enc$other_referral)
other_referral <- enc[which(enc$other_referral == 1), ]
other_referral <- nrow(other_referral)
other_referral


# Totals
total_enc_referrals <- hiv_enc_referral + hcv_enc_referral + sud_enc_referral +
  mh_enc_referral + pcp_enc_referral + ed_sw_enc_referral + prep_enc_referral +
  peer_enc_referral + sti_enc_referral + housing_enc_referral + ht_enc_referral +
  personabuse_enc_referral + general_enc_referral + food_enc_referral +
  financial_enc_referral + other_enc_referral
total_enc_referrals

total_ltc_referrals <- hiv_ltc_referral + hcv_ltc_referral + sud_ltc_referral +
  mh_ltc_referral + prep_ltc_referral + sti_ltc_referral + housing_ltc_referral +
  ht_ltc_referral + personabuse_ltc_referral + general_ltc_referral + food_ltc_referral +
  financial_ltc_referral + other_ltc_referral
total_ltc_referrals

total_referrals <- hiv_referral + hcv_referral + sud_referral + mh_referral + pcp_referral +
  ed_sw_referral + prep_referral + peer_referral + sti_referral + housing_referral +
  ht_referral + personabuse_referral + general_referral + food_referral + financial_referral +
  other_referral
total_referrals


referral_plot <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(referral_plot) <- c('referral', 'count')
head(referral_plot)
referral_plot[nrow(referral_plot) + 1,] <- list('HIV', hiv_referral)
referral_plot[nrow(referral_plot) + 1,] <- list('Hepatitis C', hcv_referral)
referral_plot[nrow(referral_plot) + 1,] <- list('SUD', sud_referral)
referral_plot[nrow(referral_plot) + 1,] <- list('Human Trafficking', ht_referral)
referral_plot[nrow(referral_plot) + 1,] <- list('Mental Health', mh_referral)
referral_plot[nrow(referral_plot) + 1,] <- list('Housing', housing_referral)
referral_plot[nrow(referral_plot) + 1,] <- list('PrEP', prep_referral)
referral_plot[nrow(referral_plot) + 1,] <- list('STI', sti_referral)
referral_plot[nrow(referral_plot) + 1,] <- list('Food services', food_referral)
referral_plot[nrow(referral_plot) + 1,] <- list('Financial assistance', financial_referral)
referral_plot[nrow(referral_plot) + 1,] <- list('Person abuse', personabuse_referral)
referral_plot[nrow(referral_plot) + 1,] <- list('General health', general_referral)
referral_plot[nrow(referral_plot) + 1,] <- list('PCP*', pcp_referral)
referral_plot[nrow(referral_plot) + 1,] <- list('ED SW*', ed_sw_referral)
referral_plot[nrow(referral_plot) + 1,] <- list('Peer services*', peer_referral)
referral_plot[nrow(referral_plot) + 1,] <- list('Other', other_referral)
head(referral_plot)




####################################  Combining all services  ####################################

monthly_metrics <- merge(monthly_encounters, monthly_assessments, by = 'enc_date', all.x = T)
monthly_metrics <- merge(monthly_metrics, monthly_hiv_tests, by = 'enc_date', all.x = T)
monthly_metrics <- merge(monthly_metrics, monthly_hcv_tests, by = 'enc_date', all.x = T)
monthly_metrics <- merge(monthly_metrics, monthly_ltc_cases, by = 'enc_date', all.x = T)
head(monthly_metrics) # metrics of encounters, assessments, CTR and EHE tests, HCV tests, LTC Cases
monthly_metrics$encounters[is.na(monthly_metrics$encounters)] <- 0
monthly_metrics$assessments[is.na(monthly_metrics$assessments)] <- 0
monthly_metrics$ctr_tests[is.na(monthly_metrics$ctr_tests)] <- 0
monthly_metrics$ehe_tests[is.na(monthly_metrics$ehe_tests)] <- 0
monthly_metrics$hcv_tests[is.na(monthly_metrics$hcv_tests)] <- 0
monthly_metrics$ltc_cases[is.na(monthly_metrics$ltc_cases)] <- 0
head(monthly_metrics)

monthly_metrics <- monthly_metrics %>%
  group_by(month_year = format(enc_date, "%m/%Y")) %>%
  summarise(encounters = sum(encounters),
            assessments = sum(assessments),
            ctr_tests = sum(ctr_tests),
            ehe_tests = sum(ehe_tests),
            hcv_tests = sum(hcv_tests),
            ltc_cases = sum(ltc_cases)) %>%
  mutate(year = as.integer(substring(month_year, 4, 7)),
         month = as.integer(substring(month_year, 1, 2))) %>%
  arrange(year, month) %>%
  select(-year, -month)
monthly_metrics

monthly_metrics$percent_assessed <- percent(monthly_metrics$assessments/monthly_metrics$encounters, accuracy = 0.1)
monthly_metrics
monthly_metrics$percent_ctr_tests <- percent(monthly_metrics$ctr_tests/monthly_metrics$encounters, accuracy = 0.1)
monthly_metrics
monthly_metrics$percent_ehe_tests <- percent(monthly_metrics$ehe_tests/monthly_metrics$encounters, accuracy = 0.1)
monthly_metrics
monthly_metrics$percent_hcv_tests <- percent(monthly_metrics$hcv_tests/monthly_metrics$encounters, accuracy = 0.1)
monthly_metrics
monthly_metrics$percent_ltc_cases <- percent(monthly_metrics$ltc_cases/monthly_metrics$encounters, accuracy = 0.1)
monthly_metrics

monthly_metrics$percent_assessed[is.na(monthly_metrics$percent_assessed)] <- '0.0%'
monthly_metrics$percent_ctr_tests[is.na(monthly_metrics$percent_ctr_tests)] <- '0.0%'
monthly_metrics$percent_ehe_tests[is.na(monthly_metrics$percent_ehe_tests)] <- '0.0%'
monthly_metrics$percent_hcv_tests[is.na(monthly_metrics$percent_hcv_tests)] <- '0.0%'
monthly_metrics$percent_ltc_cases[is.na(monthly_metrics$percent_ltc_cases)] <- '0.0%'
monthly_metrics
monthly_metrics <- monthly_metrics[, c(1, 2, 3, 8, 4, 9, 5, 10, 6, 11, 7, 12)]
monthly_metrics




monthly_sud_assess <- monthly_sud_assess %>%
  group_by(month_year = format(enc_date, "%m/%Y")) %>%
  summarise(assessments = sum(assessments),
            sud_assessed = sum(sud_assessed),
            sud_pos = sum(sud_pos)) %>%
  mutate(year = as.integer(substring(month_year, 4, 7)),
         month = as.integer(substring(month_year, 1, 2))) %>%
  arrange(year, month) %>%
  select(-year, -month)
monthly_sud_assess

monthly_sud_assess$percent_sud_assessed <- percent(monthly_sud_assess$sud_assessed/monthly_sud_assess$assessments, accuracy = 0.1)
monthly_sud_assess
monthly_sud_assess$percent_sud_pos <- percent(monthly_sud_assess$sud_pos/monthly_sud_assess$sud_assessed, accuracy = 0.1)
monthly_sud_assess
monthly_sud_assess <- monthly_sud_assess[, c(1, 2, 3, 5, 4, 6)]
monthly_sud_assess

monthly_sud_assess$percent_sud_assessed[is.na(monthly_sud_assess$percent_sud_assessed)] <- '0.0%'
monthly_sud_assess$percent_sud_pos[is.na(monthly_sud_assess$percent_sud_pos)] <- '0.0%'




monthly_mh_assess <- monthly_mh_assess %>%
  group_by(month_year = format(enc_date, "%m/%Y")) %>%
  summarise(assessments = sum(assessments),
            sud_pos = sum(sud_pos),
            brief_mh_assessed = sum(brief_mh_assessed),
            mh_assessed = sum(mh_assessed),
            mh_pos = sum(mh_pos)) %>%
  mutate(year = as.integer(substring(month_year, 4, 7)),
         month = as.integer(substring(month_year, 1, 2))) %>%
  arrange(year, month) %>%
  select(-year, -month)
monthly_mh_assess

monthly_mh_assess$percent_brief_mh_assessed <- percent(monthly_mh_assess$brief_mh_assessed/monthly_mh_assess$assessments, accuracy = 0.1)
monthly_mh_assess
monthly_mh_assess$percent_mh_assessed <- percent(monthly_mh_assess$mh_assessed/monthly_mh_assess$sud_pos, accuracy = 0.1)
monthly_mh_assess
monthly_mh_assess$percent_mh_pos <- percent(monthly_mh_assess$mh_pos/monthly_mh_assess$mh_assessed, accuracy = 0.1)
monthly_mh_assess

monthly_mh_assess <- monthly_mh_assess[, c(1, 2, 4, 7, 3, 5, 8, 6, 9)]
monthly_mh_assess

monthly_mh_assess$percent_brief_mh_assessed[is.na(monthly_mh_assess$percent_brief_mh_assessed)] <- '0.0%'
monthly_mh_assess$percent_mh_assessed[is.na(monthly_mh_assess$percent_mh_assessed)] <- '0.0%'
monthly_mh_assess$percent_mh_pos[is.na(monthly_mh_assess$percent_mh_pos)] <- '0.0%'
monthly_mh_assess




monthly_mh_cond <- monthly_mh_cond %>%
  group_by(month_year = format(enc_date, "%m/%Y")) %>%
  summarise(mh_assessed = sum(mh_assessed),
            depression_assessed = sum(depression_assessed),
            depression_pos = sum(depression_pos),
            anxiety_assessed = sum(anxiety_assessed),
            anxiety_pos = sum(anxiety_pos),
            ptsd_assessed = sum(ptsd_assessed),
            ptsd_pos = sum(ptsd_pos)) %>%
  mutate(year = as.integer(substring(month_year, 4, 7)),
         month = as.integer(substring(month_year, 1, 2))) %>%
  arrange(year, month) %>%
  select(-year, -month)
monthly_mh_cond

monthly_mh_cond$depression_assessed_percent <- percent(monthly_mh_cond$depression_assessed/monthly_mh_cond$mh_assessed, accuracy = 0.1)
monthly_mh_cond
monthly_mh_cond$depression_pos_percent <- percent(monthly_mh_cond$depression_pos/monthly_mh_cond$depression_assessed, accuracy = 0.1)
monthly_mh_cond
monthly_mh_cond$anxiety_assessed_percent <- percent(monthly_mh_cond$anxiety_assessed/monthly_mh_cond$mh_assessed, accuracy = 0.1)
monthly_mh_cond
monthly_mh_cond$anxiety_pos_percent <- percent(monthly_mh_cond$depression_pos/monthly_mh_cond$depression_assessed, accuracy = 0.1)
monthly_mh_cond
monthly_mh_cond$ptsd_assessed_percent <- percent(monthly_mh_cond$ptsd_assessed/monthly_mh_cond$mh_assessed, accuracy = 0.1)
monthly_mh_cond
monthly_mh_cond$ptsd_pos_percent <- percent(monthly_mh_cond$ptsd_pos/monthly_mh_cond$ptsd_assessed, accuracy = 0.1)
monthly_mh_cond

monthly_mh_cond <- monthly_mh_cond[, c(1, 2, 3, 9, 4, 10, 5, 11, 6, 12, 7, 13, 8, 14)]
monthly_mh_cond

monthly_mh_cond$depression_assessed_percent[is.na(monthly_mh_cond$depression_assessed_percent)] <- '0.0%'
monthly_mh_cond$depression_pos_percent[is.na(monthly_mh_cond$depression_pos_percent)] <- '0.0%'
monthly_mh_cond$anxiety_assessed_percent[is.na(monthly_mh_cond$anxiety_assessed_percent)] <- '0.0%'
monthly_mh_cond$anxiety_pos_percent[is.na(monthly_mh_cond$anxiety_pos_percent)] <- '0.0%'
monthly_mh_cond$ptsd_assessed_percent[is.na(monthly_mh_cond$ptsd_assessed_percent)] <- '0.0%'
monthly_mh_cond$ptsd_pos_percent[is.na(monthly_mh_cond$ptsd_pos_percent)] <- '0.0%'
monthly_mh_cond




monthly_prep <- monthly_prep %>%
  group_by(month_year = format(enc_date, "%m/%Y")) %>%
  summarise(assessments = sum(assessments),
            prep_risk_assessed = sum(prep_risk_assessed),
            prep_eligible = sum(prep_eligible),
            prep_assessed = sum(prep_assessed)) %>%
  mutate(year = as.integer(substring(month_year, 4, 7)),
         month = as.integer(substring(month_year, 1, 2))) %>%
  arrange(year, month) %>%
  select(-year, -month)
monthly_prep

monthly_prep$prep_risk_percent <- percent(monthly_prep$prep_risk_assessed/monthly_prep$assessments, accuracy = 0.1)
monthly_prep
monthly_prep$prep_eligible_percent <- percent(monthly_prep$prep_eligible/monthly_prep$prep_risk_assessed, accuracy = 0.1)
monthly_prep
monthly_prep$prep_assessed_percent <- percent(monthly_prep$prep_assessed/monthly_prep$prep_eligible, accuracy = 0.1)
monthly_prep

monthly_prep <- monthly_prep[, c(1, 2, 3, 6, 4, 7, 5, 8)]
monthly_prep

monthly_prep$prep_risk_percent[is.na(monthly_prep$prep_risk_percent)] <- '0.0%'
monthly_prep$prep_eligible_percent[is.na(monthly_prep$prep_eligible_percent)] <- '0.0%'
monthly_prep$prep_assessed_percent[is.na(monthly_prep$prep_assessed_percent)] <- '0.0%'




monthly_hiv_tests <- monthly_hiv_tests %>%
  group_by(month_year = format(enc_date, "%m/%Y")) %>%
  summarise(ctr_tests = sum(ctr_tests),
            ehe_tests = sum(ehe_tests)) %>%
  mutate(year = as.integer(substring(month_year, 4, 7)),
         month = as.integer(substring(month_year, 1, 2))) %>%
  arrange(year, month) %>%
  select(-year, -month)
monthly_hiv_tests




monthly_hcv_tests <- monthly_hcv_tests %>%
  group_by(month_year = format(enc_date, "%m/%Y")) %>%
  summarise(hcv_tests = sum(hcv_tests)) %>%
  mutate(year = as.integer(substring(month_year, 4, 7)),
         month = as.integer(substring(month_year, 1, 2))) %>%
  arrange(year, month) %>%
  select(-year, -month)
monthly_hcv_tests




monthly_assessments <- monthly_assessments %>%
  group_by(month_year = format(enc_date, "%m/%Y")) %>%
  summarise(assessments = sum(assessments)) %>%
  mutate(year = as.integer(substring(month_year, 4, 7)),
         month = as.integer(substring(month_year, 1, 2))) %>%
  arrange(year, month) %>%
  select(-year, -month)
monthly_assessments

monthly_sud_num <- select(monthly_sud_assess, -assessments, -percent_sud_assessed, -sud_pos, -percent_sud_pos)
monthly_mh_num <- select(monthly_mh_assess, -assessments, -sud_pos, -percent_brief_mh_assessed)
monthly_prep_num <- select(monthly_prep, -assessments, -prep_risk_assessed, -prep_risk_percent)

assessment_metrics <- merge(monthly_assessments, monthly_sud_num, by = 'month_year', all.x = T)
assessment_metrics <- merge(assessment_metrics, monthly_mh_num, by = 'month_year', all.x = T)
assessment_metrics <- merge(assessment_metrics, monthly_prep_num, by = 'month_year', all.x = T)
assessment_metrics # metrics of assessments, SUD/MH/PrEP screening/positivity
assessment_metrics$assessments[is.na(assessment_metrics$assessments)] <- 0
assessment_metrics$sud_assessed[is.na(assessment_metrics$sud_assessed)] <- 0
assessment_metrics$brief_mh_assessed[is.na(assessment_metrics$brief_mh_assessed)] <- 0
assessment_metrics$mh_assessed[is.na(assessment_metrics$mh_assessed)] <- 0
assessment_metrics$prep_eligible[is.na(assessment_metrics$prep_eligible)] <- 0
assessment_metrics

assessment_metrics$Date <- as.Date(paste("01", assessment_metrics$month_year, sep = "/"), format = "%d/%m/%Y")
assessment_metrics <- select(assessment_metrics, -month_year)

assessment_metrics <- assessment_metrics %>%
  group_by(Date = format(Date, "%m/%Y")) %>%
  summarise(assessments = sum(assessments),
            sud_assessed = sum(sud_assessed),
            brief_mh_assessed = sum(brief_mh_assessed),
            mh_assessed = sum(mh_assessed),
            prep_eligible = sum(prep_eligible)) %>%
  mutate(year = as.integer(substring(Date, 4, 7)),
         month = as.integer(substring(Date, 1, 2))) %>%
  arrange(year, month) %>%
  select(-year, -month)
assessment_metrics




colnames(monthly_metrics)[1] <- 'Date'
monthly_metrics
colnames(monthly_sud_assess)[1] <- 'Date'
monthly_sud_assess
colnames(monthly_mh_assess)[1] <- 'Date'
monthly_mh_assess
colnames(monthly_mh_cond)[1] <- 'Date'
monthly_mh_cond
colnames(monthly_prep)[1] <- 'Date'
monthly_prep
colnames(monthly_hiv_tests)[1] <- 'Date'
monthly_hiv_tests
colnames(monthly_hcv_tests)[1] <- 'Date'
monthly_hcv_tests


```

:::{#hero-heading}

This metrics report shows data for encounter information for **Bella Procaccio**. Any data contained within this report covers clinical information captured in the EIP Database since **January 1st, 2023**. The metrics in this report describe specific encounter information and the services and/or referrals that were provided to patients/clients.

Until a unique patient identifier is created for patients seen by EIP, matching unique patients across multiple years of encounters is difficult. Therefore, patient demographic and population information will refer only to the number of encounters, not the unique number of patients. This part of the report is still in development.

:::


# Encounter Information

The remainder of this metrics report is all encounter-based information. Since some of our staff have responsibilities that may have them performing tasks that cross multiple roles within the program, all metrics are considered here when discussing encounter information. For example, linkage information is evaluated below even though not all staff perform linkage duties. This will keep the metric reports for all staff consistent, and allow for the transition into other roles at any time without an interruption in this reporting structure. Encounters are defined and stratified by EIP team member by the following information captured in the EIP Database:

- **Encounters:** *An encounter is any visit that is created within the patient record in the EIP Database, whether service information is provided or not. Every encounter should have some type of service entered (i.e. Assessment, HIV/HCV Testing, Linkage), but is still counted as an encounter if something is entered within the record (i.e. just Encounter Information or Encounter Checklist info).*

- **Staff indication:** *There are background variables on each page in the EIP Database that captures the REDCap username of the individual completing the form. If you created any of the forms for that encounter within the EIP Database, or if your name is selected as the "EIP Counselor" on the Encounter Checklist page, then you are attached to that record in some capacity and noted in these numbers. If you work as a peer and your name is selected on the "Peer Support" form, that also indicates that encounter as one you were involved with in some way, and thus counted here.*

Bella has had a total of **`r encounters` encounters** entered into the EIP Database since January 1st, 2023. A summary table of these encounters and what they consisted of are shown below.


<br>
```{r, echo=FALSE}

# table of all metrics
monthly_metrics_table <- select(monthly_metrics, Date, encounters, assessments, percent_assessed, ctr_tests, percent_ctr_tests, ehe_tests, percent_ehe_tests, hcv_tests, percent_hcv_tests, ltc_cases, percent_ltc_cases)
colnames(monthly_metrics_table)[2] <- 'Encounters'
colnames(monthly_metrics_table)[3] <- 'Assessments'
colnames(monthly_metrics_table)[4] <- '% Assessed'
colnames(monthly_metrics_table)[5] <- 'CTR Tests'
colnames(monthly_metrics_table)[6] <- '% CTR'
colnames(monthly_metrics_table)[7] <- 'EHE Tests'
colnames(monthly_metrics_table)[8] <- '% EHE'
colnames(monthly_metrics_table)[9] <- 'HCV Tests'
colnames(monthly_metrics_table)[10] <- '% HCV Tests'
colnames(monthly_metrics_table)[11] <- 'LTC Cases'
colnames(monthly_metrics_table)[12] <- '% LTC Cases'
monthly_metrics_table[nrow(monthly_metrics_table) + 1,] <- list('Totals', encounters, assessments, assessments_percent, ctr_tests, ctr_tests_percent, ehe_tests, ehe_tests_percent, hcv_rapid_tests, hcv_rapid_tests_percent, ltc_cases, ltc_cases_percent)
monthly_metrics_table %>%
  kbl(align = 'lccccccccccc', table.attr = 'data-quarto-disable-processing="true"') %>%
  kable_paper(bootstrap_options = "striped", full_width = F) %>%
  row_spec(row = nrow(monthly_metrics_table), bold = T, background = "lightgrey") %>%
  kable_styling(full_width = F, font_size = 11)

```
<br>

The graph below shows the total number of encounters Bella has had during each month within the reporting period. Also, the total number of each service provided are shown by the trend lines, which allows you to see trends over time. The definitions for how each of these numbers are stratified is described below the graph. This plot is dynamic, meaning you can select and deselect each particular metric by clicking the text in the legend on the right to focus on particular services provided. The plot also has the ability to zoom in on particular time frames by dragging the pointer to select the desired timeframe, and you can also scroll through timepoints using the slider below the x-axis. You can reset the graph by double-clicking within the plot. As mentioned above, not all staff offer or perform these services, so you can deselect the ones not within Bella's role for a more tailored focus of tasks. This is a visual representation of the data shown in the complete summary metrics table above.

<br>
```{r, echo=FALSE}

# bar/line plot of all metrics
monthly_metrics$Date <- as.Date(paste("01", monthly_metrics$Date, sep = "/"), format = "%d/%m/%Y")
monthly_metrics <- monthly_metrics[order(monthly_metrics$Date),]
metrics_plot <- plot_ly(monthly_metrics , x = ~Date, y = ~encounters, type = 'bar',
                        name = 'Encounters', marker = list(color = 'black')) %>%
  add_trace(monthly_metrics, x = ~Date, y = ~assessments, type = 'scatter',  mode = 'lines+markers',
            name = 'Assessments', line = list(color = 'lightcoral'), marker = list(color = 'lightcoral')) %>%
  add_trace(monthly_metrics, x = ~Date, y = ~ctr_tests, type = 'scatter',  mode = 'lines+markers',
            name = 'CTR Tests', line = list(color = 'lightskyblue'), marker = list(color = 'lightskyblue')) %>%
  add_trace(monthly_metrics, x = ~Date, y = ~ehe_tests, type = 'scatter',  mode = 'lines+markers',
            name = 'EHE Tests', line = list(color = 'darkgreen'), marker = list(color = 'darkgreen')) %>%
  add_trace(monthly_metrics, x = ~Date, y = ~hcv_tests, type = 'scatter',  mode = 'lines+markers',
            name = 'HCV Tests', line = list(color = 'gold'), marker = list(color = 'gold')) %>%
  add_trace(monthly_metrics, x = ~Date, y = ~ltc_cases, type = 'scatter',  mode = 'lines+markers',
            name = 'LTC Cases', line = list(color = '#AB82FF'), marker = list(color = '#AB82FF'))

metrics_plot <- metrics_plot %>%
  layout(title = 'Procaccio Monthly Encounters & Services',
         #xaxis = list(rangeslider = list(type = "date")),
         yaxis = list(title = "Total")) %>%
  config(displayModeBar = FALSE)
metrics_plot

monthly_metrics$Date <- format(monthly_metrics$Date, "%m/%Y")

```
<br>

- **Assessments:** *An Assessment is when at least one question located on the Risk Assessment form is answered during the encounter.*

- **CTR Tests:** *A CTR test is a rapid-based HIV test collected via a fingerstick (or in extremely rare instances, an oral swab) that is not marked as an EHE test in the Reason for Offer Category on the HIV Testing form.*

- **EHE Tests:** *An EHE test is a rapid-based HIV test collected via a fingerstick that is marked as an EHE test in the Reason for Offer Category on the HIV Testing form.*

- **HCV Tests:** *A rapid-based HCV tested is counted when the sample type for the HCV test documented on the Testing - HCV form is a fingerstick test. Therefore, lab-based tests are not counted here.*

- **LTC Cases:** *A Linkage to Care case is considered opened when one of the linkage services are selected on the start of the Linkage to Care form in the database. The number counted here are the total number of cases initiated during the encounter, not necessarily those open at that time (for example, a case still open from a prior month).*


## Assessments

Assessment data contains a lot of important information regarding patient risk and needs, and help determine whether or not the appropriate information and referrals are being provided during the encounter. The assessment data is analyzed in this section and broken down by specific questions to determine when certain screening tools are utilized to determine patient needs. The assessment contains data regarding substance use disorder (**SUD**), mental health (**MH**), and pre-exposure prophylaxis (**PrEP**), all examined below. Bella has conducted a total of **`r assessments` assessments**, which means that `r assessments_percent` of Bella's encounters consisted of an assessment (*`r assessments`/`r encounters`*).

A summary of the general monthly trends of screening for each of these conditions is shown in the plot below. The description of the screening tools, as well as the number of screens and positivity per month are discussed within this section as well.

<br>
```{r, echo=FALSE}

# bar/line plot of Assessment trends
assessment_metrics$Date <- as.Date(paste("01", assessment_metrics$Date, sep = "/"), format = "%d/%m/%Y")
assessment_metrics <- assessment_metrics[order(assessment_metrics$Date),]
assessment_plot <- plot_ly(assessment_metrics , x = ~Date, y = ~assessments, type = 'bar',
                        name = 'Assessments', marker = list(color = 'lightcoral')) %>%
  add_trace(assessment_metrics, x = ~Date, y = ~sud_assessed, type = 'scatter',  mode = 'lines+markers',
            name = 'SUD Assessed', line = list(color = '#C1FFC1'), marker = list(color = '#C1FFC1')) %>%
  add_trace(assessment_metrics, x = ~Date, y = ~brief_mh_assessed, type = 'scatter',  mode = 'lines+markers',
            name = 'Brief MH Assessed', line = list(color = '#AB82FF'), marker = list(color = '#AB82FF')) %>%
  add_trace(assessment_metrics, x = ~Date, y = ~mh_assessed, type = 'scatter',  mode = 'lines+markers',
            name = 'MH Assessed', line = list(color = '#551A8B'), marker = list(color = '#551A8B')) %>%
  add_trace(assessment_metrics, x = ~Date, y = ~prep_eligible, type = 'scatter',  mode = 'lines+markers',
            name = 'PrEP Eligible', line = list(color = 'olivedrab'), marker = list(color = 'olivedrab'))

assessment_plot <- assessment_plot %>%
  layout(title = 'Procaccio Monthly Assessment Trends',
         #xaxis = list(rangeslider = list(type = "date")),
         yaxis = list(title = "Total")) %>%
  config(displayModeBar = FALSE)
assessment_plot

```
<br>

### Substance Use Disorder (SUD)

SUD disorder measures include the Alcohol Use Disorders Identification Test (AUDIT-C) for alcohol abuse as well as the National Institute on Drug Abuse (NIDA) Modified Alcohol, Smoking, and Substance Involvement Screening Test (ASSIST), or the NM-ASSIST for all forms of substance abuse disorder. If any of the questions within this scale are answered by the patient during the encounter, then they are considered **screened for SUD**. There are scores associated with these measures, and those are calculated within the EIP Database in the background as data is entered. If the individual meets criteria on either the AUDIT-C or the NM-ASSIST, then they are **considered positive for a SUD**. The total number of assessments completed by Bella during this reporting period is **`r assessments`**, with **`r sud_assessed` assessments** having been screened for a SUD (*`r sud_assessed_percent`, `r sud_assessed`/`r assessments`*). For all assessments where the individual was screened for a SUD, there were a total of **`r sud_pos`** that were positive for SUD (*`r sud_pos_percent`, `r sud_pos`/`r sud_assessed`*).

<br>
```{r, echo=FALSE}

# table of SUD Assessment/Positive
monthly_sud_assess_table <- select(monthly_sud_assess, Date, assessments, sud_assessed, percent_sud_assessed, sud_pos, percent_sud_pos)
colnames(monthly_sud_assess_table)[2] <- 'Assessments'
colnames(monthly_sud_assess_table)[3] <- 'SUD Assessed'
colnames(monthly_sud_assess_table)[4] <- '% SUD Assessed'
colnames(monthly_sud_assess_table)[5] <- 'SUD +'
colnames(monthly_sud_assess_table)[6] <- '% SUD +'
monthly_sud_assess_table[nrow(monthly_sud_assess_table) + 1,] <- list('Totals', assessments, sud_assessed, sud_assessed_percent, sud_pos, sud_pos_percent)
monthly_sud_assess_table %>%
  kbl(align = 'lccccc', table.attr = 'data-quarto-disable-processing="true"') %>%
  kable_paper(bootstrap_options = "striped", full_width = F) %>%
  row_spec(row = nrow(monthly_sud_assess_table), bold = T, background = "lightgrey") %>%
  kable_styling(full_width = F, font_size = 11)

```
<br>


### Mental Health (MH)

MH measures within the EIP assessment include the Patient Health Questionnaire (PHQ) for depression, the Generalized Anxiety Disorder (GAD) scale for anxiety, and the Post-Traumatic Stress Disorder CheckList (PCL) for Civilians (PCL-C) for PTSD. If any of the questions within these scales are answered by the patient during the encounter, then they are considered **screened for MH**. There are scores associated with these measures, and those are calculated within the EIP Database in the background as data is entered. If the individual meets criteria on any of these scales for these MH conditions, then they are **considered positive for a MH condition**. However, [it is important to note: prior to January 2024, we only conducted the full MH measures for those that were also positive for a SUD, not all those assessed]{style="color: red;"}. Prior to 2024, we conducted shortened versions of the PHQ (PHQ2) and the GAD (GAD2) for all those assessed, but we had only asked the full versions and the PCL-C scale when they were determined positive for any SUD. The total number of assessments where at least one of the questions were asked on these condensed scales was **`r brief_mh_assessed`** (*`r brief_mh_assessed_percent`, `r brief_mh_assessed`/`r assessments`*). The total number of assessments where the patient screened positive for a SUD *and* completed at least one of the questions on these MH measures was **`r mh_assessed`** (*`r mh_assessed_percent`, `r mh_assessed`/`r sud_pos`*). *Remember, the denominator used here is the number of assessments where the individual was SUD positive (n = `r sud_pos`), not all assessments (n = `r assessments`), since the full MH assessments were only available to those who had a SUD prior to 2024.*

For all assessments where the individual was positive for a SUD and screened for MH, there were a total of **`r mh_pos`** that were positive for at least one of the MH conditions screened for on the EIP assessment (*`r mh_pos_percent`, `r mh_pos`/`r mh_assessed`*). In regards to the specific conditions that were assessed, those are provided below the table.

<br>
```{r, echo=FALSE}

# table of MH Assessment/Positive
monthly_mh_assess_table <- select(monthly_mh_assess, Date, assessments, brief_mh_assessed, percent_brief_mh_assessed, sud_pos, mh_assessed, percent_mh_assessed, mh_pos, percent_mh_pos)
colnames(monthly_mh_assess_table)[2] <- 'Assessments'
colnames(monthly_mh_assess_table)[3] <- 'Brief MH Assessed'
colnames(monthly_mh_assess_table)[4] <- '% Brief MH Assessed'
colnames(monthly_mh_assess_table)[5] <- 'SUD +'
colnames(monthly_mh_assess_table)[6] <- 'MH Assessed'
colnames(monthly_mh_assess_table)[7] <- '% MH Assessed'
colnames(monthly_mh_assess_table)[8] <- 'MH +'
colnames(monthly_mh_assess_table)[9] <- '% MH +'
monthly_mh_assess_table[nrow(monthly_mh_assess_table) + 1,] <- list('Totals', assessments, brief_mh_assessed, brief_mh_assessed_percent, sud_pos, mh_assessed, mh_assessed_percent, mh_pos, mh_pos_percent)
monthly_mh_assess_table %>%
  kbl(align = 'lcccccccc', table.attr = 'data-quarto-disable-processing="true"') %>%
  kable_paper(bootstrap_options = "striped", full_width = F) %>%
  row_spec(row = nrow(monthly_mh_assess_table), bold = T, background = "lightgrey") %>%
  kable_styling(full_width = F, font_size = 11)

```
<br>

- **Depression**: total of `r depression_assessed` assessed (*`r depression_assessed_percent` of all those assessed for MH, `r depression_assessed`/`r mh_assessed`*), with `r depression_pos` positive (*`r depression_pos_percent` of all those screened for depression, `r depression_pos`/`r depression_assessed`*).

- **Anxiety**: total of `r anxiety_assessed` assessed (*`r anxiety_assessed_percent` of all those assessed for MH, `r anxiety_assessed`/`r mh_assessed`*), with `r anxiety_pos` positive (*`r anxiety_pos_percent` of all those screened for anxiety, `r anxiety_pos`/`r anxiety_assessed`*).

- **PTSD**: total of `r ptsd_assessed` assessed (*`r ptsd_assessed_percent` of all those assessed for MH, `r ptsd_assessed`/`r mh_assessed`*), with `r ptsd_pos` positive (*`r ptsd_pos_percent` of all those screened for PTSD, `r ptsd_pos`/`r ptsd_assessed`*).

<br>
```{r, echo=FALSE}

# table of MH conditions
monthly_mh_cond_table <- select(monthly_mh_cond, Date, mh_assessed, depression_assessed, depression_assessed_percent, depression_pos, depression_pos_percent, anxiety_assessed, anxiety_assessed_percent, anxiety_pos, anxiety_pos_percent, ptsd_assessed, ptsd_assessed_percent, ptsd_pos, ptsd_pos_percent)
colnames(monthly_mh_cond_table)[2] <- 'MH Assessed'
colnames(monthly_mh_cond_table)[3] <- 'Depression Assessed'
colnames(monthly_mh_cond_table)[4] <- '% Depression Assessed'
colnames(monthly_mh_cond_table)[5] <- 'Depression positive'
colnames(monthly_mh_cond_table)[6] <- '% Depression positive'
colnames(monthly_mh_cond_table)[7] <- 'Anxiety Assessed'
colnames(monthly_mh_cond_table)[8] <- '% Anxiety Assessed'
colnames(monthly_mh_cond_table)[9] <- 'Anxiety positive'
colnames(monthly_mh_cond_table)[10] <- '% Anxiety positive'
colnames(monthly_mh_cond_table)[11] <- 'PTSD Assessed'
colnames(monthly_mh_cond_table)[12] <- '% PTSD Assessed'
colnames(monthly_mh_cond_table)[13] <- 'PTSD positive'
colnames(monthly_mh_cond_table)[14] <- '% PTSD positive'
monthly_mh_cond_table[nrow(monthly_mh_cond_table) + 1,] <- list('Totals', mh_assessed, depression_assessed, depression_assessed_percent, depression_pos, depression_pos_percent, anxiety_assessed, anxiety_assessed_percent, anxiety_pos, anxiety_pos_percent, ptsd_assessed, ptsd_assessed_percent, ptsd_pos, ptsd_pos_percent)
monthly_mh_cond_table %>%
  kbl(align = 'lccccccccccccc', table.attr = 'data-quarto-disable-processing="true"') %>%
  kable_paper(bootstrap_options = "striped", full_width = F) %>%
  row_spec(row = nrow(monthly_mh_cond_table), bold = T, background = "lightgrey") %>%
  kable_styling(full_width = F, font_size = 10)

```
<br>
<br>


### Pre-Exposure Prophylaxis (PrEP)

PrEP eligibility is covered by several different questions scattered within the assessment that determine whether an individual may be at risk for contracting HIV and could benefit from a PrEP assessment. The total number of assessments Bella conducted where the individual answered at least one of the questions regarding their risk of contracting HIV, and therefore their potential need for PrEP, was **`r prep_risk_assessed` assessments** (*`r prep_risk_assessed_percent` of all those assessed, `r prep_risk_assessed`/`r assessments`*). The total number of assessments where the individual was considered at risk and therefore eligible for PrEP was **`r prep_eligible` assessments** (*`r prep_eligible_percent` of all those assessed for their HIV risk, `r prep_eligible`/`r prep_risk_assessed`*). Once an individual is determined to be eligible for PrEP based on their risks for contracting HIV, our staff is then instructed to discuss the individual's knowledge of PrEP and several other factors, providing education and a referral for PrEP initiation and linkage to a provider. The PrEP assessment is defined as being conducted as long as at least one of the questions within this individualized assessment is answered. The total number of assessments where the individual was eligible for PrEP based on their risks *and* received this PrEP assessment was **`r prep_assessed` assessments** (*`r prep_assessed_percent` of all those eligible for PrEP, `r prep_assessed`/`r prep_eligible`*).

<br>
```{r, echo=FALSE}

# table of PrEP Risk/Eligible
monthly_prep_table <- select(monthly_prep, Date, assessments, prep_risk_assessed, prep_risk_percent, prep_eligible, prep_eligible_percent, prep_assessed, prep_assessed_percent)
colnames(monthly_prep_table)[2] <- 'Assessed'
colnames(monthly_prep_table)[3] <- 'Risk Assessed'
colnames(monthly_prep_table)[4] <- '% At Risk'
colnames(monthly_prep_table)[5] <- 'PrEP Eligible'
colnames(monthly_prep_table)[6] <- '% Eligible'
colnames(monthly_prep_table)[7] <- 'PrEP Assessed'
colnames(monthly_prep_table)[8] <- '% Assessed'
monthly_prep_table[nrow(monthly_prep_table) + 1,] <- list('Totals', assessments, prep_risk_assessed, prep_risk_assessed_percent, prep_eligible, prep_eligible_percent, prep_assessed, prep_assessed_percent)
monthly_prep_table %>%
  kbl(align = 'lccccccc', table.attr = 'data-quarto-disable-processing="true"') %>%
  kable_paper(bootstrap_options = "striped", full_width = F) %>%
  row_spec(row = nrow(monthly_prep_table), bold = T, background = "lightgrey") %>%
  kable_styling(full_width = F, font_size = 11)

```
<br>

An individual is considered at risk for contracting HIV and eligible for PrEP based on whether they meet at least one of the criteria listed below. However, according to the Ohio Department of Health (ODH), anyone who is negative for HIV is considered eligible for PrEP.

- **Exchange of money/drugs for sex within their lifetime**

- **More than 3 sexual partners within the past year**

- **Shared works (IDU) within their lifetime**

- **Diagnosed with a sexually transmitted infection (STI) within the past year**

- **Identifies as a MSM and endorsed unprotected anal sex, a diagnosis of syphilis/gonorrhea, or sex with a PLWHA within the past year**

- **Identifies as a heterosexual female and endorsed unprotected vaginal/anal sex within the past year with a partner who is either a MSM, an IDU, or a PLWHA**


<br>


## HIV Testing

The total number of HIV tests, including both CTR and EHE tests, are shown in the plot below. These only include rapid-based HIV tests that are performed by Bella, and does not include any lab tests that are initiated by medical staff prompted by EIP, or lab draws performed in the community (*unless it is the result of an initial rapid test*). The plot has the ability to select only CTR/EHE tests, and has the ability to zoom in on particular time frames by clicking and dragging. You can reset the graph by double-clicking within the plot.

<br>
<br>
```{r, echo=FALSE}

# bar chart of monthly CTR/EHE testing
monthly_hiv_tests$Date <- as.Date(paste("01", monthly_hiv_tests$Date, sep = "/"), format = "%d/%m/%Y")
monthly_hiv_tests <- monthly_hiv_tests[order(monthly_hiv_tests$Date),]
monthly_hiv_testing_plot <- plot_ly(data = monthly_hiv_tests, x = ~Date, y = ~ctr_tests, type = 'bar', name = 'CTR Tests',
                                    text = ~ctr_tests, textposition = 'auto',
                                    marker = list(color = 'lightskyblue')) %>%
  add_trace(y = ~ehe_tests, name = 'EHE Tests',
            text = ~ehe_tests, textposition = 'auto',
            marker = list(color = 'darkgreen')) %>%
  layout(title = 'Procaccio Monthly Rapid HIV Testing',
         #xaxis = list(rangeslider = list(type = "date")),
         yaxis = list(title = 'Total HIV Tests'), barmode = 'stack') %>%
  config(displayModeBar = FALSE)
monthly_hiv_testing_plot

```
<br>

Out of the total number of HIV tests that Bella has conducted (**n = `r total_hiv_tests`**), there have been [**`r total_hiv_positive` positive tests**]{style="color: red;"} (*`r total_hiv_positive_percent` of all HIV tests, `r total_hiv_positive`/`r total_hiv_tests`*). There have been a total of `r ctr_positive` positive CTR tests (*`r ctr_positive_percent` of all CTR tests, `r ctr_positive`/`r ctr_tests`*) and a total of `r ehe_positive` positive EHE tests (*`r ehe_positive_percent` of all EHE tests, `r ehe_positive`/`r ehe_tests`*).

For the individuals positively identified through testing, Bella has identified a total of [**`r total_hiv_new_positive` new positive individuals**]{style="color: red;"} (*`r total_hiv_new_positive_percent` of all positive HIV tests, `r total_hiv_new_positive`/`r total_hiv_positive`*). This number is comprised of `r ctr_new_positive` new positives from CTR testing (*`r ctr_new_positive_percent` percent of all CTR positive tests, `r ctr_new_positive`/`r ctr_positive`*) and `r ehe_new_positive` new positives from EHE testing (*`r ehe_new_positive_percent` percent of all EHE positive tests, `r ehe_new_positive`/`r ehe_positive`*). Therefore, the overall positivity rate for Bella's HIV testing is [**`r hiv_positivity_rate`**]{style="color: red;"} (*`r total_hiv_new_positive`/`r total_hiv_tests`*), and for each program specifically is as follows: `r ctr_positivity_rate` for CTR (*`r ctr_new_positive`/`r ctr_tests`*) and `r ehe_positivity_rate` for EHE (*`r ehe_new_positive`/`r ehe_tests`*).

<br>
```{r, echo=FALSE}

# table of HIV testing positivity
hiv_pos_tbl <- data.frame(matrix(ncol = 4, nrow = 0))
colnames(hiv_pos_tbl) <- c('', 'Total', 'CTR', 'EHE')
hiv_pos_tbl[nrow(hiv_pos_tbl) + 1,] <- list('Number of Tests', total_hiv_tests, ctr_tests, ehe_tests)
hiv_pos_tbl[nrow(hiv_pos_tbl) + 1,] <- list('Positives', total_hiv_positive, ctr_positive, ehe_positive)
hiv_pos_tbl[nrow(hiv_pos_tbl) + 1,] <- list('New Positives', total_hiv_new_positive, ctr_new_positive, ehe_new_positive)
hiv_pos_tbl[nrow(hiv_pos_tbl) + 1,] <- list('Positivity Rate', hiv_positivity_rate, ctr_positivity_rate, ehe_positivity_rate)
hiv_pos_tbl %>%
  kbl(align = 'rccc', table.attr = 'data-quarto-disable-processing="true"') %>%
  kable_paper(bootstrap_options = "striped", full_width = F) %>%
  kable_styling(full_width = F, font_size = 12)

```
<br>
<br>

Additionally, false positive tests occur when the individual has an initial reactive/positive test, but additional testing shows that their final status is actually a negative result. Bella has had a total of **`r hiv_false_positive` tests that have resulted in a false positive** (*`r hiv_false_positive_percent` of all HIV tests, `r hiv_false_positive`/`r total_hiv_tests`*), or those that had an initial reactive result but a final negative status.

There are also instances when the initial test may be reactive, but the confirmatory test is negative, leading to a discordant result that requires additional testing (*HIV RNA testing*). Until that RNA testing is completed, this is known as an Indeterminate result. Bella currently has a total of **`r hiv_indeterminate` tests that are indeterminate and in need of RNA testing** (*`r hiv_indeterminate_percent` of all HIV tests, `r hiv_indeterminate`/`r total_hiv_tests`*). This is counted when the final test status is noted as Indeterminate. When the RNA testing confirms the final result, the final status is updated. Therefore, this only counts those that are currently marked as Indeterminate and have not had the follow-up RNA testing necessary to know the individual's final HIV status.


## Hepatitis C Testing

The total number of Hepatitis C rapid tests conducted by Bella per month are shown in the plot below. This only considers the rapid tests initiated by our staff, not lab-initiated tests or blood draws (*unless it is the result of an initial rapid test*). The plot has the ability to zoom in on particular time frames by clicking and dragging. You can reset the graph by double-clicking within the plot.

<br>
```{r, echo=FALSE}

# bar chart of monthly rapid HCV testing
monthly_hcv_tests$Date <- as.Date(paste("01", monthly_hcv_tests$Date, sep = "/"), format = "%d/%m/%Y")
monthly_hcv_tests <- monthly_hcv_tests[order(monthly_hcv_tests$Date),]
monthly_hcv_testing_plot <- plot_ly(data = monthly_hcv_tests, x = ~Date, y = ~hcv_tests, type = 'bar', name = 'HCV Tests',
                                    text = ~hcv_tests, textposition = 'auto',
                                    marker = list(color = 'gold')) %>%
  layout(title = 'Procaccio Monthly Hepatitis C Testing',
         #xaxis = list(rangeslider = list(type = "date")),
         yaxis = list(title = 'Total HCV Tests',
                      dtick = 1,
                      rangemode = "tozero",
                      range = c(0, max(monthly_hcv_tests$hcv_tests + 1)))) %>%
  config(displayModeBar = FALSE)
monthly_hcv_testing_plot


```
<br>
<br>

Out of the total number of rapid HCV tests conducted by Bella (**n = `r hcv_rapid_tests`**), there were a total of [**`r hcv_rapid_positive` reactive/positive HCV results**]{style="color: orange;"} (*`r hcv_rapid_positive_percent` of all rapid HCV tests, `r hcv_rapid_positive`/`r hcv_rapid_tests`*). The total number of newly-identified positives from these tests was **`r hcv_rapid_new_positive` new HCV positive individuals** (*`r hcv_rapid_new_positive_percent` of all HCV positive HCV tests, `r hcv_rapid_new_positive`/`r hcv_rapid_positive`*). Therefore, the overall positivity rate for Bella's Hepatitis C testing is [**`r hcv_rapid_positivity_rate`**]{style="color: orange;"} (*`r hcv_rapid_new_positive`/`r hcv_rapid_tests`*).

<br>
```{r, echo=FALSE}

# table of HCV testing positivity
hcv_pos_tbl <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(hcv_pos_tbl) <- c('', 'Total')
hcv_pos_tbl[nrow(hcv_pos_tbl) + 1,] <- list('Number of Tests', hcv_rapid_tests)
hcv_pos_tbl[nrow(hcv_pos_tbl) + 1,] <- list('Positives', hcv_rapid_positive)
hcv_pos_tbl[nrow(hcv_pos_tbl) + 1,] <- list('New Positives', hcv_rapid_new_positive)
hcv_pos_tbl[nrow(hcv_pos_tbl) + 1,] <- list('Positivity Rate', hcv_rapid_positivity_rate)
hcv_pos_tbl %>%
  kbl(align = 'rc', table.attr = 'data-quarto-disable-processing="true"') %>%
  kable_paper(bootstrap_options = "striped", full_width = F) %>%
  kable_styling(full_width = F, font_size = 12)

```
<br>

## Referrals

Referral information can be provided to patients/clients regardless of what occurs during their encounter, and regardless of whether or not they received any EIP services during their encounter. They may be provided based on brief conversations with our staff or from information gathered from medical staff that may not have been documented within the EIP database. Referrals are also documented in multiple places within the EIP database, those provided during the encounter and those provided during any linkage follow-up. Even if referrals are provided during the linkage process, they are represented here as any information gathered during the encounter could have led to that referral being provided. The referrals will be noted separately, but also as a combined total, and the referrals provided specifically during the linkage process will be repeated in the linkage to care  section.

<div style="width: 50%; float: left;">
```{r, echo=FALSE}

# table of referrals
referral_tbl <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(referral_tbl) <- c('', 'Encounter referral', 'Linkage referral')
referral_tbl[nrow(referral_tbl) + 1,] <- list('HIV', hiv_enc_referral, hiv_ltc_referral)
referral_tbl[nrow(referral_tbl) + 1,] <- list('Hepatitis C', hcv_enc_referral, hcv_ltc_referral)
referral_tbl[nrow(referral_tbl) + 1,] <- list('SUD', sud_enc_referral, sud_ltc_referral)
referral_tbl[nrow(referral_tbl) + 1,] <- list('Human Trafficking', ht_enc_referral, ht_ltc_referral)
referral_tbl[nrow(referral_tbl) + 1,] <- list('Mental Health', mh_enc_referral, mh_ltc_referral)
referral_tbl[nrow(referral_tbl) + 1,] <- list('Housing', housing_enc_referral, housing_ltc_referral)
referral_tbl[nrow(referral_tbl) + 1,] <- list('PrEP', prep_enc_referral, prep_ltc_referral)
referral_tbl[nrow(referral_tbl) + 1,] <- list('STI', sti_enc_referral, sti_ltc_referral)
referral_tbl[nrow(referral_tbl) + 1,] <- list('Food services', food_enc_referral, food_ltc_referral)
referral_tbl[nrow(referral_tbl) + 1,] <- list('Financial assistance', financial_enc_referral, financial_ltc_referral)
referral_tbl[nrow(referral_tbl) + 1,] <- list('Person abuse', personabuse_enc_referral, personabuse_ltc_referral)
referral_tbl[nrow(referral_tbl) + 1,] <- list('General health', general_enc_referral, general_ltc_referral)
referral_tbl[nrow(referral_tbl) + 1,] <- list('PCP*', pcp_enc_referral, '')
referral_tbl[nrow(referral_tbl) + 1,] <- list('ED SW*', ed_sw_enc_referral, '')
referral_tbl[nrow(referral_tbl) + 1,] <- list('Peer services*', peer_enc_referral, '')
referral_tbl[nrow(referral_tbl) + 1,] <- list('Other', other_enc_referral, other_ltc_referral)
referral_tbl[nrow(referral_tbl) + 1,] <- list('Totals', total_enc_referrals, total_ltc_referrals)
referral_tbl %>%
  kbl(align = "rccc", table.attr = 'data-quarto-disable-processing="true"') %>%
  kable_paper(bootstrap_options = "striped", full_width = F) %>%
  footnote(symbol = 'No linkage referral documentation') %>%
  row_spec(row = nrow(referral_tbl), bold = T, background = "lightgrey") %>%
  kable_styling(full_width = F, font_size = 10)

```
</div>

Referrals are documented in the EIP database in three different ways at the encounter level: (1) provided information, such as brochures/pamphlets or referral lists with community programs, (2) provided internal referral for that service to one of EIP's linkage coordinators, or (3) an external referral to a specific agency. Regardless of the nature of the referral, they way a referral is defined here is as long as one of those options are covered for that service.

There are a few referrals that are only documented at the encounter level, and do not have any component for documentation on the linkage referral list. Those referral types are indicated within the table to the left as well as the figure below, and listed here: *primary care (PCP), ED social work (SW), and Peer services*.

The table to the left highlights the total number of referrals provided during the initial encounter as well as the total number of referrals provided during the linkage follow-up. These referrals do not necessarily mean that Bella is the one who made the referral, since referrals can be made at any point during the encounter/linkage process and by anyone involved. *For example, one staff member may be responsible for one portion of the encounter/linkage, and provided referrals, whereas another staff member may be responsible for another part of the encounter/linkage and provided the referral*.

The figure below shows the total number of referrals that were provided by each service. This includes any referrals provided during either the initial encounter or the linkage follow-up. The figure is sorted by most total referrals provided to the least. A service referral is only counted once here as long as it was made during either the encounter or linkage process. *For example, if an HIV referral was made bother during the encounter and linkage process, it is only counted once for that encounter*.

<br>
```{r, echo=FALSE}

# bar plot of referrals
referral_plot <- ggplot(referral_plot, aes(x=reorder(referral, count), y=count)) + 
  geom_bar(color='darkgreen', fill="darkseagreen1", stat = "identity") +
  labs(title = 'Total Referrals') +
  theme_classic() +
  geom_text(aes(label=count), position="identity", hjust=1.5, colour = "black", size = 3) +
  theme(plot.title = element_text(hjust = 0.5)) +
  theme(axis.title.x=element_blank(),
        axis.title.y=element_blank()) +
  coord_flip()
referral_plot

```
<br>


## Linkage to Care

Linkage to care (LTC) cases can be initiated for any number of reasons, including (*but not limited to*) self-report of need from the individual, identification of need based on EIP assessment and/or testing information, referral from medical staff outside of EIP, community referrals, or identification and/or referrals based on screening and testing through typical ED/hospital care. Some of our linkage staff are more specialized in specific types of LTC services, while some are cross-trained and can work multiple LTC services. Therefore, this section will cover all aspects of EIP LTC services, so if Bella does not cover some aspects of linkage, that area will still be represented here but will not show any data, or limited data based on the overall encounter and linkage information maintained within the record. This section will first go over the summary of cases worked by Bella, and general numbers of each linkage service and outcome, then will go into greater examination of each type of LTC service.

The total number of LTC cases that Bella has been involved with is **`r total_ltc_cases` LTC cases**. Our linkage staff is trained to open a linkage case any time need is identified, and then we are able to know the outcome of the case based on their documention within that LTC case. This way, we are able to understand the full scope of need for those we encounter, and determine what happens as we try to engage the patient after their ED visit. We use the term "eligible" cases for those that our linkage team are realistically able to follow-up with and at least have some ability to engage with the individual after leaving the ED. Cases that are designated as "ineligible" include the following situations: the patient is already linked to care, they are deceased, they are incarcerated, they decline linkage services, or there is no contact information for which to follow-up. Also, ongoing linkage cases mean that the individual already has a current linkage case open, so rather than working multiple cases or counting the linkage case twice, we exclude these situations due to ongoing linkage already in process. The total number of Bella's cases that were "eligible" were **`r total_eligible_ltc` eligible LTC cases** (*`r total_eligible_ltc_percent` of all LTC cases, `r total_eligible_ltc`/`r total_ltc_cases`*). Bella currently has an open case load of **`r total_in_progress_ltc` open cases** (*`r total_in_progress_ltc_percent` of all eligible LTC cases, `r total_in_progress_ltc`/`r total_eligible_ltc`*), with **`r total_in_progress_90days` open LTC cases** being open longer than 90 days (*`r total_in_progress_90days_percent` of all open LTC cases, `r total_in_progress_90days`/`r total_in_progress_ltc`*). Therefore, Bella has successfully **closed `r total_closed_ltc` LTC cases** (*`r total_closed_ltc_percent` of all eligible LTC cases, `r total_closed_ltc`/`r total_eligible_ltc`*), with a total of **`r total_linked` cases successfully linked to care** for their particular service (*`r total_linked_percent` of all closed LTC cases, `r total_linked`/`r total_closed_ltc`*). A summary table of these total LTC numbers are shown below. For each particular type of LTC service, you can review each tab below the table.


<br>
```{r, echo=FALSE}

# table of Linkage summary
ltc_summary_tbl <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(ltc_summary_tbl) <- c('', 'Total', '%')
ltc_summary_tbl[nrow(ltc_summary_tbl) + 1,] <- list('Total Cases', total_ltc_cases, '')
ltc_summary_tbl[nrow(ltc_summary_tbl) + 1,] <- list('Eligible Cases', total_eligible_ltc, total_eligible_ltc_percent)
ltc_summary_tbl[nrow(ltc_summary_tbl) + 1,] <- list('Open Cases', total_in_progress_ltc, total_in_progress_ltc_percent)
ltc_summary_tbl[nrow(ltc_summary_tbl) + 1,] <- list('Open >90 days', total_in_progress_90days, total_in_progress_90days_percent)
ltc_summary_tbl[nrow(ltc_summary_tbl) + 1,] <- list('Closed Cases', total_closed_ltc, total_closed_ltc_percent)
ltc_summary_tbl[nrow(ltc_summary_tbl) + 1,] <- list('Linked', total_linked, total_linked_percent)
ltc_summary_tbl %>%
  kbl(align = 'rcc', table.attr = 'data-quarto-disable-processing="true"') %>%
  kable_paper(bootstrap_options = "striped", full_width = F) %>%
  kable_styling(full_width = F, font_size = 12)

```
<br>


::: {.panel-tabset}


#### HIV

HIV linkage cases are further stratified by those that are cases worked for individuals newly diagnosed versus those that were diagnosed previously. The HIV Linkage Flow Diagram is provided here for Bella's HIV linkage cases.

Bella has worked on a total of **`r hiv_ltc_cases` HIV linkage cases** (*`r hiv_ltc_cases_percent` of all linkage cases, `r hiv_ltc_cases`/`r ltc_cases`*). Out of all HIV linkage cases, there were a total of `r new_hiv_ltc_cases` for those newly diagnosed with HIV (*`r new_hiv_ltc_cases_percent` of all HIV linkage cases, `r new_hiv_ltc_cases`/`r hiv_ltc_cases`*), and a total of `r prev_hiv_ltc_cases` for those that have been previously diagnosed (*`r prev_hiv_ltc_cases_percent` of all HIV linkage cases, `r prev_hiv_ltc_cases`/`r hiv_ltc_cases`*).

A total of `r hiv_eligible_ltc` of these cases are "eligible" to be linked to care (*`r hiv_eligible_ltc_percent` of all HIV linkage cases, `r hiv_eligible_ltc`/`r hiv_ltc_cases`*), and the reasons the remaining `r hiv_ineligible_ltc` were "ineligible" are noted in the flow diagram.

Out of those "eligible" to be linked, `r hiv_new_eligible_ltc` were for those newly diagnosed for HIV (*`r hiv_new_eligible_ltc_percent` of all "eligible" HIV linkage cases, `r hiv_new_eligible_ltc`/`r hiv_eligible_ltc`*), and `r hiv_prev_eligible_ltc` were for those previously diagnosed (*`r hiv_prev_eligible_ltc_percent` of all "eligible" HIV linkage cases, `r hiv_prev_eligible_ltc`/`r hiv_eligible_ltc`*). Bella is currently working on `r hiv_in_progress` of these HIV linkage cases (*`r hiv_in_progress_90days_percent` of which have been open for more than 90 days*), and therefore has closed a total of `r hiv_closed_case` thus far (*`r hiv_closed_case_percent` of all "eligible" HIV linkage cases, `r hiv_closed_case`/`r hiv_eligible_ltc`*). Out of those cases closed, a total of `r hiv_not_linked` were unable to be linked to care (*`r hiv_not_linked_percent` of all closed HIV linkage cases, `r hiv_not_linked`/`r hiv_closed_case`*), with the reasons as to why are shown in the flow diagram. These reasons are not mutually exclusive, and there could be multiple reasons why those linkage cases were unsuccessful.


```{r, echo=FALSE, warning=FALSE}
#| lightbox:
#|   description: HIV Linkage Flow Diagram


grid_data <- tibble(x= 1:100, y= 1:100)

grid_data %>% 
  ggplot(aes(x, y)) +
  scale_x_continuous(minor_breaks = seq(10, 100, 10)) +
  scale_y_continuous(minor_breaks = seq(10, 100, 10)) +
  theme_linedraw() ->
  grid


grid +
  # HIV Linkage Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = 'black',
            fill = 'lightblue', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 97, label = 'HIV Linkage Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 93, label = hiv_ltc_cases, size = 2, color = 'blue') +
  
  # Ineligible for Linkage
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 52.5, y = 82, label = 'Ineligible for Linkage', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 78, label = hiv_ineligible_ltc, size = 2, color = 'blue') +
  annotate('text', x = 60, y = 78, label = hiv_ineligible_ltc_percent, size = 2, color = 'steelblue') +
  
  
  # Reasons Ineligible for Linkage
  geom_rect(xmin = 83, xmax = 100, ymin = 75, ymax = 85, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 85, label = 'Already Linked', size = 2) +
  annotate('text', x = 87, y = 82, label = '        Deceased', size = 2) +
  annotate('text', x = 87, y = 79, label = '    Incarcerated', size = 2) +
  annotate('text', x = 87, y = 76, label = '          Declined', size = 2) +
  annotate('text', x = 87, y = 73, label = 'Ongoing linkage ', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 85, label = hiv_already_linked, size = 2, color = 'blue') +
  annotate('text', x = 98, y = 85, label = hiv_already_linked_percent, size = 2, color = 'steelblue') +
  annotate('text', x = 94, y = 82, label = hiv_deceased, size = 2, color = 'blue') +
  annotate('text', x = 98, y = 82, label = hiv_deceased_percent, size = 2, color = 'steelblue') +
  annotate('text', x = 94, y = 79, label = hiv_incarcerated, size = 2, color = 'blue') +
  annotate('text', x = 98, y = 79, label = hiv_incarcerated_percent, size = 2, color = 'steelblue') +
  annotate('text', x = 94, y = 76, label = hiv_linkage_declined, size = 2, color = 'blue') +
  annotate('text', x = 98, y = 76, label = hiv_linkage_declined_percent, size = 2, color = 'steelblue') +
  annotate('text', x = 94, y = 73, label = hiv_ongoing_linkage, size = 2, color = 'blue') +
  annotate('text', x = 98, y = 73, label = hiv_ongoing_linkage_percent, size = 2, color = 'steelblue') +
  
  
  # Eligible for Linkage
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = 'black',
            fill = 'lightblue', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 67, label = 'Eligible for Linkage', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 63, label = hiv_eligible_ltc, size = 2, color = 'blue') +
  annotate('text', x = 19, y = 63, label = hiv_eligible_ltc_percent, size = 2, color = 'steelblue') +
  
  
  # New vs. Prev vs. Unk Eligibility
  geom_rect(xmin = 25, xmax = 35, ymin = 60, ymax = 70, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 26, y = 69, label = 'New Dx:', size = 2) +
  annotate('text', x = 26, y = 65, label = 'Prev Dx:', size = 2) +
  annotate('text', x = 26, y = 61, label = 'Unk Dx:', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 30, y = 69, label = hiv_new_eligible_ltc, size = 2, color = 'blue') +
  annotate('text', x = 34, y = 69, label = hiv_new_eligible_ltc_percent, size = 2, color = 'steelblue') +
  annotate('text', x = 30, y = 65, label = hiv_prev_eligible_ltc, size = 2, color = 'blue') +
  annotate('text', x = 34, y = 65, label = hiv_prev_eligible_ltc_percent, size = 2, color = 'steelblue') +
  annotate('text', x = 30, y = 61, label = hiv_unk_eligible_ltc, size = 2, color = 'blue') +
  annotate('text', x = 34, y = 61, label = hiv_unk_eligible_ltc_percent, size = 2, color = 'steelblue') +
  
  
  # In Progress
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 52, label = 'In Progress', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 48, label = hiv_in_progress, size = 2, color = 'blue') +
  annotate('text', x = 60, y = 48, label = hiv_in_progress_percent, size = 2, color = 'steelblue') +
  
  
  # In Progress over 90 days
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 52, y = 42, label = '>90 days:', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 56, y = 42, label = hiv_in_progress_90days, size = 2, color = 'blue') +
  annotate('text', x = 60, y = 42, label = hiv_in_progress_90days_percent, size = 2, color = 'steelblue') +
  
  
  # New vs. Prev vs. Unk In Progress
  geom_rect(xmin = 66, xmax = 88, ymin = 45, ymax = 55, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 67, y = 54, label = 'New Dx:', size = 2) +
  annotate('text', x = 67, y = 50, label = 'Prev Dx:', size = 2) +
  annotate('text', x = 67, y = 46, label = 'Unk Dx:', size = 2) +
  geom_rect(xmin = 66, xmax = 88, ymin = 45, ymax = 55, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 71, y = 54, label = hiv_new_in_progress, size = 2, color = 'blue') +
  annotate('text', x = 75, y = 54, label = hiv_new_in_progress_percent, size = 2, color = 'steelblue') +
  annotate('text', x = 71, y = 50, label = hiv_prev_in_progress, size = 2, color = 'blue') +
  annotate('text', x = 75, y = 50, label = hiv_prev_in_progress_percent, size = 2, color = 'steelblue') +
  annotate('text', x = 71, y = 46, label = hiv_unk_in_progress, size = 2, color = 'blue') +
  annotate('text', x = 75, y = 46, label = hiv_unk_in_progress_percent, size = 2, color = 'steelblue') +
  
  
  # Closed Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = 'black',
            fill = 'lightblue', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 37, label = 'Closed Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 33, label = hiv_closed_case, size = 2, color = 'blue') +
  annotate('text', x = 19, y = 33, label = hiv_closed_case_percent, size = 2, color = 'steelblue') +
  
  
  # Not Linked
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 22, label = 'Not Linked', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 18, label = hiv_not_linked, size = 2, color = 'blue') +
  annotate('text', x = 60, y = 18, label = hiv_not_linked_percent, size = 2, color = 'steelblue') +
  
  
  # New vs. Prev Not Linked
  geom_rect(xmin = 41, xmax = 63, ymin = 7, ymax = 14, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 52, y = 12, label = 'New Dx:', size = 2) +
  annotate('text', x = 52, y = 8, label = 'Prev Dx:', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 7, ymax = 14, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 56, y = 12, label = hiv_new_not_linked, size = 2, color = 'blue') +
  annotate('text', x = 60, y = 12, label = hiv_new_not_linked_percent, size = 2, color = 'steelblue') +
  annotate('text', x = 56, y = 8, label = hiv_prev_not_linked, size = 2, color = 'blue') +
  annotate('text', x = 60, y = 8, label = hiv_prev_not_linked_percent, size = 2, color = 'steelblue') +
  
  
  # Reasons Not Linked
  geom_rect(xmin = 83, xmax = 100, ymin = 0, ymax = 30, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 26, label = 'Med Staff interferes    ', size = 2) +
  annotate('text', x = 87, y = 23, label = '  Family interferes', size = 2) +
  annotate('text', x = 87, y = 20, label = '    Refuses to talk', size = 2) +
  annotate('text', x = 87, y = 17, label = '    Personal safety', size = 2) +
  annotate('text', x = 87, y = 14, label = '    Medical course', size = 2) +
  annotate('text', x = 87, y = 11, label = 'Inability to contact', size = 2) +
  annotate('text', x = 87, y = 8, label = ' Language barrier', size = 2) +
  annotate('text', x = 87, y = 5, label = '                   Other', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 0, ymax = 30, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 26, label = hiv_not_linked_med_staff, size = 2, color = 'blue') +
  annotate('text', x = 98, y = 26, label = hiv_not_linked_med_staff_percent, size = 2, color = 'steelblue') +
  annotate('text', x = 94, y = 23, label = hiv_not_linked_family, size = 2, color = 'blue') +
  annotate('text', x = 98, y = 23, label = hiv_not_linked_family_percent, size = 2, color = 'steelblue') +
  annotate('text', x = 94, y = 20, label = hiv_not_linked_not_talking, size = 2, color = 'blue') +
  annotate('text', x = 98, y = 20, label = hiv_not_linked_not_talking_percent, size = 2, color = 'steelblue') +
  annotate('text', x = 94, y = 17, label = hiv_not_linked_safety, size = 2, color = 'blue') +
  annotate('text', x = 98, y = 17, label = hiv_not_linked_safety_percent, size = 2, color = 'steelblue') +
  annotate('text', x = 94, y = 14, label = hiv_not_linked_medical, size = 2, color = 'blue') +
  annotate('text', x = 98, y = 14, label = hiv_not_linked_medical_percent, size = 2, color = 'steelblue') +
  annotate('text', x = 94, y = 11, label = hiv_not_linked_contact, size = 2, color = 'blue') +
  annotate('text', x = 98, y = 11, label = hiv_not_linked_contact_percent, size = 2, color = 'steelblue') +
  annotate('text', x = 94, y = 8, label = hiv_not_linked_language, size = 2, color = 'blue') +
  annotate('text', x = 98, y = 8, label = hiv_not_linked_language_percent, size = 2, color = 'steelblue') +
  annotate('text', x = 94, y = 5, label = hiv_not_linked_other, size = 2, color = 'blue') +
  annotate('text', x = 98, y = 5, label = hiv_not_linked_other_percent, size = 2, color = 'steelblue') +
  
  
  # Linked to Care
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = 'black',
            fill = 'lightblue', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 7, label = 'Linked to Care', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 3, label = hiv_linked, size = 2, color = 'blue') +
  annotate('text', x = 19, y = 3, label = hiv_linked_percent, size = 2, color = 'steelblue') +
  
  
  # New vs. Prev Linked to Care
  geom_rect(xmin = 25, xmax = 35, ymin = 0, ymax = 10, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 26, y = 7, label = 'New Dx:', size = 2) +
  annotate('text', x = 26, y = 3, label = 'Prev Dx:', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 30, y = 7, label = hiv_new_linked, size = 2, color = 'blue') +
  annotate('text', x = 34, y = 7, label = hiv_new_linked_percent, size = 2, color = 'steelblue') +
  annotate('text', x = 30, y = 3, label = hiv_prev_linked, size = 2, color = 'blue') +
  annotate('text', x = 34, y = 3, label = hiv_prev_linked_percent, size = 2, color = 'steelblue') +
  
  
  # Down Arrow 1
  geom_segment(
    x = 10.5, xend = 10.5, y = 90, yend = 70, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 2
  geom_segment(
    x = 10.5, xend = 10.5, y = 60, yend = 40, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 3
  geom_segment(
    x = 10.5, xend = 10.5, y = 30, yend = 10, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Right Arrow 1
  geom_segment(
    x = 10.5, xend = 41, y = 80, yend = 80, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 2
  geom_segment(
    x = 10.5, xend = 41, y = 50, yend = 50, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 3
  geom_segment(
    x = 10.5, xend = 41, y = 20, yend = 20, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Line 1
  geom_segment(
    x = 63, xend = 81, y = 80, yend = 80, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted") +
  
  # Right Line 2
  geom_segment(
    x = 63, xend = 80, y = 20, yend = 20, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted")->
  grid

grid + theme_void()

```
<br>

Therefore, Bella has **successfully linked a total of `r hiv_linked` HIV linkage cases** (*`r hiv_linked_percent` of all closed HIV linkage cases, `r hiv_linked`/`r hiv_closed_case`*). Out of all those cases that were successfully linked to care, `r hiv_new_linked` were for those newly diagnosed with HIV (*`r hiv_new_linked_percent` of all "eligible" HIV linkage cases for newly diagnosed individuals, `r hiv_new_linked`/`r hiv_new_eligible_ltc`*), and `r hiv_prev_linked` were for those that were previously diagnosed (*`r hiv_prev_linked_percent` of all "eligible" HIV linkage cases for previously diagnosed individuals, `r hiv_prev_linked`/`r hiv_prev_eligible_ltc`*).


#### HCV

Hepatitis C linkage cases are further stratified by those that are cases worked for individuals newly diagnosed versus those that were diagnosed previously. The HCV Linkage Flow Diagram is provided here for Bella's HCV linkage cases.

Bella has worked on a total of **`r hcv_ltc_cases` HCV linkage cases** (*`r hcv_ltc_cases_percent` of all linkage cases, `r hcv_ltc_cases`/`r ltc_cases`*). Out of all HCV linkage cases, there were a total of `r new_hcv_ltc_cases` for those newly diagnosed with HCV (*`r new_hcv_ltc_cases_percent` of all HCV linkage cases, `r new_hcv_ltc_cases`/`r hcv_ltc_cases`*), and a total of `r prev_hcv_ltc_cases` for those that have been previously diagnosed (*`r prev_hcv_ltc_cases_percent` of all HCV linkage cases, `r prev_hcv_ltc_cases`/`r hcv_ltc_cases`*).

A total of `r hcv_eligible_ltc` of these cases are "eligible" to be linked to care (*`r hcv_eligible_ltc_percent` of all HCV linkage cases, `r hcv_eligible_ltc`/`r hcv_ltc_cases`*), and the reasons the remaining `r hcv_ineligible_ltc` were "ineligible" are noted in the flow diagram.

Out of those "eligible" to be linked, `r hcv_new_eligible_ltc` were for those newly diagnosed for HCV (*`r hcv_new_eligible_ltc_percent` of all "eligible" HCV linkage cases, `r hcv_new_eligible_ltc`/`r hcv_eligible_ltc`*), and `r hcv_prev_eligible_ltc` were for those previously diagnosed (*`r hcv_prev_eligible_ltc_percent` of all "eligible" HCV linkage cases, `r hcv_prev_eligible_ltc`/`r hcv_eligible_ltc`*). Bella is currently working on `r hcv_in_progress` of these HCV linkage cases (*`r hcv_in_progress_90days_percent` of which have been open for more than 90 days*), and therefore has closed a total of `r hcv_closed_case` thus far (*`r hcv_closed_case_percent` of all "eligible" HCV linkage cases, `r hcv_closed_case`/`r hcv_eligible_ltc`*). Out of those cases closed, a total of `r hcv_not_linked` were unable to be linked to care (*`r hcv_not_linked_percent` of all closed HCV linkage cases, `r hcv_not_linked`/`r hcv_closed_case`*), with the reasons as to why are shown in the flow diagram. These reasons are not mutually exclusive, and there could be multiple reasons why those linkage cases were unsuccessful.


```{r, echo=FALSE, warning=FALSE}
#| lightbox:
#|   description: HCV Linkage Flow Diagram


grid_data <- tibble(x= 1:100, y= 1:100)

grid_data %>% 
  ggplot(aes(x, y)) +
  scale_x_continuous(minor_breaks = seq(10, 100, 10)) +
  scale_y_continuous(minor_breaks = seq(10, 100, 10)) +
  theme_linedraw() ->
  grid


grid +
  # HCV Linkage Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = 'black',
            fill = 'khaki1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 97, label = 'HCV Linkage Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 93, label = hcv_ltc_cases, size = 2, color = 'goldenrod3') +
  
  # Ineligible for Linkage
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 52.5, y = 82, label = 'Ineligible for Linkage', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 78, label = hcv_ineligible_ltc, size = 2, color = 'goldenrod3') +
  annotate('text', x = 60, y = 78, label = hcv_ineligible_ltc_percent, size = 2, color = 'yellow4') +
  
  
  # Reasons Ineligible for Linkage
  geom_rect(xmin = 83, xmax = 100, ymin = 75, ymax = 85, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 85, label = 'Already Linked', size = 2) +
  annotate('text', x = 87, y = 82, label = '        Deceased', size = 2) +
  annotate('text', x = 87, y = 79, label = '    Incarcerated', size = 2) +
  annotate('text', x = 87, y = 76, label = '          Declined', size = 2) +
  annotate('text', x = 87, y = 73, label = 'Ongoing linkage ', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 85, label = hcv_already_linked, size = 2, color = 'goldenrod3') +
  annotate('text', x = 98, y = 85, label = hcv_already_linked_percent, size = 2, color = 'yellow4') +
  annotate('text', x = 94, y = 82, label = hcv_deceased, size = 2, color = 'goldenrod3') +
  annotate('text', x = 98, y = 82, label = hcv_deceased_percent, size = 2, color = 'yellow4') +
  annotate('text', x = 94, y = 79, label = hcv_incarcerated, size = 2, color = 'goldenrod3') +
  annotate('text', x = 98, y = 79, label = hcv_incarcerated_percent, size = 2, color = 'yellow4') +
  annotate('text', x = 94, y = 76, label = hcv_linkage_declined, size = 2, color = 'goldenrod3') +
  annotate('text', x = 98, y = 76, label = hcv_linkage_declined_percent, size = 2, color = 'yellow4') +
  annotate('text', x = 94, y = 73, label = hcv_ongoing_linkage, size = 2, color = 'goldenrod3') +
  annotate('text', x = 98, y = 73, label = hcv_ongoing_linkage_percent, size = 2, color = 'yellow4') +
  
  
  # Eligible for Linkage
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = 'black',
            fill = 'khaki1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 67, label = 'Eligible for Linkage', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 63, label = hcv_eligible_ltc, size = 2, color = 'goldenrod3') +
  annotate('text', x = 19, y = 63, label = hcv_eligible_ltc_percent, size = 2, color = 'yellow4') +
  
  
  # New vs. Prev vs. Unk Eligibility
  geom_rect(xmin = 25, xmax = 35, ymin = 60, ymax = 70, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 26, y = 69, label = 'New Dx:', size = 2) +
  annotate('text', x = 26, y = 65, label = 'Prev Dx:', size = 2) +
  annotate('text', x = 26, y = 61, label = 'Unk Dx:', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 30, y = 69, label = hcv_new_eligible_ltc, size = 2, color = 'goldenrod3') +
  annotate('text', x = 34, y = 69, label = hcv_new_eligible_ltc_percent, size = 2, color = 'yellow4') +
  annotate('text', x = 30, y = 65, label = hcv_prev_eligible_ltc, size = 2, color = 'goldenrod3') +
  annotate('text', x = 34, y = 65, label = hcv_prev_eligible_ltc_percent, size = 2, color = 'yellow4') +
  annotate('text', x = 30, y = 61, label = hcv_unk_eligible_ltc, size = 2, color = 'goldenrod3') +
  annotate('text', x = 34, y = 61, label = hcv_unk_eligible_ltc_percent, size = 2, color = 'yellow4') +
  
  
  # In Progress
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 52, label = 'In Progress', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 48, label = hcv_in_progress, size = 2, color = 'goldenrod3') +
  annotate('text', x = 60, y = 48, label = hcv_in_progress_percent, size = 2, color = 'yellow4') +
  
  
  # In Progress over 90 days
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 52, y = 42, label = '>90 days:', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 56, y = 42, label = hcv_in_progress_90days, size = 2, color = 'goldenrod3') +
  annotate('text', x = 60, y = 42, label = hcv_in_progress_90days_percent, size = 2, color = 'yellow4') +
  
  
  # New vs. Prev vs. Unk In Progress
  geom_rect(xmin = 66, xmax = 88, ymin = 45, ymax = 55, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 67, y = 54, label = 'New Dx:', size = 2) +
  annotate('text', x = 67, y = 50, label = 'Prev Dx:', size = 2) +
  annotate('text', x = 67, y = 46, label = 'Unk Dx:', size = 2) +
  geom_rect(xmin = 66, xmax = 88, ymin = 45, ymax = 55, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 71, y = 54, label = hcv_new_in_progress, size = 2, color = 'goldenrod3') +
  annotate('text', x = 75, y = 54, label = hcv_new_in_progress_percent, size = 2, color = 'yellow4') +
  annotate('text', x = 71, y = 50, label = hcv_prev_in_progress, size = 2, color = 'goldenrod3') +
  annotate('text', x = 75, y = 50, label = hcv_prev_in_progress_percent, size = 2, color = 'yellow4') +
  annotate('text', x = 71, y = 46, label = hcv_unk_in_progress, size = 2, color = 'goldenrod3') +
  annotate('text', x = 75, y = 46, label = hcv_unk_in_progress_percent, size = 2, color = 'yellow4') +
  
  
  # Closed Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = 'black',
            fill = 'khaki1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 37, label = 'Closed Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 33, label = hcv_closed_case, size = 2, color = 'goldenrod3') +
  annotate('text', x = 19, y = 33, label = hcv_closed_case_percent, size = 2, color = 'yellow4') +
  
  
  # Not Linked
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 22, label = 'Not Linked', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 18, label = hcv_not_linked, size = 2, color = 'goldenrod3') +
  annotate('text', x = 60, y = 18, label = hcv_not_linked_percent, size = 2, color = 'yellow4') +
  
  
  # New vs. Prev Not Linked
  geom_rect(xmin = 41, xmax = 63, ymin = 7, ymax = 14, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 52, y = 12, label = 'New Dx:', size = 2) +
  annotate('text', x = 52, y = 8, label = 'Prev Dx:', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 7, ymax = 14, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 56, y = 12, label = hcv_new_not_linked, size = 2, color = 'goldenrod3') +
  annotate('text', x = 60, y = 12, label = hcv_new_not_linked_percent, size = 2, color = 'yellow4') +
  annotate('text', x = 56, y = 8, label = hcv_prev_not_linked, size = 2, color = 'goldenrod3') +
  annotate('text', x = 60, y = 8, label = hcv_prev_not_linked_percent, size = 2, color = 'yellow4') +
  
  
  # Reasons Not Linked
  geom_rect(xmin = 83, xmax = 100, ymin = 0, ymax = 30, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 26, label = 'Med Staff interferes    ', size = 2) +
  annotate('text', x = 87, y = 23, label = '  Family interferes', size = 2) +
  annotate('text', x = 87, y = 20, label = '    Refuses to talk', size = 2) +
  annotate('text', x = 87, y = 17, label = '    Personal safety', size = 2) +
  annotate('text', x = 87, y = 14, label = '    Medical course', size = 2) +
  annotate('text', x = 87, y = 11, label = 'Inability to contact', size = 2) +
  annotate('text', x = 87, y = 8, label = ' Language barrier', size = 2) +
  annotate('text', x = 87, y = 5, label = '                   Other', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 0, ymax = 30, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 26, label = hcv_not_linked_med_staff, size = 2, color = 'goldenrod3') +
  annotate('text', x = 98, y = 26, label = hcv_not_linked_med_staff_percent, size = 2, color = 'yellow4') +
  annotate('text', x = 94, y = 23, label = hcv_not_linked_family, size = 2, color = 'goldenrod3') +
  annotate('text', x = 98, y = 23, label = hcv_not_linked_family_percent, size = 2, color = 'yellow4') +
  annotate('text', x = 94, y = 20, label = hcv_not_linked_not_talking, size = 2, color = 'goldenrod3') +
  annotate('text', x = 98, y = 20, label = hcv_not_linked_not_talking_percent, size = 2, color = 'yellow4') +
  annotate('text', x = 94, y = 17, label = hcv_not_linked_safety, size = 2, color = 'goldenrod3') +
  annotate('text', x = 98, y = 17, label = hcv_not_linked_safety_percent, size = 2, color = 'yellow4') +
  annotate('text', x = 94, y = 14, label = hcv_not_linked_medical, size = 2, color = 'goldenrod3') +
  annotate('text', x = 98, y = 14, label = hcv_not_linked_medical_percent, size = 2, color = 'yellow4') +
  annotate('text', x = 94, y = 11, label = hcv_not_linked_contact, size = 2, color = 'goldenrod3') +
  annotate('text', x = 98, y = 11, label = hcv_not_linked_contact_percent, size = 2, color = 'yellow4') +
  annotate('text', x = 94, y = 8, label = hcv_not_linked_language, size = 2, color = 'goldenrod3') +
  annotate('text', x = 98, y = 8, label = hcv_not_linked_language_percent, size = 2, color = 'yellow4') +
  annotate('text', x = 94, y = 5, label = hcv_not_linked_other, size = 2, color = 'goldenrod3') +
  annotate('text', x = 98, y = 5, label = hcv_not_linked_other_percent, size = 2, color = 'yellow4') +
  
  
  # Linked to Care
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = 'black',
            fill = 'khaki1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 7, label = 'Linked to Care', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 3, label = hcv_linked, size = 2, color = 'goldenrod3') +
  annotate('text', x = 19, y = 3, label = hcv_linked_percent, size = 2, color = 'yellow4') +
  
  
  # New vs. Prev Linked to Care
  geom_rect(xmin = 25, xmax = 35, ymin = 0, ymax = 10, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 26, y = 7, label = 'New Dx:', size = 2) +
  annotate('text', x = 26, y = 3, label = 'Prev Dx:', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 30, y = 7, label = hcv_new_linked, size = 2, color = 'goldenrod3') +
  annotate('text', x = 34, y = 7, label = hcv_new_linked_percent, size = 2, color = 'yellow4') +
  annotate('text', x = 30, y = 3, label = hcv_prev_linked, size = 2, color = 'goldenrod3') +
  annotate('text', x = 34, y = 3, label = hcv_prev_linked_percent, size = 2, color = 'yellow4') +
  
  
  # Down Arrow 1
  geom_segment(
    x = 10.5, xend = 10.5, y = 90, yend = 70, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 2
  geom_segment(
    x = 10.5, xend = 10.5, y = 60, yend = 40, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 3
  geom_segment(
    x = 10.5, xend = 10.5, y = 30, yend = 10, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Right Arrow 1
  geom_segment(
    x = 10.5, xend = 41, y = 80, yend = 80, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 2
  geom_segment(
    x = 10.5, xend = 41, y = 50, yend = 50, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 3
  geom_segment(
    x = 10.5, xend = 41, y = 20, yend = 20, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Line 1
  geom_segment(
    x = 63, xend = 81, y = 80, yend = 80, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted") +
  
  # Right Line 2
  geom_segment(
    x = 63, xend = 80, y = 20, yend = 20, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted")->
  grid

grid + theme_void()

```
<br>

Therefore, Bella has **successfully linked a total of `r hcv_linked` HCV linkage cases** (*`r hcv_linked_percent` of all closed HCV linkage cases, `r hcv_linked`/`r hcv_closed_case`*). Out of all those cases that were successfully linked to care, `r hcv_new_linked` were for those newly diagnosed with HCV (*`r hcv_new_linked_percent` of all "eligible" HCV linkage cases for newly diagnosed individuals, `r hcv_new_linked`/`r hcv_new_eligible_ltc`*), and `r hcv_prev_linked` were for those that were previously diagnosed (*`r hcv_prev_linked_percent` of all "eligible" HCV linkage cases for previously diagnosed individuals, `r hcv_prev_linked`/`r hcv_prev_eligible_ltc`*).


#### SUD

The SUD Linkage Flow Diagram is provided here for Bella's SUD linkage cases.

Bella has worked on a total of **`r sud_ltc_cases` SUD linkage cases** (*`r sud_ltc_cases_percent` of all linkage cases, `r sud_ltc_cases`/`r ltc_cases`*).

A total of `r sud_eligible_ltc` of these cases are "eligible" to be linked to care (*`r sud_eligible_ltc_percent` of all SUD linkage cases, `r sud_eligible_ltc`/`r sud_ltc_cases`*), and the reasons the remaining `r sud_ineligible_ltc` were "ineligible" are noted in the flow diagram.

Bella is currently working on `r sud_in_progress` of these SUD linkage cases (*`r sud_in_progress_90days_percent` of which have been open for more than 90 days*), and therefore has closed a total of `r sud_closed_case` thus far (*`r sud_closed_case_percent` of all "eligible" SUD linkage cases, `r sud_closed_case`/`r sud_eligible_ltc`*). Out of those cases closed, a total of `r sud_not_linked` were unable to be linked to care (*`r sud_not_linked_percent` of all closed SUD linkage cases, `r sud_not_linked`/`r sud_closed_case`*), with the reasons as to why are shown in the flow diagram. These reasons are not mutually exclusive, and there could be multiple reasons why those linkage cases were unsuccessful.


```{r, echo=FALSE, warning=FALSE}
#| lightbox:
#|   description: SUD Linkage Flow Diagram


grid_data <- tibble(x= 1:100, y= 1:100)

grid_data %>% 
  ggplot(aes(x, y)) +
  scale_x_continuous(minor_breaks = seq(10, 100, 10)) +
  scale_y_continuous(minor_breaks = seq(10, 100, 10)) +
  theme_linedraw() ->
  grid


grid +
  # sud Linkage Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = 'black',
            fill = 'darkseagreen1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 97, label = 'Sud Linkage Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 93, label = sud_ltc_cases, size = 2, color = 'forestgreen') +
  
  # Ineligible for Linkage
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 52.5, y = 82, label = 'Ineligible for Linkage', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 78, label = sud_ineligible_ltc, size = 2, color = 'forestgreen') +
  annotate('text', x = 60, y = 78, label = sud_ineligible_ltc_percent, size = 2, color = 'darkseagreen4') +
  
  
  # Reasons Ineligible for Linkage
  geom_rect(xmin = 83, xmax = 100, ymin = 75, ymax = 85, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 85, label = 'Already Linked', size = 2) +
  annotate('text', x = 87, y = 82, label = '        Deceased', size = 2) +
  annotate('text', x = 87, y = 79, label = '    Incarcerated', size = 2) +
  annotate('text', x = 87, y = 76, label = '          Declined', size = 2) +
  annotate('text', x = 87, y = 73, label = 'Ongoing linkage ', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 85, label = sud_already_linked, size = 2, color = 'forestgreen') +
  annotate('text', x = 98, y = 85, label = sud_already_linked_percent, size = 2, color = 'darkseagreen4') +
  annotate('text', x = 94, y = 82, label = sud_deceased, size = 2, color = 'forestgreen') +
  annotate('text', x = 98, y = 82, label = sud_deceased_percent, size = 2, color = 'darkseagreen4') +
  annotate('text', x = 94, y = 79, label = sud_incarcerated, size = 2, color = 'forestgreen') +
  annotate('text', x = 98, y = 79, label = sud_incarcerated_percent, size = 2, color = 'darkseagreen4') +
  annotate('text', x = 94, y = 76, label = sud_linkage_declined, size = 2, color = 'forestgreen') +
  annotate('text', x = 98, y = 76, label = sud_linkage_declined_percent, size = 2, color = 'darkseagreen4') +
  annotate('text', x = 94, y = 73, label = sud_ongoing_linkage, size = 2, color = 'forestgreen') +
  annotate('text', x = 98, y = 73, label = sud_ongoing_linkage_percent, size = 2, color = 'darkseagreen4') +
  
  
  # Eligible for Linkage
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = 'black',
            fill = 'darkseagreen1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 67, label = 'Eligible for Linkage', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 63, label = sud_eligible_ltc, size = 2, color = 'forestgreen') +
  annotate('text', x = 19, y = 63, label = sud_eligible_ltc_percent, size = 2, color = 'darkseagreen4') +
  
  
  # In Progress
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 52, label = 'In Progress', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 48, label = sud_in_progress, size = 2, color = 'forestgreen') +
  annotate('text', x = 60, y = 48, label = sud_in_progress_percent, size = 2, color = 'darkseagreen4') +
  
  
  # In Progress over 90 days
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 52, y = 42, label = '>90 days:', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 56, y = 42, label = sud_in_progress_90days, size = 2, color = 'forestgreen') +
  annotate('text', x = 60, y = 42, label = sud_in_progress_90days_percent, size = 2, color = 'darkseagreen4') +
  
  
  # Closed Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = 'black',
            fill = 'darkseagreen1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 37, label = 'Closed Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 33, label = sud_closed_case, size = 2, color = 'forestgreen') +
  annotate('text', x = 19, y = 33, label = sud_closed_case_percent, size = 2, color = 'darkseagreen4') +
  
  
  # Not Linked
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 22, label = 'Not Linked', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 18, label = sud_not_linked, size = 2, color = 'forestgreen') +
  annotate('text', x = 60, y = 18, label = sud_not_linked_percent, size = 2, color = 'darkseagreen4') +
  
  
  # Reasons Not Linked
  geom_rect(xmin = 83, xmax = 100, ymin = 0, ymax = 30, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 26, label = 'Med Staff interferes    ', size = 2) +
  annotate('text', x = 87, y = 23, label = '  Family interferes', size = 2) +
  annotate('text', x = 87, y = 20, label = '    Refuses to talk', size = 2) +
  annotate('text', x = 87, y = 17, label = '    Personal safety', size = 2) +
  annotate('text', x = 87, y = 14, label = '    Medical course', size = 2) +
  annotate('text', x = 87, y = 11, label = 'Inability to contact', size = 2) +
  annotate('text', x = 87, y = 8, label = ' Language barrier', size = 2) +
  annotate('text', x = 87, y = 5, label = '                   Other', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 0, ymax = 30, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 26, label = sud_not_linked_med_staff, size = 2, color = 'forestgreen') +
  annotate('text', x = 98, y = 26, label = sud_not_linked_med_staff_percent, size = 2, color = 'darkseagreen4') +
  annotate('text', x = 94, y = 23, label = sud_not_linked_family, size = 2, color = 'forestgreen') +
  annotate('text', x = 98, y = 23, label = sud_not_linked_family_percent, size = 2, color = 'darkseagreen4') +
  annotate('text', x = 94, y = 20, label = sud_not_linked_not_talking, size = 2, color = 'forestgreen') +
  annotate('text', x = 98, y = 20, label = sud_not_linked_not_talking_percent, size = 2, color = 'darkseagreen4') +
  annotate('text', x = 94, y = 17, label = sud_not_linked_safety, size = 2, color = 'forestgreen') +
  annotate('text', x = 98, y = 17, label = sud_not_linked_safety_percent, size = 2, color = 'darkseagreen4') +
  annotate('text', x = 94, y = 14, label = sud_not_linked_medical, size = 2, color = 'forestgreen') +
  annotate('text', x = 98, y = 14, label = sud_not_linked_medical_percent, size = 2, color = 'darkseagreen4') +
  annotate('text', x = 94, y = 11, label = sud_not_linked_contact, size = 2, color = 'forestgreen') +
  annotate('text', x = 98, y = 11, label = sud_not_linked_contact_percent, size = 2, color = 'darkseagreen4') +
  annotate('text', x = 94, y = 8, label = sud_not_linked_language, size = 2, color = 'forestgreen') +
  annotate('text', x = 98, y = 8, label = sud_not_linked_language_percent, size = 2, color = 'darkseagreen4') +
  annotate('text', x = 94, y = 5, label = sud_not_linked_other, size = 2, color = 'forestgreen') +
  annotate('text', x = 98, y = 5, label = sud_not_linked_other_percent, size = 2, color = 'darkseagreen4') +
  
  
  # Linked to Care
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = 'black',
            fill = 'darkseagreen1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 7, label = 'Linked to Care', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 3, label = sud_linked, size = 2, color = 'forestgreen') +
  annotate('text', x = 19, y = 3, label = sud_linked_percent, size = 2, color = 'darkseagreen4') +
  
  
  # Down Arrow 1
  geom_segment(
    x = 10.5, xend = 10.5, y = 90, yend = 70, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 2
  geom_segment(
    x = 10.5, xend = 10.5, y = 60, yend = 40, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 3
  geom_segment(
    x = 10.5, xend = 10.5, y = 30, yend = 10, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Right Arrow 1
  geom_segment(
    x = 10.5, xend = 41, y = 80, yend = 80, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 2
  geom_segment(
    x = 10.5, xend = 41, y = 50, yend = 50, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 3
  geom_segment(
    x = 10.5, xend = 41, y = 20, yend = 20, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Line 1
  geom_segment(
    x = 63, xend = 81, y = 80, yend = 80, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted") +
  
  # Right Line 2
  geom_segment(
    x = 63, xend = 80, y = 20, yend = 20, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted")->
  grid

grid + theme_void()

```
<br>

Therefore, Bella has **successfully linked a total of `r sud_linked` SUD linkage cases** (*`r sud_linked_percent` of all closed SUD linkage cases, `r sud_linked`/`r sud_closed_case`*).


#### Human Trafficking

The Human Trafficking (HT) Linkage Flow Diagram is provided here for Bella's HT linkage cases.

Bella has worked on a total of **`r ht_ltc_cases` HT linkage cases** (*`r ht_ltc_cases_percent` of all linkage cases, `r ht_ltc_cases`/`r ltc_cases`*).

A total of `r ht_eligible_ltc` of these cases are "eligible" to be linked to care (*`r ht_eligible_ltc_percent` of all HT linkage cases, `r ht_eligible_ltc`/`r ht_ltc_cases`*), and the reasons the remaining `r ht_ineligible_ltc` were "ineligible" are noted in the flow diagram.

Bella is currently working on `r ht_in_progress` of these HT linkage cases (*`r ht_in_progress_90days_percent` of which have been open for more than 90 days*), and therefore has closed a total of `r ht_closed_case` thus far (*`r ht_closed_case_percent` of all "eligible" HT linkage cases, `r ht_closed_case`/`r ht_eligible_ltc`*). Out of those cases closed, a total of `r ht_not_linked` were unable to be linked to care (*`r ht_not_linked_percent` of all closed HT linkage cases, `r ht_not_linked`/`r ht_closed_case`*), with the reasons as to why are shown in the flow diagram. These reasons are not mutually exclusive, and there could be multiple reasons why those linkage cases were unsuccessful.


```{r, echo=FALSE, warning=FALSE}
#| lightbox:
#|   description: HT Linkage Flow Diagram


grid_data <- tibble(x= 1:100, y= 1:100)

grid_data %>% 
  ggplot(aes(x, y)) +
  scale_x_continuous(minor_breaks = seq(10, 100, 10)) +
  scale_y_continuous(minor_breaks = seq(10, 100, 10)) +
  theme_linedraw() ->
  grid


grid +
  # ht Linkage Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = 'black',
            fill = 'sandybrown', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 97, label = 'HT Linkage Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 93, label = ht_ltc_cases, size = 2, color = 'darkorange4') +
  
  # Ineligible for Linkage
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 52.5, y = 82, label = 'Ineligible for Linkage', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 78, label = ht_ineligible_ltc, size = 2, color = 'darkorange4') +
  annotate('text', x = 60, y = 78, label = ht_ineligible_ltc_percent, size = 2, color = 'orange4') +
  
  
  # Reasons Ineligible for Linkage
  geom_rect(xmin = 83, xmax = 100, ymin = 75, ymax = 85, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 85, label = 'Already Linked', size = 2) +
  annotate('text', x = 87, y = 82, label = '        Deceased', size = 2) +
  annotate('text', x = 87, y = 79, label = '    Incarcerated', size = 2) +
  annotate('text', x = 87, y = 76, label = '          Declined', size = 2) +
  annotate('text', x = 87, y = 73, label = 'Ongoing linkage ', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 85, label = ht_already_linked, size = 2, color = 'darkorange4') +
  annotate('text', x = 98, y = 85, label = ht_already_linked_percent, size = 2, color = 'orange4') +
  annotate('text', x = 94, y = 82, label = ht_deceased, size = 2, color = 'darkorange4') +
  annotate('text', x = 98, y = 82, label = ht_deceased_percent, size = 2, color = 'orange4') +
  annotate('text', x = 94, y = 79, label = ht_incarcerated, size = 2, color = 'darkorange4') +
  annotate('text', x = 98, y = 79, label = ht_incarcerated_percent, size = 2, color = 'orange4') +
  annotate('text', x = 94, y = 76, label = ht_linkage_declined, size = 2, color = 'darkorange4') +
  annotate('text', x = 98, y = 76, label = ht_linkage_declined_percent, size = 2, color = 'orange4') +
  annotate('text', x = 94, y = 73, label = ht_ongoing_linkage, size = 2, color = 'darkorange4') +
  annotate('text', x = 98, y = 73, label = ht_ongoing_linkage_percent, size = 2, color = 'orange4') +
  
  
  # Eligible for Linkage
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = 'black',
            fill = 'sandybrown', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 67, label = 'Eligible for Linkage', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 63, label = ht_eligible_ltc, size = 2, color = 'darkorange4') +
  annotate('text', x = 19, y = 63, label = ht_eligible_ltc_percent, size = 2, color = 'orange4') +
  
  
  # In Progress
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 52, label = 'In Progress', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 48, label = ht_in_progress, size = 2, color = 'darkorange4') +
  annotate('text', x = 60, y = 48, label = ht_in_progress_percent, size = 2, color = 'orange4') +
  
  
  # In Progress over 90 days
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 52, y = 42, label = '>90 days:', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 56, y = 42, label = ht_in_progress_90days, size = 2, color = 'darkorange4') +
  annotate('text', x = 60, y = 42, label = ht_in_progress_90days_percent, size = 2, color = 'orange4') +
  
  
  # Closed Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = 'black',
            fill = 'sandybrown', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 37, label = 'Closed Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 33, label = ht_closed_case, size = 2, color = 'darkorange4') +
  annotate('text', x = 19, y = 33, label = ht_closed_case_percent, size = 2, color = 'orange4') +
  
  
  # Not Linked
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 22, label = 'Not Linked', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 18, label = ht_not_linked, size = 2, color = 'darkorange4') +
  annotate('text', x = 60, y = 18, label = ht_not_linked_percent, size = 2, color = 'orange4') +
  
  
  # Reasons Not Linked
  geom_rect(xmin = 83, xmax = 100, ymin = 0, ymax = 30, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 26, label = 'Med Staff interferes    ', size = 2) +
  annotate('text', x = 87, y = 23, label = '  Family interferes', size = 2) +
  annotate('text', x = 87, y = 20, label = '    Refuses to talk', size = 2) +
  annotate('text', x = 87, y = 17, label = '    Personal safety', size = 2) +
  annotate('text', x = 87, y = 14, label = '    Medical course', size = 2) +
  annotate('text', x = 87, y = 11, label = 'Inability to contact', size = 2) +
  annotate('text', x = 87, y = 8, label = ' Language barrier', size = 2) +
  annotate('text', x = 87, y = 5, label = '                   Other', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 0, ymax = 30, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 26, label = ht_not_linked_med_staff, size = 2, color = 'darkorange4') +
  annotate('text', x = 98, y = 26, label = ht_not_linked_med_staff_percent, size = 2, color = 'orange4') +
  annotate('text', x = 94, y = 23, label = ht_not_linked_family, size = 2, color = 'darkorange4') +
  annotate('text', x = 98, y = 23, label = ht_not_linked_family_percent, size = 2, color = 'orange4') +
  annotate('text', x = 94, y = 20, label = ht_not_linked_not_talking, size = 2, color = 'darkorange4') +
  annotate('text', x = 98, y = 20, label = ht_not_linked_not_talking_percent, size = 2, color = 'orange4') +
  annotate('text', x = 94, y = 17, label = ht_not_linked_safety, size = 2, color = 'darkorange4') +
  annotate('text', x = 98, y = 17, label = ht_not_linked_safety_percent, size = 2, color = 'orange4') +
  annotate('text', x = 94, y = 14, label = ht_not_linked_medical, size = 2, color = 'darkorange4') +
  annotate('text', x = 98, y = 14, label = ht_not_linked_medical_percent, size = 2, color = 'orange4') +
  annotate('text', x = 94, y = 11, label = ht_not_linked_contact, size = 2, color = 'darkorange4') +
  annotate('text', x = 98, y = 11, label = ht_not_linked_contact_percent, size = 2, color = 'orange4') +
  annotate('text', x = 94, y = 8, label = ht_not_linked_language, size = 2, color = 'darkorange4') +
  annotate('text', x = 98, y = 8, label = ht_not_linked_language_percent, size = 2, color = 'orange4') +
  annotate('text', x = 94, y = 5, label = ht_not_linked_other, size = 2, color = 'darkorange4') +
  annotate('text', x = 98, y = 5, label = ht_not_linked_other_percent, size = 2, color = 'orange4') +
  
  
  # Linked to Care
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = 'black',
            fill = 'sandybrown', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 7, label = 'Linked to Care', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 3, label = ht_linked, size = 2, color = 'darkorange4') +
  annotate('text', x = 19, y = 3, label = ht_linked_percent, size = 2, color = 'orange4') +
  
  
  # Down Arrow 1
  geom_segment(
    x = 10.5, xend = 10.5, y = 90, yend = 70, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 2
  geom_segment(
    x = 10.5, xend = 10.5, y = 60, yend = 40, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 3
  geom_segment(
    x = 10.5, xend = 10.5, y = 30, yend = 10, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Right Arrow 1
  geom_segment(
    x = 10.5, xend = 41, y = 80, yend = 80, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 2
  geom_segment(
    x = 10.5, xend = 41, y = 50, yend = 50, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 3
  geom_segment(
    x = 10.5, xend = 41, y = 20, yend = 20, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Line 1
  geom_segment(
    x = 63, xend = 81, y = 80, yend = 80, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted") +
  
  # Right Line 2
  geom_segment(
    x = 63, xend = 80, y = 20, yend = 20, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted")->
  grid

grid + theme_void()


```
<br>

Therefore, Bella has **successfully linked a total of `r ht_linked` HT linkage cases** (*`r ht_linked_percent` of all closed HT linkage cases, `r ht_linked`/`r ht_closed_case`*).


#### Mental Health

The Mental Health (MH) Linkage Flow Diagram is provided here for Bella's MH linkage cases.

Bella has worked on a total of **`r mh_ltc_cases` MH linkage cases** (*`r mh_ltc_cases_percent` of all linkage cases, `r mh_ltc_cases`/`r ltc_cases`*).

A total of `r mh_eligible_ltc` of these cases are "eligible" to be linked to care (*`r mh_eligible_ltc_percent` of all MH linkage cases, `r mh_eligible_ltc`/`r mh_ltc_cases`*), and the reasons the remaining `r mh_ineligible_ltc` were "ineligible" are noted in the flow diagram.

Bella is currently working on `r mh_in_progress` of these MH linkage cases (*`r mh_in_progress_90days_percent` of which have been open for more than 90 days*), and therefore has closed a total of `r mh_closed_case` thus far (*`r mh_closed_case_percent` of all "eligible" MH linkage cases, `r mh_closed_case`/`r mh_eligible_ltc`*). Out of those cases closed, a total of `r mh_not_linked` were unable to be linked to care (*`r mh_not_linked_percent` of all closed MH linkage cases, `r mh_not_linked`/`r mh_closed_case`*), with the reasons as to why are shown in the flow diagram. These reasons are not mutually exclusive, and there could be multiple reasons why those linkage cases were unsuccessful.


```{r, echo=FALSE, warning=FALSE}
#| lightbox:
#|   description: MH Linkage Flow Diagram


grid_data <- tibble(x= 1:100, y= 1:100)

grid_data %>% 
  ggplot(aes(x, y)) +
  scale_x_continuous(minor_breaks = seq(10, 100, 10)) +
  scale_y_continuous(minor_breaks = seq(10, 100, 10)) +
  theme_linedraw() ->
  grid


grid +
  # MH Linkage Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = 'black',
            fill = 'mediumpurple1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 97, label = 'MH Linkage Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 93, label = mh_ltc_cases, size = 2, color = 'purple4') +
  
  # Ineligible for Linkage
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 52.5, y = 82, label = 'Ineligible for Linkage', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 78, label = mh_ineligible_ltc, size = 2, color = 'purple4') +
  annotate('text', x = 60, y = 78, label = mh_ineligible_ltc_percent, size = 2, color = 'magenta4') +
  
  
  # Reasons Ineligible for Linkage
  geom_rect(xmin = 83, xmax = 100, ymin = 75, ymax = 85, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 85, label = 'Already Linked', size = 2) +
  annotate('text', x = 87, y = 82, label = '        Deceased', size = 2) +
  annotate('text', x = 87, y = 79, label = '    Incarcerated', size = 2) +
  annotate('text', x = 87, y = 76, label = '          Declined', size = 2) +
  annotate('text', x = 87, y = 73, label = 'Ongoing linkage ', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 85, label = mh_already_linked, size = 2, color = 'purple4') +
  annotate('text', x = 98, y = 85, label = mh_already_linked_percent, size = 2, color = 'magenta4') +
  annotate('text', x = 94, y = 82, label = mh_deceased, size = 2, color = 'purple4') +
  annotate('text', x = 98, y = 82, label = mh_deceased_percent, size = 2, color = 'magenta4') +
  annotate('text', x = 94, y = 79, label = mh_incarcerated, size = 2, color = 'purple4') +
  annotate('text', x = 98, y = 79, label = mh_incarcerated_percent, size = 2, color = 'magenta4') +
  annotate('text', x = 94, y = 76, label = mh_linkage_declined, size = 2, color = 'purple4') +
  annotate('text', x = 98, y = 76, label = mh_linkage_declined_percent, size = 2, color = 'magenta4') +
  annotate('text', x = 94, y = 73, label = mh_ongoing_linkage, size = 2, color = 'purple4') +
  annotate('text', x = 98, y = 73, label = mh_ongoing_linkage_percent, size = 2, color = 'magenta4') +
  
  
  # Eligible for Linkage
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = 'black',
            fill = 'mediumpurple1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 67, label = 'Eligible for Linkage', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 63, label = mh_eligible_ltc, size = 2, color = 'purple4') +
  annotate('text', x = 19, y = 63, label = mh_eligible_ltc_percent, size = 2, color = 'magenta4') +
  
  
  # In Progress
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 52, label = 'In Progress', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 48, label = mh_in_progress, size = 2, color = 'purple4') +
  annotate('text', x = 60, y = 48, label = mh_in_progress_percent, size = 2, color = 'magenta4') +
  
  
  # In Progress over 90 days
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 52, y = 42, label = '>90 days:', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 56, y = 42, label = mh_in_progress_90days, size = 2, color = 'purple4') +
  annotate('text', x = 60, y = 42, label = mh_in_progress_90days_percent, size = 2, color = 'magenta4') +
  
  
  # Closed Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = 'black',
            fill = 'mediumpurple1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 37, label = 'Closed Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 33, label = mh_closed_case, size = 2, color = 'purple4') +
  annotate('text', x = 19, y = 33, label = mh_closed_case_percent, size = 2, color = 'magenta4') +
  
  
  # Not Linked
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 22, label = 'Not Linked', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 18, label = mh_not_linked, size = 2, color = 'purple4') +
  annotate('text', x = 60, y = 18, label = mh_not_linked_percent, size = 2, color = 'magenta4') +
  
  
  # Reasons Not Linked
  geom_rect(xmin = 83, xmax = 100, ymin = 0, ymax = 30, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 26, label = 'Med Staff interferes    ', size = 2) +
  annotate('text', x = 87, y = 23, label = '  Family interferes', size = 2) +
  annotate('text', x = 87, y = 20, label = '    Refuses to talk', size = 2) +
  annotate('text', x = 87, y = 17, label = '    Personal safety', size = 2) +
  annotate('text', x = 87, y = 14, label = '    Medical course', size = 2) +
  annotate('text', x = 87, y = 11, label = 'Inability to contact', size = 2) +
  annotate('text', x = 87, y = 8, label = ' Language barrier', size = 2) +
  annotate('text', x = 87, y = 5, label = '                   Other', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 0, ymax = 30, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 26, label = mh_not_linked_med_staff, size = 2, color = 'purple4') +
  annotate('text', x = 98, y = 26, label = mh_not_linked_med_staff_percent, size = 2, color = 'magenta4') +
  annotate('text', x = 94, y = 23, label = mh_not_linked_family, size = 2, color = 'purple4') +
  annotate('text', x = 98, y = 23, label = mh_not_linked_family_percent, size = 2, color = 'magenta4') +
  annotate('text', x = 94, y = 20, label = mh_not_linked_not_talking, size = 2, color = 'purple4') +
  annotate('text', x = 98, y = 20, label = mh_not_linked_not_talking_percent, size = 2, color = 'magenta4') +
  annotate('text', x = 94, y = 17, label = mh_not_linked_safety, size = 2, color = 'purple4') +
  annotate('text', x = 98, y = 17, label = mh_not_linked_safety_percent, size = 2, color = 'magenta4') +
  annotate('text', x = 94, y = 14, label = mh_not_linked_medical, size = 2, color = 'purple4') +
  annotate('text', x = 98, y = 14, label = mh_not_linked_medical_percent, size = 2, color = 'magenta4') +
  annotate('text', x = 94, y = 11, label = mh_not_linked_contact, size = 2, color = 'purple4') +
  annotate('text', x = 98, y = 11, label = mh_not_linked_contact_percent, size = 2, color = 'magenta4') +
  annotate('text', x = 94, y = 8, label = mh_not_linked_language, size = 2, color = 'purple4') +
  annotate('text', x = 98, y = 8, label = mh_not_linked_language_percent, size = 2, color = 'magenta4') +
  annotate('text', x = 94, y = 5, label = mh_not_linked_other, size = 2, color = 'purple4') +
  annotate('text', x = 98, y = 5, label = mh_not_linked_other_percent, size = 2, color = 'magenta4') +
  
  
  # Linked to Care
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = 'black',
            fill = 'mediumpurple1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 7, label = 'Linked to Care', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 3, label = mh_linked, size = 2, color = 'purple4') +
  annotate('text', x = 19, y = 3, label = mh_linked_percent, size = 2, color = 'magenta4') +
  
  
  # Down Arrow 1
  geom_segment(
    x = 10.5, xend = 10.5, y = 90, yend = 70, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 2
  geom_segment(
    x = 10.5, xend = 10.5, y = 60, yend = 40, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 3
  geom_segment(
    x = 10.5, xend = 10.5, y = 30, yend = 10, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Rigmh Arrow 1
  geom_segment(
    x = 10.5, xend = 41, y = 80, yend = 80, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Rigmh Arrow 2
  geom_segment(
    x = 10.5, xend = 41, y = 50, yend = 50, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Rigmh Arrow 3
  geom_segment(
    x = 10.5, xend = 41, y = 20, yend = 20, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Rigmh Line 1
  geom_segment(
    x = 63, xend = 81, y = 80, yend = 80, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted") +
  
  # Rigmh Line 2
  geom_segment(
    x = 63, xend = 80, y = 20, yend = 20, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted")->
  grid

grid + theme_void()

```
<br>

Therefore, Bella has **successfully linked a total of `r mh_linked` MH linkage cases** (*`r mh_linked_percent` of all closed MH linkage cases, `r mh_linked`/`r mh_closed_case`*).


#### Housing

The Housing Linkage Flow Diagram is provided here for Bella's Housing linkage cases.

Bella has worked on a total of **`r housing_ltc_cases` Housing linkage cases** (*`r housing_ltc_cases_percent` of all linkage cases, `r housing_ltc_cases`/`r ltc_cases`*).

A total of `r housing_eligible_ltc` of these cases are "eligible" to be linked to care (*`r housing_eligible_ltc_percent` of all Housing linkage cases, `r housing_eligible_ltc`/`r housing_ltc_cases`*), and the reasons the remaining `r housing_ineligible_ltc` were "ineligible" are noted in the flow diagram.

Bella is currently working on `r housing_in_progress` of these Housing linkage cases (*`r housing_in_progress_90days_percent` of which have been open for more than 90 days*), and therefore has closed a total of `r housing_closed_case` thus far (*`r housing_closed_case_percent` of all "eligible" Housing linkage cases, `r housing_closed_case`/`r housing_eligible_ltc`*). Out of those cases closed, a total of `r housing_not_linked` were unable to be linked to care (*`r housing_not_linked_percent` of all closed Housing linkage cases, `r housing_not_linked`/`r housing_closed_case`*), with the reasons as to why are shown in the flow diagram. These reasons are not mutually exclusive, and there could be multiple reasons why those linkage cases were unsuccessful.


```{r, echo=FALSE, warning=FALSE}
#| lightbox:
#|   description: Housing Linkage Flow Diagram


grid_data <- tibble(x= 1:100, y= 1:100)

grid_data %>% 
  ggplot(aes(x, y)) +
  scale_x_continuous(minor_breaks = seq(10, 100, 10)) +
  scale_y_continuous(minor_breaks = seq(10, 100, 10)) +
  theme_linedraw() ->
  grid


grid +
  # Housing Linkage Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = 'black',
            fill = 'darkslategray1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 97, label = 'Housing Linkage Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 93, label = housing_ltc_cases, size = 2, color = 'dodgerblue2') +
  
  # Ineligible for Linkage
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 52.5, y = 82, label = 'Ineligible for Linkage', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 78, label = housing_ineligible_ltc, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 60, y = 78, label = housing_ineligible_ltc_percent, size = 2, color = 'cyan4') +
  
  
  # Reasons Ineligible for Linkage
  geom_rect(xmin = 83, xmax = 100, ymin = 75, ymax = 85, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 85, label = 'Already Linked', size = 2) +
  annotate('text', x = 87, y = 82, label = '        Deceased', size = 2) +
  annotate('text', x = 87, y = 79, label = '    Incarcerated', size = 2) +
  annotate('text', x = 87, y = 76, label = '          Declined', size = 2) +
  annotate('text', x = 87, y = 73, label = 'Ongoing linkage ', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 85, label = housing_already_linked, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 98, y = 85, label = housing_already_linked_percent, size = 2, color = 'cyan4') +
  annotate('text', x = 94, y = 82, label = housing_deceased, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 98, y = 82, label = housing_deceased_percent, size = 2, color = 'cyan4') +
  annotate('text', x = 94, y = 79, label = housing_incarcerated, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 98, y = 79, label = housing_incarcerated_percent, size = 2, color = 'cyan4') +
  annotate('text', x = 94, y = 76, label = housing_linkage_declined, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 98, y = 76, label = housing_linkage_declined_percent, size = 2, color = 'cyan4') +
  annotate('text', x = 94, y = 73, label = housing_ongoing_linkage, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 98, y = 73, label = housing_ongoing_linkage_percent, size = 2, color = 'cyan4') +
  
  
  # Eligible for Linkage
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = 'black',
            fill = 'darkslategray1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 67, label = 'Eligible for Linkage', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 63, label = housing_eligible_ltc, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 19, y = 63, label = housing_eligible_ltc_percent, size = 2, color = 'cyan4') +
  
  
  # In Progress
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 52, label = 'In Progress', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 48, label = housing_in_progress, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 60, y = 48, label = housing_in_progress_percent, size = 2, color = 'cyan4') +
  
  
  # In Progress over 90 days
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 52, y = 42, label = '>90 days:', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 56, y = 42, label = housing_in_progress_90days, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 60, y = 42, label = housing_in_progress_90days_percent, size = 2, color = 'cyan4') +
  
  
  # Closed Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = 'black',
            fill = 'darkslategray1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 37, label = 'Closed Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 33, label = housing_closed_case, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 19, y = 33, label = housing_closed_case_percent, size = 2, color = 'cyan4') +
  
  
  # Not Linked
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 22, label = 'Not Linked', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 18, label = housing_not_linked, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 60, y = 18, label = housing_not_linked_percent, size = 2, color = 'cyan4') +
  
  
  # Reasons Not Linked
  geom_rect(xmin = 83, xmax = 100, ymin = 0, ymax = 30, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 26, label = 'Med Staff interferes    ', size = 2) +
  annotate('text', x = 87, y = 23, label = '  Family interferes', size = 2) +
  annotate('text', x = 87, y = 20, label = '    Refuses to talk', size = 2) +
  annotate('text', x = 87, y = 17, label = '    Personal safety', size = 2) +
  annotate('text', x = 87, y = 14, label = '    Medical course', size = 2) +
  annotate('text', x = 87, y = 11, label = 'Inability to contact', size = 2) +
  annotate('text', x = 87, y = 8, label = ' Language barrier', size = 2) +
  annotate('text', x = 87, y = 5, label = '                   Other', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 0, ymax = 30, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 26, label = housing_not_linked_med_staff, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 98, y = 26, label = housing_not_linked_med_staff_percent, size = 2, color = 'cyan4') +
  annotate('text', x = 94, y = 23, label = housing_not_linked_family, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 98, y = 23, label = housing_not_linked_family_percent, size = 2, color = 'cyan4') +
  annotate('text', x = 94, y = 20, label = housing_not_linked_not_talking, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 98, y = 20, label = housing_not_linked_not_talking_percent, size = 2, color = 'cyan4') +
  annotate('text', x = 94, y = 17, label = housing_not_linked_safety, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 98, y = 17, label = housing_not_linked_safety_percent, size = 2, color = 'cyan4') +
  annotate('text', x = 94, y = 14, label = housing_not_linked_medical, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 98, y = 14, label = housing_not_linked_medical_percent, size = 2, color = 'cyan4') +
  annotate('text', x = 94, y = 11, label = housing_not_linked_contact, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 98, y = 11, label = housing_not_linked_contact_percent, size = 2, color = 'cyan4') +
  annotate('text', x = 94, y = 8, label = housing_not_linked_language, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 98, y = 8, label = housing_not_linked_language_percent, size = 2, color = 'cyan4') +
  annotate('text', x = 94, y = 5, label = housing_not_linked_other, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 98, y = 5, label = housing_not_linked_other_percent, size = 2, color = 'cyan4') +
  
  
  # Linked to Care
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = 'black',
            fill = 'darkslategray1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 7, label = 'Linked to Care', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 3, label = housing_linked, size = 2, color = 'dodgerblue2') +
  annotate('text', x = 19, y = 3, label = housing_linked_percent, size = 2, color = 'cyan4') +
  
  
  # Down Arrow 1
  geom_segment(
    x = 10.5, xend = 10.5, y = 90, yend = 70, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 2
  geom_segment(
    x = 10.5, xend = 10.5, y = 60, yend = 40, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 3
  geom_segment(
    x = 10.5, xend = 10.5, y = 30, yend = 10, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Righousing Arrow 1
  geom_segment(
    x = 10.5, xend = 41, y = 80, yend = 80, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Righousing Arrow 2
  geom_segment(
    x = 10.5, xend = 41, y = 50, yend = 50, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Righousing Arrow 3
  geom_segment(
    x = 10.5, xend = 41, y = 20, yend = 20, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Righousing Line 1
  geom_segment(
    x = 63, xend = 81, y = 80, yend = 80, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted") +
  
  # Righousing Line 2
  geom_segment(
    x = 63, xend = 80, y = 20, yend = 20, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted")->
  grid

grid + theme_void()

```
<br>

Therefore, Bella has **successfully linked a total of `r housing_linked` Housing linkage cases** (*`r housing_linked_percent` of all closed Housing linkage cases, `r housing_linked`/`r housing_closed_case`*).


#### PrEP

The PrEP Linkage Flow Diagram is provided here for Bella's PrEP linkage cases.

Bella has worked on a total of **`r prep_ltc_cases` PrEP linkage cases** (*`r prep_ltc_cases_percent` of all linkage cases, `r prep_ltc_cases`/`r ltc_cases`*).

A total of `r prep_eligible_ltc` of these cases are "eligible" to be linked to care (*`r prep_eligible_ltc_percent` of all PrEP linkage cases, `r prep_eligible_ltc`/`r prep_ltc_cases`*), and the reasons the remaining `r prep_ineligible_ltc` were "ineligible" are noted in the flow diagram.

Bella is currently working on `r prep_in_progress` of these PrEP linkage cases (*`r prep_in_progress_90days_percent` of which have been open for more than 90 days*), and therefore has closed a total of `r prep_closed_case` thus far (*`r prep_closed_case_percent` of all "eligible" PrEP linkage cases, `r prep_closed_case`/`r prep_eligible_ltc`*). Out of those cases closed, a total of `r prep_not_linked` were unable to be linked to care (*`r prep_not_linked_percent` of all closed PrEP linkage cases, `r prep_not_linked`/`r prep_closed_case`*), with the reasons as to why are shown in the flow diagram. These reasons are not mutually exclusive, and there could be multiple reasons why those linkage cases were unsuccessful.


```{r, echo=FALSE, warning=FALSE}
#| lightbox:
#|   description: PrEP Linkage Flow Diagram


grid_data <- tibble(x= 1:100, y= 1:100)

grid_data %>% 
  ggplot(aes(x, y)) +
  scale_x_continuous(minor_breaks = seq(10, 100, 10)) +
  scale_y_continuous(minor_breaks = seq(10, 100, 10)) +
  theme_linedraw() ->
  grid


grid +
  # PrEP Linkage Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = 'black',
            fill = 'lightgreen', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 97, label = 'PrEP Linkage Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 93, label = prep_ltc_cases, size = 2, color = 'darkgreen') +
  
  # Ineligible for Linkage
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 52.5, y = 82, label = 'Ineligible for Linkage', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 78, label = prep_ineligible_ltc, size = 2, color = 'darkgreen') +
  annotate('text', x = 60, y = 78, label = prep_ineligible_ltc_percent, size = 2, color = 'olivedrab') +
  
  
  # Reasons Ineligible for Linkage
  geom_rect(xmin = 83, xmax = 100, ymin = 75, ymax = 85, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 85, label = 'Already Linked', size = 2) +
  annotate('text', x = 87, y = 82, label = '        Deceased', size = 2) +
  annotate('text', x = 87, y = 79, label = '    Incarcerated', size = 2) +
  annotate('text', x = 87, y = 76, label = '          Declined', size = 2) +
  annotate('text', x = 87, y = 73, label = 'Ongoing linkage ', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 85, label = prep_already_linked, size = 2, color = 'darkgreen') +
  annotate('text', x = 98, y = 85, label = prep_already_linked_percent, size = 2, color = 'olivedrab') +
  annotate('text', x = 94, y = 82, label = prep_deceased, size = 2, color = 'darkgreen') +
  annotate('text', x = 98, y = 82, label = prep_deceased_percent, size = 2, color = 'olivedrab') +
  annotate('text', x = 94, y = 79, label = prep_incarcerated, size = 2, color = 'darkgreen') +
  annotate('text', x = 98, y = 79, label = prep_incarcerated_percent, size = 2, color = 'olivedrab') +
  annotate('text', x = 94, y = 76, label = prep_linkage_declined, size = 2, color = 'darkgreen') +
  annotate('text', x = 98, y = 76, label = prep_linkage_declined_percent, size = 2, color = 'olivedrab') +
  annotate('text', x = 94, y = 73, label = prep_ongoing_linkage, size = 2, color = 'darkgreen') +
  annotate('text', x = 98, y = 73, label = prep_ongoing_linkage_percent, size = 2, color = 'olivedrab') +
  
  
  # Eligible for Linkage
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = 'black',
            fill = 'lightgreen', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 67, label = 'Eligible for Linkage', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 63, label = prep_eligible_ltc, size = 2, color = 'darkgreen') +
  annotate('text', x = 19, y = 63, label = prep_eligible_ltc_percent, size = 2, color = 'olivedrab') +
  
  
  # In Progress
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 52, label = 'In Progress', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 48, label = prep_in_progress, size = 2, color = 'darkgreen') +
  annotate('text', x = 60, y = 48, label = prep_in_progress_percent, size = 2, color = 'olivedrab') +
  
  
  # In Progress over 90 days
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 52, y = 42, label = '>90 days:', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 56, y = 42, label = prep_in_progress_90days, size = 2, color = 'darkgreen') +
  annotate('text', x = 60, y = 42, label = prep_in_progress_90days_percent, size = 2, color = 'olivedrab') +
  
  
  # Closed Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = 'black',
            fill = 'lightgreen', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 37, label = 'Closed Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 33, label = prep_closed_case, size = 2, color = 'darkgreen') +
  annotate('text', x = 19, y = 33, label = prep_closed_case_percent, size = 2, color = 'olivedrab') +
  
  
  # Not Linked
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 22, label = 'Not Linked', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 18, label = prep_not_linked, size = 2, color = 'darkgreen') +
  annotate('text', x = 60, y = 18, label = prep_not_linked_percent, size = 2, color = 'olivedrab') +
  
  
  # Reasons Not Linked
  geom_rect(xmin = 83, xmax = 100, ymin = 0, ymax = 30, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 26, label = 'Med Staff interferes    ', size = 2) +
  annotate('text', x = 87, y = 23, label = '  Family interferes', size = 2) +
  annotate('text', x = 87, y = 20, label = '    Refuses to talk', size = 2) +
  annotate('text', x = 87, y = 17, label = '    Personal safety', size = 2) +
  annotate('text', x = 87, y = 14, label = '    Medical course', size = 2) +
  annotate('text', x = 87, y = 11, label = 'Inability to contact', size = 2) +
  annotate('text', x = 87, y = 8, label = ' Language barrier', size = 2) +
  annotate('text', x = 87, y = 5, label = '                   Other', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 0, ymax = 30, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 26, label = prep_not_linked_med_staff, size = 2, color = 'darkgreen') +
  annotate('text', x = 98, y = 26, label = prep_not_linked_med_staff_percent, size = 2, color = 'olivedrab') +
  annotate('text', x = 94, y = 23, label = prep_not_linked_family, size = 2, color = 'darkgreen') +
  annotate('text', x = 98, y = 23, label = prep_not_linked_family_percent, size = 2, color = 'olivedrab') +
  annotate('text', x = 94, y = 20, label = prep_not_linked_not_talking, size = 2, color = 'darkgreen') +
  annotate('text', x = 98, y = 20, label = prep_not_linked_not_talking_percent, size = 2, color = 'olivedrab') +
  annotate('text', x = 94, y = 17, label = prep_not_linked_safety, size = 2, color = 'darkgreen') +
  annotate('text', x = 98, y = 17, label = prep_not_linked_safety_percent, size = 2, color = 'olivedrab') +
  annotate('text', x = 94, y = 14, label = prep_not_linked_medical, size = 2, color = 'darkgreen') +
  annotate('text', x = 98, y = 14, label = prep_not_linked_medical_percent, size = 2, color = 'olivedrab') +
  annotate('text', x = 94, y = 11, label = prep_not_linked_contact, size = 2, color = 'darkgreen') +
  annotate('text', x = 98, y = 11, label = prep_not_linked_contact_percent, size = 2, color = 'olivedrab') +
  annotate('text', x = 94, y = 8, label = prep_not_linked_language, size = 2, color = 'darkgreen') +
  annotate('text', x = 98, y = 8, label = prep_not_linked_language_percent, size = 2, color = 'olivedrab') +
  annotate('text', x = 94, y = 5, label = prep_not_linked_other, size = 2, color = 'darkgreen') +
  annotate('text', x = 98, y = 5, label = prep_not_linked_other_percent, size = 2, color = 'olivedrab') +
  
  
  # Linked to Care
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = 'black',
            fill = 'lightgreen', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 7, label = 'Linked to Care', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 3, label = prep_linked, size = 2, color = 'darkgreen') +
  annotate('text', x = 19, y = 3, label = prep_linked_percent, size = 2, color = 'olivedrab') +
  
  
  # Down Arrow 1
  geom_segment(
    x = 10.5, xend = 10.5, y = 90, yend = 70, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 2
  geom_segment(
    x = 10.5, xend = 10.5, y = 60, yend = 40, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 3
  geom_segment(
    x = 10.5, xend = 10.5, y = 30, yend = 10, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Rigprep Arrow 1
  geom_segment(
    x = 10.5, xend = 41, y = 80, yend = 80, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Rigprep Arrow 2
  geom_segment(
    x = 10.5, xend = 41, y = 50, yend = 50, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Rigprep Arrow 3
  geom_segment(
    x = 10.5, xend = 41, y = 20, yend = 20, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Rigprep Line 1
  geom_segment(
    x = 63, xend = 81, y = 80, yend = 80, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted") +
  
  # Rigprep Line 2
  geom_segment(
    x = 63, xend = 80, y = 20, yend = 20, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted")->
  grid

grid + theme_void()

```
<br>

Therefore, Bella has **successfully linked a total of `r prep_linked` PrEP linkage cases** (*`r prep_linked_percent` of all closed PrEP linkage cases, `r prep_linked`/`r prep_closed_case`*).


#### Additional services

::: {.panel-tabset}


##### STI

The STI Linkage Flow Diagram is provided here for Bella's STI linkage cases.

Bella has worked on a total of **`r sti_ltc_cases` STI linkage cases** (*`r sti_ltc_cases_percent` of all linkage cases, `r sti_ltc_cases`/`r ltc_cases`*).

A total of `r sti_eligible_ltc` of these cases are "eligible" to be linked to care (*`r sti_eligible_ltc_percent` of all STI linkage cases, `r sti_eligible_ltc`/`r sti_ltc_cases`*), and the reasons the remaining `r sti_ineligible_ltc` were "ineligible" are noted in the flow diagram.

Bella is currently working on `r sti_in_progress` of these STI linkage cases (*`r sti_in_progress_90days_percent` of which have been open for more than 90 days*), and therefore has closed a total of `r sti_closed_case` thus far (*`r sti_closed_case_percent` of all "eligible" STI linkage cases, `r sti_closed_case`/`r sti_eligible_ltc`*). Out of those cases closed, a total of `r sti_not_linked` were unable to be linked to care (*`r sti_not_linked_percent` of all closed STI linkage cases, `r sti_not_linked`/`r sti_closed_case`*), with the reasons as to why are shown in the flow diagram. These reasons are not mutually exclusive, and there could be multiple reasons why those linkage cases were unsuccessful.


```{r, echo=FALSE, warning=FALSE}
#| lightbox:
#|   description: STI Linkage Flow Diagram


grid_data <- tibble(x= 1:100, y= 1:100)

grid_data %>% 
  ggplot(aes(x, y)) +
  scale_x_continuous(minor_breaks = seq(10, 100, 10)) +
  scale_y_continuous(minor_breaks = seq(10, 100, 10)) +
  theme_linedraw() ->
  grid


grid +
  # STI Linkage Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = 'black',
            fill = 'thistle1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 97, label = 'STI Linkage Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 93, label = sti_ltc_cases, size = 2, color = 'palevioletred3') +
  
  # Ineligible for Linkage
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 52.5, y = 82, label = 'Ineligible for Linkage', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 78, label = sti_ineligible_ltc, size = 2, color = 'palevioletred3') +
  annotate('text', x = 60, y = 78, label = sti_ineligible_ltc_percent, size = 2, color = 'violetred3') +
  
  
  # Reasons Ineligible for Linkage
  geom_rect(xmin = 83, xmax = 100, ymin = 75, ymax = 85, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 85, label = 'Already Linked', size = 2) +
  annotate('text', x = 87, y = 82, label = '        Deceased', size = 2) +
  annotate('text', x = 87, y = 79, label = '    Incarcerated', size = 2) +
  annotate('text', x = 87, y = 76, label = '          Declined', size = 2) +
  annotate('text', x = 87, y = 73, label = 'Ongoing linkage ', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 85, label = sti_already_linked, size = 2, color = 'palevioletred3') +
  annotate('text', x = 98, y = 85, label = sti_already_linked_percent, size = 2, color = 'violetred3') +
  annotate('text', x = 94, y = 82, label = sti_deceased, size = 2, color = 'palevioletred3') +
  annotate('text', x = 98, y = 82, label = sti_deceased_percent, size = 2, color = 'violetred3') +
  annotate('text', x = 94, y = 79, label = sti_incarcerated, size = 2, color = 'palevioletred3') +
  annotate('text', x = 98, y = 79, label = sti_incarcerated_percent, size = 2, color = 'violetred3') +
  annotate('text', x = 94, y = 76, label = sti_linkage_declined, size = 2, color = 'palevioletred3') +
  annotate('text', x = 98, y = 76, label = sti_linkage_declined_percent, size = 2, color = 'violetred3') +
  annotate('text', x = 94, y = 73, label = sti_ongoing_linkage, size = 2, color = 'palevioletred3') +
  annotate('text', x = 98, y = 73, label = sti_ongoing_linkage_percent, size = 2, color = 'violetred3') +
  
  
  # Eligible for Linkage
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = 'black',
            fill = 'thistle1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 67, label = 'Eligible for Linkage', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 63, label = sti_eligible_ltc, size = 2, color = 'palevioletred3') +
  annotate('text', x = 19, y = 63, label = sti_eligible_ltc_percent, size = 2, color = 'violetred3') +
  
  
  # In Progress
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 52, label = 'In Progress', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 48, label = sti_in_progress, size = 2, color = 'palevioletred3') +
  annotate('text', x = 60, y = 48, label = sti_in_progress_percent, size = 2, color = 'violetred3') +
  
  
  # In Progress over 90 days
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 52, y = 42, label = '>90 days:', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 56, y = 42, label = sti_in_progress_90days, size = 2, color = 'palevioletred3') +
  annotate('text', x = 60, y = 42, label = sti_in_progress_90days_percent, size = 2, color = 'violetred3') +
  
  
  # Closed Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = 'black',
            fill = 'thistle1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 37, label = 'Closed Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 33, label = sti_closed_case, size = 2, color = 'palevioletred3') +
  annotate('text', x = 19, y = 33, label = sti_closed_case_percent, size = 2, color = 'violetred3') +
  
  
  # Not Linked
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 22, label = 'Not Linked', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 18, label = sti_not_linked, size = 2, color = 'palevioletred3') +
  annotate('text', x = 60, y = 18, label = sti_not_linked_percent, size = 2, color = 'violetred3') +
  
  
  # Reasons Not Linked
  geom_rect(xmin = 83, xmax = 100, ymin = 0, ymax = 30, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 26, label = 'Med Staff interferes    ', size = 2) +
  annotate('text', x = 87, y = 23, label = '  Family interferes', size = 2) +
  annotate('text', x = 87, y = 20, label = '    Refuses to talk', size = 2) +
  annotate('text', x = 87, y = 17, label = '    Personal safety', size = 2) +
  annotate('text', x = 87, y = 14, label = '    Medical course', size = 2) +
  annotate('text', x = 87, y = 11, label = 'Inability to contact', size = 2) +
  annotate('text', x = 87, y = 8, label = ' Language barrier', size = 2) +
  annotate('text', x = 87, y = 5, label = '                   Other', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 0, ymax = 30, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 26, label = sti_not_linked_med_staff, size = 2, color = 'palevioletred3') +
  annotate('text', x = 98, y = 26, label = sti_not_linked_med_staff_percent, size = 2, color = 'violetred3') +
  annotate('text', x = 94, y = 23, label = sti_not_linked_family, size = 2, color = 'palevioletred3') +
  annotate('text', x = 98, y = 23, label = sti_not_linked_family_percent, size = 2, color = 'violetred3') +
  annotate('text', x = 94, y = 20, label = sti_not_linked_not_talking, size = 2, color = 'palevioletred3') +
  annotate('text', x = 98, y = 20, label = sti_not_linked_not_talking_percent, size = 2, color = 'violetred3') +
  annotate('text', x = 94, y = 17, label = sti_not_linked_safety, size = 2, color = 'palevioletred3') +
  annotate('text', x = 98, y = 17, label = sti_not_linked_safety_percent, size = 2, color = 'violetred3') +
  annotate('text', x = 94, y = 14, label = sti_not_linked_medical, size = 2, color = 'palevioletred3') +
  annotate('text', x = 98, y = 14, label = sti_not_linked_medical_percent, size = 2, color = 'violetred3') +
  annotate('text', x = 94, y = 11, label = sti_not_linked_contact, size = 2, color = 'palevioletred3') +
  annotate('text', x = 98, y = 11, label = sti_not_linked_contact_percent, size = 2, color = 'violetred3') +
  annotate('text', x = 94, y = 8, label = sti_not_linked_language, size = 2, color = 'palevioletred3') +
  annotate('text', x = 98, y = 8, label = sti_not_linked_language_percent, size = 2, color = 'violetred3') +
  annotate('text', x = 94, y = 5, label = sti_not_linked_other, size = 2, color = 'palevioletred3') +
  annotate('text', x = 98, y = 5, label = sti_not_linked_other_percent, size = 2, color = 'violetred3') +
  
  
  # Linked to Care
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = 'black',
            fill = 'thistle1', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 7, label = 'Linked to Care', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 3, label = sti_linked, size = 2, color = 'palevioletred3') +
  annotate('text', x = 19, y = 3, label = sti_linked_percent, size = 2, color = 'violetred3') +
  
  
  # Down Arrow 1
  geom_segment(
    x = 10.5, xend = 10.5, y = 90, yend = 70, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 2
  geom_segment(
    x = 10.5, xend = 10.5, y = 60, yend = 40, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 3
  geom_segment(
    x = 10.5, xend = 10.5, y = 30, yend = 10, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Right Arrow 1
  geom_segment(
    x = 10.5, xend = 41, y = 80, yend = 80, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 2
  geom_segment(
    x = 10.5, xend = 41, y = 50, yend = 50, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 3
  geom_segment(
    x = 10.5, xend = 41, y = 20, yend = 20, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Line 1
  geom_segment(
    x = 63, xend = 81, y = 80, yend = 80, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted") +
  
  # Right Line 2
  geom_segment(
    x = 63, xend = 80, y = 20, yend = 20, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted")->
  grid

grid + theme_void()

```
<br>

Therefore, Bella has **successfully linked a total of `r sti_linked` STI linkage cases** (*`r sti_linked_percent` of all closed STI linkage cases, `r sti_linked`/`r sti_closed_case`*).


##### Food services

The Food services Linkage Flow Diagram is provided here for Bella's Food services linkage cases.

Bella has worked on a total of **`r food_ltc_cases` Food services linkage cases** (*`r food_ltc_cases_percent` of all linkage cases, `r food_ltc_cases`/`r ltc_cases`*).

A total of `r food_eligible_ltc` of these cases are "eligible" to be linked to care (*`r food_eligible_ltc_percent` of all Food services linkage cases, `r food_eligible_ltc`/`r food_ltc_cases`*), and the reasons the remaining `r food_ineligible_ltc` were "ineligible" are noted in the flow diagram.

Bella is currently working on `r food_in_progress` of these Food services linkage cases (*`r food_in_progress_90days_percent` of which have been open for more than 90 days*), and therefore has closed a total of `r food_closed_case` thus far (*`r food_closed_case_percent` of all "eligible" Food services linkage cases, `r food_closed_case`/`r food_eligible_ltc`*). Out of those cases closed, a total of `r food_not_linked` were unable to be linked to care (*`r food_not_linked_percent` of all closed Food services linkage cases, `r food_not_linked`/`r food_closed_case`*), with the reasons as to why are shown in the flow diagram. These reasons are not mutually exclusive, and there could be multiple reasons why those linkage cases were unsuccessful.


```{r, echo=FALSE, warning=FALSE}
#| lightbox:
#|   description: Food Insecurity Linkage Flow Diagram


grid_data <- tibble(x= 1:100, y= 1:100)

grid_data %>% 
  ggplot(aes(x, y)) +
  scale_x_continuous(minor_breaks = seq(10, 100, 10)) +
  scale_y_continuous(minor_breaks = seq(10, 100, 10)) +
  theme_linedraw() ->
  grid


grid +
  # Food Linkage Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = 'black',
            fill = 'plum', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 97, label = 'Food Insecurity Linkage Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 93, label = food_ltc_cases, size = 2, color = 'mediumslateblue') +
  
  # Ineligible for Linkage
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 52.5, y = 82, label = 'Ineligible for Linkage', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 78, label = food_ineligible_ltc, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 60, y = 78, label = food_ineligible_ltc_percent, size = 2, color = 'darkmagenta') +
  
  
  # Reasons Ineligible for Linkage
  geom_rect(xmin = 83, xmax = 100, ymin = 75, ymax = 85, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 85, label = 'Already Linked', size = 2) +
  annotate('text', x = 87, y = 82, label = '        Deceased', size = 2) +
  annotate('text', x = 87, y = 79, label = '    Incarcerated', size = 2) +
  annotate('text', x = 87, y = 76, label = '          Declined', size = 2) +
  annotate('text', x = 87, y = 73, label = 'Ongoing linkage ', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 85, label = food_already_linked, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 98, y = 85, label = food_already_linked_percent, size = 2, color = 'darkmagenta') +
  annotate('text', x = 94, y = 82, label = food_deceased, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 98, y = 82, label = food_deceased_percent, size = 2, color = 'darkmagenta') +
  annotate('text', x = 94, y = 79, label = food_incarcerated, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 98, y = 79, label = food_incarcerated_percent, size = 2, color = 'darkmagenta') +
  annotate('text', x = 94, y = 76, label = food_linkage_declined, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 98, y = 76, label = food_linkage_declined_percent, size = 2, color = 'darkmagenta') +
  annotate('text', x = 94, y = 73, label = food_ongoing_linkage, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 98, y = 73, label = food_ongoing_linkage_percent, size = 2, color = 'darkmagenta') +
  
  
  # Eligible for Linkage
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = 'black',
            fill = 'plum', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 67, label = 'Eligible for Linkage', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 63, label = food_eligible_ltc, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 19, y = 63, label = food_eligible_ltc_percent, size = 2, color = 'darkmagenta') +
  
  
  # In Progress
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 52, label = 'In Progress', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 48, label = food_in_progress, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 60, y = 48, label = food_in_progress_percent, size = 2, color = 'darkmagenta') +
  
  
  # In Progress over 90 days
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 52, y = 42, label = '>90 days:', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 56, y = 42, label = food_in_progress_90days, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 60, y = 42, label = food_in_progress_90days_percent, size = 2, color = 'darkmagenta') +
  
  
  # Closed Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = 'black',
            fill = 'plum', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 37, label = 'Closed Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 33, label = food_closed_case, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 19, y = 33, label = food_closed_case_percent, size = 2, color = 'darkmagenta') +
  
  
  # Not Linked
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 22, label = 'Not Linked', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 18, label = food_not_linked, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 60, y = 18, label = food_not_linked_percent, size = 2, color = 'darkmagenta') +
  
  
  # Reasons Not Linked
  geom_rect(xmin = 83, xmax = 100, ymin = 0, ymax = 30, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 26, label = 'Med Staff interferes    ', size = 2) +
  annotate('text', x = 87, y = 23, label = '  Family interferes', size = 2) +
  annotate('text', x = 87, y = 20, label = '    Refuses to talk', size = 2) +
  annotate('text', x = 87, y = 17, label = '    Personal safety', size = 2) +
  annotate('text', x = 87, y = 14, label = '    Medical course', size = 2) +
  annotate('text', x = 87, y = 11, label = 'Inability to contact', size = 2) +
  annotate('text', x = 87, y = 8, label = ' Language barrier', size = 2) +
  annotate('text', x = 87, y = 5, label = '                   Other', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 0, ymax = 30, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 26, label = food_not_linked_med_staff, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 98, y = 26, label = food_not_linked_med_staff_percent, size = 2, color = 'darkmagenta') +
  annotate('text', x = 94, y = 23, label = food_not_linked_family, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 98, y = 23, label = food_not_linked_family_percent, size = 2, color = 'darkmagenta') +
  annotate('text', x = 94, y = 20, label = food_not_linked_not_talking, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 98, y = 20, label = food_not_linked_not_talking_percent, size = 2, color = 'darkmagenta') +
  annotate('text', x = 94, y = 17, label = food_not_linked_safety, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 98, y = 17, label = food_not_linked_safety_percent, size = 2, color = 'darkmagenta') +
  annotate('text', x = 94, y = 14, label = food_not_linked_medical, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 98, y = 14, label = food_not_linked_medical_percent, size = 2, color = 'darkmagenta') +
  annotate('text', x = 94, y = 11, label = food_not_linked_contact, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 98, y = 11, label = food_not_linked_contact_percent, size = 2, color = 'darkmagenta') +
  annotate('text', x = 94, y = 8, label = food_not_linked_language, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 98, y = 8, label = food_not_linked_language_percent, size = 2, color = 'darkmagenta') +
  annotate('text', x = 94, y = 5, label = food_not_linked_other, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 98, y = 5, label = food_not_linked_other_percent, size = 2, color = 'darkmagenta') +
  
  
  # Linked to Care
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = 'black',
            fill = 'plum', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 7, label = 'Linked to Care', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 3, label = food_linked, size = 2, color = 'mediumslateblue') +
  annotate('text', x = 19, y = 3, label = food_linked_percent, size = 2, color = 'darkmagenta') +
  
  
  # Down Arrow 1
  geom_segment(
    x = 10.5, xend = 10.5, y = 90, yend = 70, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 2
  geom_segment(
    x = 10.5, xend = 10.5, y = 60, yend = 40, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 3
  geom_segment(
    x = 10.5, xend = 10.5, y = 30, yend = 10, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Right Arrow 1
  geom_segment(
    x = 10.5, xend = 41, y = 80, yend = 80, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 2
  geom_segment(
    x = 10.5, xend = 41, y = 50, yend = 50, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 3
  geom_segment(
    x = 10.5, xend = 41, y = 20, yend = 20, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Line 1
  geom_segment(
    x = 63, xend = 81, y = 80, yend = 80, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted") +
  
  # Right Line 2
  geom_segment(
    x = 63, xend = 80, y = 20, yend = 20, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted")->
  grid

grid + theme_void()

```
<br>

Therefore, Bella has **successfully linked a total of `r food_linked` Food services linkage cases** (*`r food_linked_percent` of all closed Food services linkage cases, `r food_linked`/`r food_closed_case`*).


##### Financial assistance

The Financial assistance Linkage Flow Diagram is provided here for Bella's Financial assistance linkage cases.

Bella has worked on a total of **`r financial_ltc_cases` Financial assistance linkage cases** (*`r financial_ltc_cases_percent` of all linkage cases, `r financial_ltc_cases`/`r ltc_cases`*).

A total of `r financial_eligible_ltc` of these cases are "eligible" to be linked to care (*`r financial_eligible_ltc_percent` of all Financial assistance linkage cases, `r financial_eligible_ltc`/`r financial_ltc_cases`*), and the reasons the remaining `r financial_ineligible_ltc` were "ineligible" are noted in the flow diagram.

Bella is currently working on `r financial_in_progress` of these Financial assistance linkage cases (*`r financial_in_progress_90days_percent` of which have been open for more than 90 days*), and therefore has closed a total of `r financial_closed_case` thus far (*`r financial_closed_case_percent` of all "eligible" Financial assistance linkage cases, `r financial_closed_case`/`r financial_eligible_ltc`*). Out of those cases closed, a total of `r financial_not_linked` were unable to be linked to care (*`r financial_not_linked_percent` of all closed Financial assistance linkage cases, `r financial_not_linked`/`r financial_closed_case`*), with the reasons as to why are shown in the flow diagram. These reasons are not mutually exclusive, and there could be multiple reasons why those linkage cases were unsuccessful.


```{r, echo=FALSE, warning=FALSE}
#| lightbox:
#|   description: Financial Assistance Linkage Flow Diagram


grid_data <- tibble(x= 1:100, y= 1:100)

grid_data %>% 
  ggplot(aes(x, y)) +
  scale_x_continuous(minor_breaks = seq(10, 100, 10)) +
  scale_y_continuous(minor_breaks = seq(10, 100, 10)) +
  theme_linedraw() ->
  grid


grid +
  # Financial Linkage Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = 'black',
            fill = 'aquamarine', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 97, label = 'Financial Assistance Linkage Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 93, label = financial_ltc_cases, size = 2, color = 'aquamarine4') +
  
  # Ineligible for Linkage
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 52.5, y = 82, label = 'Ineligible for Linkage', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 78, label = financial_ineligible_ltc, size = 2, color = 'aquamarine4') +
  annotate('text', x = 60, y = 78, label = financial_ineligible_ltc_percent, size = 2, color = 'cadetblue4') +
  
  
  # Reasons Ineligible for Linkage
  geom_rect(xmin = 83, xmax = 100, ymin = 75, ymax = 85, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 85, label = 'Already Linked', size = 2) +
  annotate('text', x = 87, y = 82, label = '        Deceased', size = 2) +
  annotate('text', x = 87, y = 79, label = '    Incarcerated', size = 2) +
  annotate('text', x = 87, y = 76, label = '          Declined', size = 2) +
  annotate('text', x = 87, y = 73, label = 'Ongoing linkage ', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 85, label = financial_already_linked, size = 2, color = 'aquamarine4') +
  annotate('text', x = 98, y = 85, label = financial_already_linked_percent, size = 2, color = 'cadetblue4') +
  annotate('text', x = 94, y = 82, label = financial_deceased, size = 2, color = 'aquamarine4') +
  annotate('text', x = 98, y = 82, label = financial_deceased_percent, size = 2, color = 'cadetblue4') +
  annotate('text', x = 94, y = 79, label = financial_incarcerated, size = 2, color = 'aquamarine4') +
  annotate('text', x = 98, y = 79, label = financial_incarcerated_percent, size = 2, color = 'cadetblue4') +
  annotate('text', x = 94, y = 76, label = financial_linkage_declined, size = 2, color = 'aquamarine4') +
  annotate('text', x = 98, y = 76, label = financial_linkage_declined_percent, size = 2, color = 'cadetblue4') +
  annotate('text', x = 94, y = 73, label = financial_ongoing_linkage, size = 2, color = 'aquamarine4') +
  annotate('text', x = 98, y = 73, label = financial_ongoing_linkage_percent, size = 2, color = 'cadetblue4') +
  
  
  # Eligible for Linkage
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = 'black',
            fill = 'aquamarine', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 67, label = 'Eligible for Linkage', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 63, label = financial_eligible_ltc, size = 2, color = 'aquamarine4') +
  annotate('text', x = 19, y = 63, label = financial_eligible_ltc_percent, size = 2, color = 'cadetblue4') +
  
  
  # In Progress
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 52, label = 'In Progress', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 48, label = financial_in_progress, size = 2, color = 'aquamarine4') +
  annotate('text', x = 60, y = 48, label = financial_in_progress_percent, size = 2, color = 'cadetblue4') +
  
  
  # In Progress over 90 days
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 52, y = 42, label = '>90 days:', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 56, y = 42, label = financial_in_progress_90days, size = 2, color = 'aquamarine4') +
  annotate('text', x = 60, y = 42, label = financial_in_progress_90days_percent, size = 2, color = 'cadetblue4') +
  
  
  # Closed Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = 'black',
            fill = 'aquamarine', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 37, label = 'Closed Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 33, label = financial_closed_case, size = 2, color = 'aquamarine4') +
  annotate('text', x = 19, y = 33, label = financial_closed_case_percent, size = 2, color = 'cadetblue4') +
  
  
  # Not Linked
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 22, label = 'Not Linked', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 18, label = financial_not_linked, size = 2, color = 'aquamarine4') +
  annotate('text', x = 60, y = 18, label = financial_not_linked_percent, size = 2, color = 'cadetblue4') +
  
  
  # Reasons Not Linked
  geom_rect(xmin = 83, xmax = 100, ymin = 0, ymax = 30, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 26, label = 'Med Staff interferes    ', size = 2) +
  annotate('text', x = 87, y = 23, label = '  Family interferes', size = 2) +
  annotate('text', x = 87, y = 20, label = '    Refuses to talk', size = 2) +
  annotate('text', x = 87, y = 17, label = '    Personal safety', size = 2) +
  annotate('text', x = 87, y = 14, label = '    Medical course', size = 2) +
  annotate('text', x = 87, y = 11, label = 'Inability to contact', size = 2) +
  annotate('text', x = 87, y = 8, label = ' Language barrier', size = 2) +
  annotate('text', x = 87, y = 5, label = '                   Other', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 0, ymax = 30, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 26, label = financial_not_linked_med_staff, size = 2, color = 'aquamarine4') +
  annotate('text', x = 98, y = 26, label = financial_not_linked_med_staff_percent, size = 2, color = 'cadetblue4') +
  annotate('text', x = 94, y = 23, label = financial_not_linked_family, size = 2, color = 'aquamarine4') +
  annotate('text', x = 98, y = 23, label = financial_not_linked_family_percent, size = 2, color = 'cadetblue4') +
  annotate('text', x = 94, y = 20, label = financial_not_linked_not_talking, size = 2, color = 'aquamarine4') +
  annotate('text', x = 98, y = 20, label = financial_not_linked_not_talking_percent, size = 2, color = 'cadetblue4') +
  annotate('text', x = 94, y = 17, label = financial_not_linked_safety, size = 2, color = 'aquamarine4') +
  annotate('text', x = 98, y = 17, label = financial_not_linked_safety_percent, size = 2, color = 'cadetblue4') +
  annotate('text', x = 94, y = 14, label = financial_not_linked_medical, size = 2, color = 'aquamarine4') +
  annotate('text', x = 98, y = 14, label = financial_not_linked_medical_percent, size = 2, color = 'cadetblue4') +
  annotate('text', x = 94, y = 11, label = financial_not_linked_contact, size = 2, color = 'aquamarine4') +
  annotate('text', x = 98, y = 11, label = financial_not_linked_contact_percent, size = 2, color = 'cadetblue4') +
  annotate('text', x = 94, y = 8, label = financial_not_linked_language, size = 2, color = 'aquamarine4') +
  annotate('text', x = 98, y = 8, label = financial_not_linked_language_percent, size = 2, color = 'cadetblue4') +
  annotate('text', x = 94, y = 5, label = financial_not_linked_other, size = 2, color = 'aquamarine4') +
  annotate('text', x = 98, y = 5, label = financial_not_linked_other_percent, size = 2, color = 'cadetblue4') +
  
  
  # Linked to Care
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = 'black',
            fill = 'aquamarine', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 7, label = 'Linked to Care', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 3, label = financial_linked, size = 2, color = 'aquamarine4') +
  annotate('text', x = 19, y = 3, label = financial_linked_percent, size = 2, color = 'cadetblue4') +
  
  
  # Down Arrow 1
  geom_segment(
    x = 10.5, xend = 10.5, y = 90, yend = 70, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 2
  geom_segment(
    x = 10.5, xend = 10.5, y = 60, yend = 40, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 3
  geom_segment(
    x = 10.5, xend = 10.5, y = 30, yend = 10, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Right Arrow 1
  geom_segment(
    x = 10.5, xend = 41, y = 80, yend = 80, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 2
  geom_segment(
    x = 10.5, xend = 41, y = 50, yend = 50, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 3
  geom_segment(
    x = 10.5, xend = 41, y = 20, yend = 20, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Line 1
  geom_segment(
    x = 63, xend = 81, y = 80, yend = 80, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted") +
  
  # Right Line 2
  geom_segment(
    x = 63, xend = 80, y = 20, yend = 20, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted")->
  grid

grid + theme_void()

```
<br>

Therefore, Bella has **successfully linked a total of `r financial_linked` Financial assistance linkage cases** (*`r financial_linked_percent` of all closed Financial assistance linkage cases, `r financial_linked`/`r financial_closed_case`*).


##### Person abuse

The Person abuse Linkage Flow Diagram is provided here for Bella's Person abuse linkage cases.

Bella has worked on a total of **`r personabuse_ltc_cases` Person abuse linkage cases** (*`r personabuse_ltc_cases_percent` of all linkage cases, `r personabuse_ltc_cases`/`r ltc_cases`*).

A total of `r personabuse_eligible_ltc` of these cases are "eligible" to be linked to care (*`r personabuse_eligible_ltc_percent` of all Person abuse linkage cases, `r personabuse_eligible_ltc`/`r personabuse_ltc_cases`*), and the reasons the remaining `r personabuse_ineligible_ltc` were "ineligible" are noted in the flow diagram.

Bella is currently working on `r personabuse_in_progress` of these Person abuse linkage cases (*`r personabuse_in_progress_90days_percent` of which have been open for more than 90 days*), and therefore has closed a total of `r personabuse_closed_case` thus far (*`r personabuse_closed_case_percent` of all "eligible" Person abuse linkage cases, `r personabuse_closed_case`/`r personabuse_eligible_ltc`*). Out of those cases closed, a total of `r personabuse_not_linked` were unable to be linked to care (*`r personabuse_not_linked_percent` of all closed Person abuse linkage cases, `r personabuse_not_linked`/`r personabuse_closed_case`*), with the reasons as to why are shown in the flow diagram. These reasons are not mutually exclusive, and there could be multiple reasons why those linkage cases were unsuccessful.


```{r, echo=FALSE, warning=FALSE}
#| lightbox:
#|   description: Person Abuse Linkage Flow Diagram


grid_data <- tibble(x= 1:100, y= 1:100)

grid_data %>% 
  ggplot(aes(x, y)) +
  scale_x_continuous(minor_breaks = seq(10, 100, 10)) +
  scale_y_continuous(minor_breaks = seq(10, 100, 10)) +
  theme_linedraw() ->
  grid


grid +
  # Person personabuse Linkage Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = 'black',
            fill = 'lightcoral', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 97, label = 'Person Abuse Linkage Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 93, label = personabuse_ltc_cases, size = 2, color = 'red2') +
  
  # Ineligible for Linkage
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 52.5, y = 82, label = 'Ineligible for Linkage', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 78, label = personabuse_ineligible_ltc, size = 2, color = 'red2') +
  annotate('text', x = 60, y = 78, label = personabuse_ineligible_ltc_percent, size = 2, color = 'firebrick4') +
  
  
  # Reasons Ineligible for Linkage
  geom_rect(xmin = 83, xmax = 100, ymin = 75, ymax = 85, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 85, label = 'Already Linked', size = 2) +
  annotate('text', x = 87, y = 82, label = '        Deceased', size = 2) +
  annotate('text', x = 87, y = 79, label = '    Incarcerated', size = 2) +
  annotate('text', x = 87, y = 76, label = '          Declined', size = 2) +
  annotate('text', x = 87, y = 73, label = 'Ongoing linkage ', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 85, label = personabuse_already_linked, size = 2, color = 'red2') +
  annotate('text', x = 98, y = 85, label = personabuse_already_linked_percent, size = 2, color = 'firebrick4') +
  annotate('text', x = 94, y = 82, label = personabuse_deceased, size = 2, color = 'red2') +
  annotate('text', x = 98, y = 82, label = personabuse_deceased_percent, size = 2, color = 'firebrick4') +
  annotate('text', x = 94, y = 79, label = personabuse_incarcerated, size = 2, color = 'red2') +
  annotate('text', x = 98, y = 79, label = personabuse_incarcerated_percent, size = 2, color = 'firebrick4') +
  annotate('text', x = 94, y = 76, label = personabuse_linkage_declined, size = 2, color = 'red2') +
  annotate('text', x = 98, y = 76, label = personabuse_linkage_declined_percent, size = 2, color = 'firebrick4') +
  annotate('text', x = 94, y = 73, label = personabuse_ongoing_linkage, size = 2, color = 'red2') +
  annotate('text', x = 98, y = 73, label = personabuse_ongoing_linkage_percent, size = 2, color = 'firebrick4') +
  
  
  # Eligible for Linkage
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = 'black',
            fill = 'lightcoral', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 67, label = 'Eligible for Linkage', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 63, label = personabuse_eligible_ltc, size = 2, color = 'red2') +
  annotate('text', x = 19, y = 63, label = personabuse_eligible_ltc_percent, size = 2, color = 'firebrick4') +
  
  
  # In Progress
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 52, label = 'In Progress', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 48, label = personabuse_in_progress, size = 2, color = 'red2') +
  annotate('text', x = 60, y = 48, label = personabuse_in_progress_percent, size = 2, color = 'firebrick4') +
  
  
  # In Progress over 90 days
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 52, y = 42, label = '>90 days:', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 56, y = 42, label = personabuse_in_progress_90days, size = 2, color = 'red2') +
  annotate('text', x = 60, y = 42, label = personabuse_in_progress_90days_percent, size = 2, color = 'firebrick4') +
  
  
  # Closed Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = 'black',
            fill = 'lightcoral', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 37, label = 'Closed Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 33, label = personabuse_closed_case, size = 2, color = 'red2') +
  annotate('text', x = 19, y = 33, label = personabuse_closed_case_percent, size = 2, color = 'firebrick4') +
  
  
  # Not Linked
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 22, label = 'Not Linked', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 18, label = personabuse_not_linked, size = 2, color = 'red2') +
  annotate('text', x = 60, y = 18, label = personabuse_not_linked_percent, size = 2, color = 'firebrick4') +
  
  
  # Reasons Not Linked
  geom_rect(xmin = 83, xmax = 100, ymin = 0, ymax = 30, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 26, label = 'Med Staff interferes    ', size = 2) +
  annotate('text', x = 87, y = 23, label = '  Family interferes', size = 2) +
  annotate('text', x = 87, y = 20, label = '    Refuses to talk', size = 2) +
  annotate('text', x = 87, y = 17, label = '    Personal safety', size = 2) +
  annotate('text', x = 87, y = 14, label = '    Medical course', size = 2) +
  annotate('text', x = 87, y = 11, label = 'Inability to contact', size = 2) +
  annotate('text', x = 87, y = 8, label = ' Language barrier', size = 2) +
  annotate('text', x = 87, y = 5, label = '                   Other', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 0, ymax = 30, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 26, label = personabuse_not_linked_med_staff, size = 2, color = 'red2') +
  annotate('text', x = 98, y = 26, label = personabuse_not_linked_med_staff_percent, size = 2, color = 'firebrick4') +
  annotate('text', x = 94, y = 23, label = personabuse_not_linked_family, size = 2, color = 'red2') +
  annotate('text', x = 98, y = 23, label = personabuse_not_linked_family_percent, size = 2, color = 'firebrick4') +
  annotate('text', x = 94, y = 20, label = personabuse_not_linked_not_talking, size = 2, color = 'red2') +
  annotate('text', x = 98, y = 20, label = personabuse_not_linked_not_talking_percent, size = 2, color = 'firebrick4') +
  annotate('text', x = 94, y = 17, label = personabuse_not_linked_safety, size = 2, color = 'red2') +
  annotate('text', x = 98, y = 17, label = personabuse_not_linked_safety_percent, size = 2, color = 'firebrick4') +
  annotate('text', x = 94, y = 14, label = personabuse_not_linked_medical, size = 2, color = 'red2') +
  annotate('text', x = 98, y = 14, label = personabuse_not_linked_medical_percent, size = 2, color = 'firebrick4') +
  annotate('text', x = 94, y = 11, label = personabuse_not_linked_contact, size = 2, color = 'red2') +
  annotate('text', x = 98, y = 11, label = personabuse_not_linked_contact_percent, size = 2, color = 'firebrick4') +
  annotate('text', x = 94, y = 8, label = personabuse_not_linked_language, size = 2, color = 'red2') +
  annotate('text', x = 98, y = 8, label = personabuse_not_linked_language_percent, size = 2, color = 'firebrick4') +
  annotate('text', x = 94, y = 5, label = personabuse_not_linked_other, size = 2, color = 'red2') +
  annotate('text', x = 98, y = 5, label = personabuse_not_linked_other_percent, size = 2, color = 'firebrick4') +
  
  
  # Linked to Care
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = 'black',
            fill = 'lightcoral', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 7, label = 'Linked to Care', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 3, label = personabuse_linked, size = 2, color = 'red2') +
  annotate('text', x = 19, y = 3, label = personabuse_linked_percent, size = 2, color = 'firebrick4') +
  
  
  # Down Arrow 1
  geom_segment(
    x = 10.5, xend = 10.5, y = 90, yend = 70, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 2
  geom_segment(
    x = 10.5, xend = 10.5, y = 60, yend = 40, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 3
  geom_segment(
    x = 10.5, xend = 10.5, y = 30, yend = 10, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Right Arrow 1
  geom_segment(
    x = 10.5, xend = 41, y = 80, yend = 80, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 2
  geom_segment(
    x = 10.5, xend = 41, y = 50, yend = 50, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 3
  geom_segment(
    x = 10.5, xend = 41, y = 20, yend = 20, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Line 1
  geom_segment(
    x = 63, xend = 81, y = 80, yend = 80, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted") +
  
  # Right Line 2
  geom_segment(
    x = 63, xend = 80, y = 20, yend = 20, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted")->
  grid

grid + theme_void()

```
<br>

Therefore, Bella has **successfully linked a total of `r personabuse_linked` Person abuse linkage cases** (*`r personabuse_linked_percent` of all closed Person abuse linkage cases, `r personabuse_linked`/`r personabuse_closed_case`*).


##### General health

The General health Linkage Flow Diagram is provided here for Bella's General health linkage cases.

Bella has worked on a total of **`r general_ltc_cases` General health linkage cases** (*`r general_ltc_cases_percent` of all linkage cases, `r general_ltc_cases`/`r ltc_cases`*).

A total of `r general_eligible_ltc` of these cases are "eligible" to be linked to care (*`r general_eligible_ltc_percent` of all General health linkage cases, `r general_eligible_ltc`/`r general_ltc_cases`*), and the reasons the remaining `r general_ineligible_ltc` were "ineligible" are noted in the flow diagram.

Bella is currently working on `r general_in_progress` of these General health linkage cases (*`r general_in_progress_90days_percent` of which have been open for more than 90 days*), and therefore has closed a total of `r general_closed_case` thus far (*`r general_closed_case_percent` of all "eligible" General health linkage cases, `r general_closed_case`/`r general_eligible_ltc`*). Out of those cases closed, a total of `r general_not_linked` were unable to be linked to care (*`r general_not_linked_percent` of all closed General health linkage cases, `r general_not_linked`/`r general_closed_case`*), with the reasons as to why are shown in the flow diagram. These reasons are not mutually exclusive, and there could be multiple reasons why those linkage cases were unsuccessful.


```{r, echo=FALSE, warning=FALSE}
#| lightbox:
#|   description: General Health Linkage Flow Diagram


grid_data <- tibble(x= 1:100, y= 1:100)

grid_data %>% 
  ggplot(aes(x, y)) +
  scale_x_continuous(minor_breaks = seq(10, 100, 10)) +
  scale_y_continuous(minor_breaks = seq(10, 100, 10)) +
  theme_linedraw() ->
  grid


grid +
  # General Health Linkage Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = 'black',
            fill = 'papayawhip', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 97, label = 'General Health Linkage Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 93, label = general_ltc_cases, size = 2, color = 'tan3') +
  
  # Ineligible for Linkage
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 52.5, y = 82, label = 'Ineligible for Linkage', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 78, label = general_ineligible_ltc, size = 2, color = 'tan3') +
  annotate('text', x = 60, y = 78, label = general_ineligible_ltc_percent, size = 2, color = 'wheat4') +
  
  
  # Reasons Ineligible for Linkage
  geom_rect(xmin = 83, xmax = 100, ymin = 75, ymax = 85, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 85, label = 'Already Linked', size = 2) +
  annotate('text', x = 87, y = 82, label = '        Deceased', size = 2) +
  annotate('text', x = 87, y = 79, label = '    Incarcerated', size = 2) +
  annotate('text', x = 87, y = 76, label = '          Declined', size = 2) +
  annotate('text', x = 87, y = 73, label = 'Ongoing linkage ', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 85, label = general_already_linked, size = 2, color = 'tan3') +
  annotate('text', x = 98, y = 85, label = general_already_linked_percent, size = 2, color = 'wheat4') +
  annotate('text', x = 94, y = 82, label = general_deceased, size = 2, color = 'tan3') +
  annotate('text', x = 98, y = 82, label = general_deceased_percent, size = 2, color = 'wheat4') +
  annotate('text', x = 94, y = 79, label = general_incarcerated, size = 2, color = 'tan3') +
  annotate('text', x = 98, y = 79, label = general_incarcerated_percent, size = 2, color = 'wheat4') +
  annotate('text', x = 94, y = 76, label = general_linkage_declined, size = 2, color = 'tan3') +
  annotate('text', x = 98, y = 76, label = general_linkage_declined_percent, size = 2, color = 'wheat4') +
  annotate('text', x = 94, y = 73, label = general_ongoing_linkage, size = 2, color = 'tan3') +
  annotate('text', x = 98, y = 73, label = general_ongoing_linkage_percent, size = 2, color = 'wheat4') +
  
  
  # Eligible for Linkage
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = 'black',
            fill = 'papayawhip', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 67, label = 'Eligible for Linkage', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 63, label = general_eligible_ltc, size = 2, color = 'tan3') +
  annotate('text', x = 19, y = 63, label = general_eligible_ltc_percent, size = 2, color = 'wheat4') +
  
  
  # In Progress
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 52, label = 'In Progress', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 48, label = general_in_progress, size = 2, color = 'tan3') +
  annotate('text', x = 60, y = 48, label = general_in_progress_percent, size = 2, color = 'wheat4') +
  
  
  # In Progress over 90 days
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 52, y = 42, label = '>90 days:', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 56, y = 42, label = general_in_progress_90days, size = 2, color = 'tan3') +
  annotate('text', x = 60, y = 42, label = general_in_progress_90days_percent, size = 2, color = 'wheat4') +
  
  
  # Closed Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = 'black',
            fill = 'papayawhip', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 37, label = 'Closed Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 33, label = general_closed_case, size = 2, color = 'tan3') +
  annotate('text', x = 19, y = 33, label = general_closed_case_percent, size = 2, color = 'wheat4') +
  
  
  # Not Linked
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 22, label = 'Not Linked', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 18, label = general_not_linked, size = 2, color = 'tan3') +
  annotate('text', x = 60, y = 18, label = general_not_linked_percent, size = 2, color = 'wheat4') +
  
  
  # Reasons Not Linked
  geom_rect(xmin = 83, xmax = 100, ymin = 0, ymax = 30, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 26, label = 'Med Staff interferes    ', size = 2) +
  annotate('text', x = 87, y = 23, label = '  Family interferes', size = 2) +
  annotate('text', x = 87, y = 20, label = '    Refuses to talk', size = 2) +
  annotate('text', x = 87, y = 17, label = '    Personal safety', size = 2) +
  annotate('text', x = 87, y = 14, label = '    Medical course', size = 2) +
  annotate('text', x = 87, y = 11, label = 'Inability to contact', size = 2) +
  annotate('text', x = 87, y = 8, label = ' Language barrier', size = 2) +
  annotate('text', x = 87, y = 5, label = '                   Other', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 0, ymax = 30, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 26, label = general_not_linked_med_staff, size = 2, color = 'tan3') +
  annotate('text', x = 98, y = 26, label = general_not_linked_med_staff_percent, size = 2, color = 'wheat4') +
  annotate('text', x = 94, y = 23, label = general_not_linked_family, size = 2, color = 'tan3') +
  annotate('text', x = 98, y = 23, label = general_not_linked_family_percent, size = 2, color = 'wheat4') +
  annotate('text', x = 94, y = 20, label = general_not_linked_not_talking, size = 2, color = 'tan3') +
  annotate('text', x = 98, y = 20, label = general_not_linked_not_talking_percent, size = 2, color = 'wheat4') +
  annotate('text', x = 94, y = 17, label = general_not_linked_safety, size = 2, color = 'tan3') +
  annotate('text', x = 98, y = 17, label = general_not_linked_safety_percent, size = 2, color = 'wheat4') +
  annotate('text', x = 94, y = 14, label = general_not_linked_medical, size = 2, color = 'tan3') +
  annotate('text', x = 98, y = 14, label = general_not_linked_medical_percent, size = 2, color = 'wheat4') +
  annotate('text', x = 94, y = 11, label = general_not_linked_contact, size = 2, color = 'tan3') +
  annotate('text', x = 98, y = 11, label = general_not_linked_contact_percent, size = 2, color = 'wheat4') +
  annotate('text', x = 94, y = 8, label = general_not_linked_language, size = 2, color = 'tan3') +
  annotate('text', x = 98, y = 8, label = general_not_linked_language_percent, size = 2, color = 'wheat4') +
  annotate('text', x = 94, y = 5, label = general_not_linked_other, size = 2, color = 'tan3') +
  annotate('text', x = 98, y = 5, label = general_not_linked_other_percent, size = 2, color = 'wheat4') +
  
  
  # Linked to Care
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = 'black',
            fill = 'papayawhip', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 7, label = 'Linked to Care', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 3, label = general_linked, size = 2, color = 'tan3') +
  annotate('text', x = 19, y = 3, label = general_linked_percent, size = 2, color = 'wheat4') +
  
  
  # Down Arrow 1
  geom_segment(
    x = 10.5, xend = 10.5, y = 90, yend = 70, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 2
  geom_segment(
    x = 10.5, xend = 10.5, y = 60, yend = 40, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 3
  geom_segment(
    x = 10.5, xend = 10.5, y = 30, yend = 10, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Right Arrow 1
  geom_segment(
    x = 10.5, xend = 41, y = 80, yend = 80, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 2
  geom_segment(
    x = 10.5, xend = 41, y = 50, yend = 50, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 3
  geom_segment(
    x = 10.5, xend = 41, y = 20, yend = 20, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Line 1
  geom_segment(
    x = 63, xend = 81, y = 80, yend = 80, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted") +
  
  # Right Line 2
  geom_segment(
    x = 63, xend = 80, y = 20, yend = 20, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted")->
  grid

grid + theme_void()

```
<br>

Therefore, Bella has **successfully linked a total of `r general_linked` General health linkage cases** (*`r general_linked_percent` of all closed General health linkage cases, `r general_linked`/`r general_closed_case`*).


##### Other Linkage 

The Other Linkage Flow Diagram is provided here for Bella's Other linkage cases.

Bella has worked on a total of **`r other_ltc_cases` Other linkage cases** (*`r other_ltc_cases_percent` of all linkage cases, `r other_ltc_cases`/`r ltc_cases`*).

A total of `r other_eligible_ltc` of these cases are "eligible" to be linked to care (*`r other_eligible_ltc_percent` of all Other linkage cases, `r other_eligible_ltc`/`r other_ltc_cases`*), and the reasons the remaining `r other_ineligible_ltc` were "ineligible" are noted in the flow diagram.

Bella is currently working on `r other_in_progress` of these Other linkage cases (*`r other_in_progress_90days_percent` of which have been open for more than 90 days*), and therefore has closed a total of `r other_closed_case` thus far (*`r other_closed_case_percent` of all "eligible" Other linkage cases, `r other_closed_case`/`r other_eligible_ltc`*). Out of those cases closed, a total of `r other_not_linked` were unable to be linked to care (*`r other_not_linked_percent` of all closed Other linkage cases, `r other_not_linked`/`r other_closed_case`*), with the reasons as to why are shown in the flow diagram. These reasons are not mutually exclusive, and there could be multiple reasons why those linkage cases were unsuccessful.


```{r, echo=FALSE, warning=FALSE}
#| lightbox:
#|   description: Other Linkage Flow Diagram


grid_data <- tibble(x= 1:100, y= 1:100)

grid_data %>% 
  ggplot(aes(x, y)) +
  scale_x_continuous(minor_breaks = seq(10, 100, 10)) +
  scale_y_continuous(minor_breaks = seq(10, 100, 10)) +
  theme_linedraw() ->
  grid


grid +
  # Other Linkage Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = 'black',
            fill = 'gray92', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 97, label = 'Other Linkage Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 90, ymax = 100, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 93, label = other_ltc_cases, size = 2, color = 'seashell4') +
  
  # Ineligible for Linkage
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 52.5, y = 82, label = 'Ineligible for Linkage', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 78, label = other_ineligible_ltc, size = 2, color = 'seashell4') +
  annotate('text', x = 60, y = 78, label = other_ineligible_ltc_percent, size = 2, color = 'slategray') +
  
  
  # Reasons Ineligible for Linkage
  geom_rect(xmin = 83, xmax = 100, ymin = 75, ymax = 85, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 85, label = 'Already Linked', size = 2) +
  annotate('text', x = 87, y = 82, label = '        Deceased', size = 2) +
  annotate('text', x = 87, y = 79, label = '    Incarcerated', size = 2) +
  annotate('text', x = 87, y = 76, label = '          Declined', size = 2) +
  annotate('text', x = 87, y = 73, label = 'Ongoing linkage ', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 75, ymax = 85, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 85, label = other_already_linked, size = 2, color = 'seashell4') +
  annotate('text', x = 98, y = 85, label = other_already_linked_percent, size = 2, color = 'slategray') +
  annotate('text', x = 94, y = 82, label = other_deceased, size = 2, color = 'seashell4') +
  annotate('text', x = 98, y = 82, label = other_deceased_percent, size = 2, color = 'slategray') +
  annotate('text', x = 94, y = 79, label = other_incarcerated, size = 2, color = 'seashell4') +
  annotate('text', x = 98, y = 79, label = other_incarcerated_percent, size = 2, color = 'slategray') +
  annotate('text', x = 94, y = 76, label = other_linkage_declined, size = 2, color = 'seashell4') +
  annotate('text', x = 98, y = 76, label = other_linkage_declined_percent, size = 2, color = 'slategray') +
  annotate('text', x = 94, y = 73, label = other_ongoing_linkage, size = 2, color = 'seashell4') +
  annotate('text', x = 98, y = 73, label = other_ongoing_linkage_percent, size = 2, color = 'slategray') +
  
  
  # Eligible for Linkage
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = 'black',
            fill = 'gray92', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 67, label = 'Eligible for Linkage', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 60, ymax = 70, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 63, label = other_eligible_ltc, size = 2, color = 'seashell4') +
  annotate('text', x = 19, y = 63, label = other_eligible_ltc_percent, size = 2, color = 'slategray') +
  
  
  # In Progress
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 52, label = 'In Progress', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 45, ymax = 55, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 48, label = other_in_progress, size = 2, color = 'seashell4') +
  annotate('text', x = 60, y = 48, label = other_in_progress_percent, size = 2, color = 'slategray') +
  
  
  # In Progress over 90 days
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = 'white', size = 0.25, size = 0.25) +
  annotate('text', x = 52, y = 42, label = '>90 days:', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 37, ymax = 44, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 56, y = 42, label = other_in_progress_90days, size = 2, color = 'seashell4') +
  annotate('text', x = 60, y = 42, label = other_in_progress_90days_percent, size = 2, color = 'slategray') +
  
  
  # Closed Cases
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = 'black',
            fill = 'gray92', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 37, label = 'Closed Cases', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 30, ymax = 40, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 33, label = other_closed_case, size = 2, color = 'seashell4') +
  annotate('text', x = 19, y = 33, label = other_closed_case_percent, size = 2, color = 'slategray') +
  
  
  # Not Linked
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = 'gray',
            fill = 'white', size = 0.25) +
  annotate('text', x = 50.5, y = 22, label = 'Not Linked', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 15, ymax = 25, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 51.5, y = 18, label = other_not_linked, size = 2, color = 'seashell4') +
  annotate('text', x = 60, y = 18, label = other_not_linked_percent, size = 2, color = 'slategray') +
  
  
  # Reasons Not Linked
  geom_rect(xmin = 83, xmax = 100, ymin = 0, ymax = 30, color = NA,
            fill = 'white', size = 0.25) +
  annotate('text', x = 87, y = 26, label = 'Med Staff interferes    ', size = 2) +
  annotate('text', x = 87, y = 23, label = '  Family interferes', size = 2) +
  annotate('text', x = 87, y = 20, label = '    Refuses to talk', size = 2) +
  annotate('text', x = 87, y = 17, label = '    Personal safety', size = 2) +
  annotate('text', x = 87, y = 14, label = '    Medical course', size = 2) +
  annotate('text', x = 87, y = 11, label = 'Inability to contact', size = 2) +
  annotate('text', x = 87, y = 8, label = ' Language barrier', size = 2) +
  annotate('text', x = 87, y = 5, label = '                   Other', size = 2) +
  geom_rect(xmin = 41, xmax = 63, ymin = 0, ymax = 30, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 94, y = 26, label = other_not_linked_med_staff, size = 2, color = 'seashell4') +
  annotate('text', x = 98, y = 26, label = other_not_linked_med_staff_percent, size = 2, color = 'slategray') +
  annotate('text', x = 94, y = 23, label = other_not_linked_family, size = 2, color = 'seashell4') +
  annotate('text', x = 98, y = 23, label = other_not_linked_family_percent, size = 2, color = 'slategray') +
  annotate('text', x = 94, y = 20, label = other_not_linked_not_talking, size = 2, color = 'seashell4') +
  annotate('text', x = 98, y = 20, label = other_not_linked_not_talking_percent, size = 2, color = 'slategray') +
  annotate('text', x = 94, y = 17, label = other_not_linked_safety, size = 2, color = 'seashell4') +
  annotate('text', x = 98, y = 17, label = other_not_linked_safety_percent, size = 2, color = 'slategray') +
  annotate('text', x = 94, y = 14, label = other_not_linked_medical, size = 2, color = 'seashell4') +
  annotate('text', x = 98, y = 14, label = other_not_linked_medical_percent, size = 2, color = 'slategray') +
  annotate('text', x = 94, y = 11, label = other_not_linked_contact, size = 2, color = 'seashell4') +
  annotate('text', x = 98, y = 11, label = other_not_linked_contact_percent, size = 2, color = 'slategray') +
  annotate('text', x = 94, y = 8, label = other_not_linked_language, size = 2, color = 'seashell4') +
  annotate('text', x = 98, y = 8, label = other_not_linked_language_percent, size = 2, color = 'slategray') +
  annotate('text', x = 94, y = 5, label = other_not_linked_other, size = 2, color = 'seashell4') +
  annotate('text', x = 98, y = 5, label = other_not_linked_other_percent, size = 2, color = 'slategray') +
  
  
  # Linked to Care
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = 'black',
            fill = 'gray92', size = 0.25, size = 0.25) +
  annotate('text', x = 10.5, y = 7, label = 'Linked to Care', size = 2) +
  geom_rect(xmin = 0, xmax = 22, ymin = 0, ymax = 10, color = NA,
            fill = NA, size = 0.25) +
  annotate('text', x = 10.5, y = 3, label = other_linked, size = 2, color = 'seashell4') +
  annotate('text', x = 19, y = 3, label = other_linked_percent, size = 2, color = 'slategray') +
  
  
  # Down Arrow 1
  geom_segment(
    x = 10.5, xend = 10.5, y = 90, yend = 70, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 2
  geom_segment(
    x = 10.5, xend = 10.5, y = 60, yend = 40, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Down Arrow 3
  geom_segment(
    x = 10.5, xend = 10.5, y = 30, yend = 10, 
    size = 0.15, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(2,"mm"), type = "closed")) +
  
  # Right Arrow 1
  geom_segment(
    x = 10.5, xend = 41, y = 80, yend = 80, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 2
  geom_segment(
    x = 10.5, xend = 41, y = 50, yend = 50, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Arrow 3
  geom_segment(
    x = 10.5, xend = 41, y = 20, yend = 20, 
    size = 0.05, linejoin = "mitre", lineend = "butt",
    arrow = arrow(length = unit(1,"mm"), type = "closed"), color = 'darkgray') +
  
  # Right Line 1
  geom_segment(
    x = 63, xend = 81, y = 80, yend = 80, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted") +
  
  # Right Line 2
  geom_segment(
    x = 63, xend = 80, y = 20, yend = 20, 
    size = 0.15, linejoin = "mitre", lineend = "butt", linetype = "dotted")->
  grid

grid + theme_void()

```
<br>

Therefore, Bella has **successfully linked a total of `r other_linked` Other linkage cases** (*`r other_linked_percent` of all closed Other linkage cases, `r other_linked`/`r other_closed_case`*).

:::

:::

